
CapteurLidar.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a68c  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000013c  0800a824  0800a824  0001a824  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a960  0800a960  00020078  2**0
                  CONTENTS
  4 .ARM          00000008  0800a960  0800a960  0001a960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800a968  0800a968  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a968  0800a968  0001a968  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800a96c  0800a96c  0001a96c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  0800a970  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000190  20000078  0800a9e8  00020078  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000208  0800a9e8  00020208  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000f478  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001fe4  00000000  00000000  0002f520  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000ee8  00000000  00000000  00031508  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000e08  00000000  00000000  000323f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00017214  00000000  00000000  000331f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000c602  00000000  00000000  0004a40c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0008fdb8  00000000  00000000  00056a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000e67c6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000042c4  00000000  00000000  000e6844  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000078 	.word	0x20000078
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800a80c 	.word	0x0800a80c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	2000007c 	.word	0x2000007c
 80001d4:	0800a80c 	.word	0x0800a80c

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000316:	f1a4 0401 	sub.w	r4, r4, #1
 800031a:	d1e9      	bne.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmpun>:
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x10>
 8000a8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a92:	d10a      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__aeabi_dcmpun+0x20>
 8000a9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa2:	d102      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	f04f 0001 	mov.w	r0, #1
 8000aae:	4770      	bx	lr

08000ab0 <__aeabi_d2iz>:
 8000ab0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ab4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab8:	d215      	bcs.n	8000ae6 <__aeabi_d2iz+0x36>
 8000aba:	d511      	bpl.n	8000ae0 <__aeabi_d2iz+0x30>
 8000abc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ac0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac4:	d912      	bls.n	8000aec <__aeabi_d2iz+0x3c>
 8000ac6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ace:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ad6:	fa23 f002 	lsr.w	r0, r3, r2
 8000ada:	bf18      	it	ne
 8000adc:	4240      	negne	r0, r0
 8000ade:	4770      	bx	lr
 8000ae0:	f04f 0000 	mov.w	r0, #0
 8000ae4:	4770      	bx	lr
 8000ae6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aea:	d105      	bne.n	8000af8 <__aeabi_d2iz+0x48>
 8000aec:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000af0:	bf08      	it	eq
 8000af2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000af6:	4770      	bx	lr
 8000af8:	f04f 0000 	mov.w	r0, #0
 8000afc:	4770      	bx	lr
 8000afe:	bf00      	nop

08000b00 <__aeabi_d2uiz>:
 8000b00:	004a      	lsls	r2, r1, #1
 8000b02:	d211      	bcs.n	8000b28 <__aeabi_d2uiz+0x28>
 8000b04:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b08:	d211      	bcs.n	8000b2e <__aeabi_d2uiz+0x2e>
 8000b0a:	d50d      	bpl.n	8000b28 <__aeabi_d2uiz+0x28>
 8000b0c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b10:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b14:	d40e      	bmi.n	8000b34 <__aeabi_d2uiz+0x34>
 8000b16:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b1a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b1e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b22:	fa23 f002 	lsr.w	r0, r3, r2
 8000b26:	4770      	bx	lr
 8000b28:	f04f 0000 	mov.w	r0, #0
 8000b2c:	4770      	bx	lr
 8000b2e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b32:	d102      	bne.n	8000b3a <__aeabi_d2uiz+0x3a>
 8000b34:	f04f 30ff 	mov.w	r0, #4294967295
 8000b38:	4770      	bx	lr
 8000b3a:	f04f 0000 	mov.w	r0, #0
 8000b3e:	4770      	bx	lr

08000b40 <__aeabi_uldivmod>:
 8000b40:	b953      	cbnz	r3, 8000b58 <__aeabi_uldivmod+0x18>
 8000b42:	b94a      	cbnz	r2, 8000b58 <__aeabi_uldivmod+0x18>
 8000b44:	2900      	cmp	r1, #0
 8000b46:	bf08      	it	eq
 8000b48:	2800      	cmpeq	r0, #0
 8000b4a:	bf1c      	itt	ne
 8000b4c:	f04f 31ff 	movne.w	r1, #4294967295
 8000b50:	f04f 30ff 	movne.w	r0, #4294967295
 8000b54:	f000 b972 	b.w	8000e3c <__aeabi_idiv0>
 8000b58:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b5c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b60:	f000 f806 	bl	8000b70 <__udivmoddi4>
 8000b64:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b68:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b6c:	b004      	add	sp, #16
 8000b6e:	4770      	bx	lr

08000b70 <__udivmoddi4>:
 8000b70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b74:	9e08      	ldr	r6, [sp, #32]
 8000b76:	4604      	mov	r4, r0
 8000b78:	4688      	mov	r8, r1
 8000b7a:	2b00      	cmp	r3, #0
 8000b7c:	d14b      	bne.n	8000c16 <__udivmoddi4+0xa6>
 8000b7e:	428a      	cmp	r2, r1
 8000b80:	4615      	mov	r5, r2
 8000b82:	d967      	bls.n	8000c54 <__udivmoddi4+0xe4>
 8000b84:	fab2 f282 	clz	r2, r2
 8000b88:	b14a      	cbz	r2, 8000b9e <__udivmoddi4+0x2e>
 8000b8a:	f1c2 0720 	rsb	r7, r2, #32
 8000b8e:	fa01 f302 	lsl.w	r3, r1, r2
 8000b92:	fa20 f707 	lsr.w	r7, r0, r7
 8000b96:	4095      	lsls	r5, r2
 8000b98:	ea47 0803 	orr.w	r8, r7, r3
 8000b9c:	4094      	lsls	r4, r2
 8000b9e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ba2:	0c23      	lsrs	r3, r4, #16
 8000ba4:	fbb8 f7fe 	udiv	r7, r8, lr
 8000ba8:	fa1f fc85 	uxth.w	ip, r5
 8000bac:	fb0e 8817 	mls	r8, lr, r7, r8
 8000bb0:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bb4:	fb07 f10c 	mul.w	r1, r7, ip
 8000bb8:	4299      	cmp	r1, r3
 8000bba:	d909      	bls.n	8000bd0 <__udivmoddi4+0x60>
 8000bbc:	18eb      	adds	r3, r5, r3
 8000bbe:	f107 30ff 	add.w	r0, r7, #4294967295
 8000bc2:	f080 811b 	bcs.w	8000dfc <__udivmoddi4+0x28c>
 8000bc6:	4299      	cmp	r1, r3
 8000bc8:	f240 8118 	bls.w	8000dfc <__udivmoddi4+0x28c>
 8000bcc:	3f02      	subs	r7, #2
 8000bce:	442b      	add	r3, r5
 8000bd0:	1a5b      	subs	r3, r3, r1
 8000bd2:	b2a4      	uxth	r4, r4
 8000bd4:	fbb3 f0fe 	udiv	r0, r3, lr
 8000bd8:	fb0e 3310 	mls	r3, lr, r0, r3
 8000bdc:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000be0:	fb00 fc0c 	mul.w	ip, r0, ip
 8000be4:	45a4      	cmp	ip, r4
 8000be6:	d909      	bls.n	8000bfc <__udivmoddi4+0x8c>
 8000be8:	192c      	adds	r4, r5, r4
 8000bea:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bee:	f080 8107 	bcs.w	8000e00 <__udivmoddi4+0x290>
 8000bf2:	45a4      	cmp	ip, r4
 8000bf4:	f240 8104 	bls.w	8000e00 <__udivmoddi4+0x290>
 8000bf8:	3802      	subs	r0, #2
 8000bfa:	442c      	add	r4, r5
 8000bfc:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c00:	eba4 040c 	sub.w	r4, r4, ip
 8000c04:	2700      	movs	r7, #0
 8000c06:	b11e      	cbz	r6, 8000c10 <__udivmoddi4+0xa0>
 8000c08:	40d4      	lsrs	r4, r2
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	e9c6 4300 	strd	r4, r3, [r6]
 8000c10:	4639      	mov	r1, r7
 8000c12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c16:	428b      	cmp	r3, r1
 8000c18:	d909      	bls.n	8000c2e <__udivmoddi4+0xbe>
 8000c1a:	2e00      	cmp	r6, #0
 8000c1c:	f000 80eb 	beq.w	8000df6 <__udivmoddi4+0x286>
 8000c20:	2700      	movs	r7, #0
 8000c22:	e9c6 0100 	strd	r0, r1, [r6]
 8000c26:	4638      	mov	r0, r7
 8000c28:	4639      	mov	r1, r7
 8000c2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c2e:	fab3 f783 	clz	r7, r3
 8000c32:	2f00      	cmp	r7, #0
 8000c34:	d147      	bne.n	8000cc6 <__udivmoddi4+0x156>
 8000c36:	428b      	cmp	r3, r1
 8000c38:	d302      	bcc.n	8000c40 <__udivmoddi4+0xd0>
 8000c3a:	4282      	cmp	r2, r0
 8000c3c:	f200 80fa 	bhi.w	8000e34 <__udivmoddi4+0x2c4>
 8000c40:	1a84      	subs	r4, r0, r2
 8000c42:	eb61 0303 	sbc.w	r3, r1, r3
 8000c46:	2001      	movs	r0, #1
 8000c48:	4698      	mov	r8, r3
 8000c4a:	2e00      	cmp	r6, #0
 8000c4c:	d0e0      	beq.n	8000c10 <__udivmoddi4+0xa0>
 8000c4e:	e9c6 4800 	strd	r4, r8, [r6]
 8000c52:	e7dd      	b.n	8000c10 <__udivmoddi4+0xa0>
 8000c54:	b902      	cbnz	r2, 8000c58 <__udivmoddi4+0xe8>
 8000c56:	deff      	udf	#255	; 0xff
 8000c58:	fab2 f282 	clz	r2, r2
 8000c5c:	2a00      	cmp	r2, #0
 8000c5e:	f040 808f 	bne.w	8000d80 <__udivmoddi4+0x210>
 8000c62:	1b49      	subs	r1, r1, r5
 8000c64:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c68:	fa1f f885 	uxth.w	r8, r5
 8000c6c:	2701      	movs	r7, #1
 8000c6e:	fbb1 fcfe 	udiv	ip, r1, lr
 8000c72:	0c23      	lsrs	r3, r4, #16
 8000c74:	fb0e 111c 	mls	r1, lr, ip, r1
 8000c78:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c7c:	fb08 f10c 	mul.w	r1, r8, ip
 8000c80:	4299      	cmp	r1, r3
 8000c82:	d907      	bls.n	8000c94 <__udivmoddi4+0x124>
 8000c84:	18eb      	adds	r3, r5, r3
 8000c86:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000c8a:	d202      	bcs.n	8000c92 <__udivmoddi4+0x122>
 8000c8c:	4299      	cmp	r1, r3
 8000c8e:	f200 80cd 	bhi.w	8000e2c <__udivmoddi4+0x2bc>
 8000c92:	4684      	mov	ip, r0
 8000c94:	1a59      	subs	r1, r3, r1
 8000c96:	b2a3      	uxth	r3, r4
 8000c98:	fbb1 f0fe 	udiv	r0, r1, lr
 8000c9c:	fb0e 1410 	mls	r4, lr, r0, r1
 8000ca0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000ca4:	fb08 f800 	mul.w	r8, r8, r0
 8000ca8:	45a0      	cmp	r8, r4
 8000caa:	d907      	bls.n	8000cbc <__udivmoddi4+0x14c>
 8000cac:	192c      	adds	r4, r5, r4
 8000cae:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cb2:	d202      	bcs.n	8000cba <__udivmoddi4+0x14a>
 8000cb4:	45a0      	cmp	r8, r4
 8000cb6:	f200 80b6 	bhi.w	8000e26 <__udivmoddi4+0x2b6>
 8000cba:	4618      	mov	r0, r3
 8000cbc:	eba4 0408 	sub.w	r4, r4, r8
 8000cc0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000cc4:	e79f      	b.n	8000c06 <__udivmoddi4+0x96>
 8000cc6:	f1c7 0c20 	rsb	ip, r7, #32
 8000cca:	40bb      	lsls	r3, r7
 8000ccc:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000cd0:	ea4e 0e03 	orr.w	lr, lr, r3
 8000cd4:	fa01 f407 	lsl.w	r4, r1, r7
 8000cd8:	fa20 f50c 	lsr.w	r5, r0, ip
 8000cdc:	fa21 f30c 	lsr.w	r3, r1, ip
 8000ce0:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000ce4:	4325      	orrs	r5, r4
 8000ce6:	fbb3 f9f8 	udiv	r9, r3, r8
 8000cea:	0c2c      	lsrs	r4, r5, #16
 8000cec:	fb08 3319 	mls	r3, r8, r9, r3
 8000cf0:	fa1f fa8e 	uxth.w	sl, lr
 8000cf4:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000cf8:	fb09 f40a 	mul.w	r4, r9, sl
 8000cfc:	429c      	cmp	r4, r3
 8000cfe:	fa02 f207 	lsl.w	r2, r2, r7
 8000d02:	fa00 f107 	lsl.w	r1, r0, r7
 8000d06:	d90b      	bls.n	8000d20 <__udivmoddi4+0x1b0>
 8000d08:	eb1e 0303 	adds.w	r3, lr, r3
 8000d0c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000d10:	f080 8087 	bcs.w	8000e22 <__udivmoddi4+0x2b2>
 8000d14:	429c      	cmp	r4, r3
 8000d16:	f240 8084 	bls.w	8000e22 <__udivmoddi4+0x2b2>
 8000d1a:	f1a9 0902 	sub.w	r9, r9, #2
 8000d1e:	4473      	add	r3, lr
 8000d20:	1b1b      	subs	r3, r3, r4
 8000d22:	b2ad      	uxth	r5, r5
 8000d24:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d28:	fb08 3310 	mls	r3, r8, r0, r3
 8000d2c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000d30:	fb00 fa0a 	mul.w	sl, r0, sl
 8000d34:	45a2      	cmp	sl, r4
 8000d36:	d908      	bls.n	8000d4a <__udivmoddi4+0x1da>
 8000d38:	eb1e 0404 	adds.w	r4, lr, r4
 8000d3c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d40:	d26b      	bcs.n	8000e1a <__udivmoddi4+0x2aa>
 8000d42:	45a2      	cmp	sl, r4
 8000d44:	d969      	bls.n	8000e1a <__udivmoddi4+0x2aa>
 8000d46:	3802      	subs	r0, #2
 8000d48:	4474      	add	r4, lr
 8000d4a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000d4e:	fba0 8902 	umull	r8, r9, r0, r2
 8000d52:	eba4 040a 	sub.w	r4, r4, sl
 8000d56:	454c      	cmp	r4, r9
 8000d58:	46c2      	mov	sl, r8
 8000d5a:	464b      	mov	r3, r9
 8000d5c:	d354      	bcc.n	8000e08 <__udivmoddi4+0x298>
 8000d5e:	d051      	beq.n	8000e04 <__udivmoddi4+0x294>
 8000d60:	2e00      	cmp	r6, #0
 8000d62:	d069      	beq.n	8000e38 <__udivmoddi4+0x2c8>
 8000d64:	ebb1 050a 	subs.w	r5, r1, sl
 8000d68:	eb64 0403 	sbc.w	r4, r4, r3
 8000d6c:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000d70:	40fd      	lsrs	r5, r7
 8000d72:	40fc      	lsrs	r4, r7
 8000d74:	ea4c 0505 	orr.w	r5, ip, r5
 8000d78:	e9c6 5400 	strd	r5, r4, [r6]
 8000d7c:	2700      	movs	r7, #0
 8000d7e:	e747      	b.n	8000c10 <__udivmoddi4+0xa0>
 8000d80:	f1c2 0320 	rsb	r3, r2, #32
 8000d84:	fa20 f703 	lsr.w	r7, r0, r3
 8000d88:	4095      	lsls	r5, r2
 8000d8a:	fa01 f002 	lsl.w	r0, r1, r2
 8000d8e:	fa21 f303 	lsr.w	r3, r1, r3
 8000d92:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d96:	4338      	orrs	r0, r7
 8000d98:	0c01      	lsrs	r1, r0, #16
 8000d9a:	fbb3 f7fe 	udiv	r7, r3, lr
 8000d9e:	fa1f f885 	uxth.w	r8, r5
 8000da2:	fb0e 3317 	mls	r3, lr, r7, r3
 8000da6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000daa:	fb07 f308 	mul.w	r3, r7, r8
 8000dae:	428b      	cmp	r3, r1
 8000db0:	fa04 f402 	lsl.w	r4, r4, r2
 8000db4:	d907      	bls.n	8000dc6 <__udivmoddi4+0x256>
 8000db6:	1869      	adds	r1, r5, r1
 8000db8:	f107 3cff 	add.w	ip, r7, #4294967295
 8000dbc:	d22f      	bcs.n	8000e1e <__udivmoddi4+0x2ae>
 8000dbe:	428b      	cmp	r3, r1
 8000dc0:	d92d      	bls.n	8000e1e <__udivmoddi4+0x2ae>
 8000dc2:	3f02      	subs	r7, #2
 8000dc4:	4429      	add	r1, r5
 8000dc6:	1acb      	subs	r3, r1, r3
 8000dc8:	b281      	uxth	r1, r0
 8000dca:	fbb3 f0fe 	udiv	r0, r3, lr
 8000dce:	fb0e 3310 	mls	r3, lr, r0, r3
 8000dd2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000dd6:	fb00 f308 	mul.w	r3, r0, r8
 8000dda:	428b      	cmp	r3, r1
 8000ddc:	d907      	bls.n	8000dee <__udivmoddi4+0x27e>
 8000dde:	1869      	adds	r1, r5, r1
 8000de0:	f100 3cff 	add.w	ip, r0, #4294967295
 8000de4:	d217      	bcs.n	8000e16 <__udivmoddi4+0x2a6>
 8000de6:	428b      	cmp	r3, r1
 8000de8:	d915      	bls.n	8000e16 <__udivmoddi4+0x2a6>
 8000dea:	3802      	subs	r0, #2
 8000dec:	4429      	add	r1, r5
 8000dee:	1ac9      	subs	r1, r1, r3
 8000df0:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000df4:	e73b      	b.n	8000c6e <__udivmoddi4+0xfe>
 8000df6:	4637      	mov	r7, r6
 8000df8:	4630      	mov	r0, r6
 8000dfa:	e709      	b.n	8000c10 <__udivmoddi4+0xa0>
 8000dfc:	4607      	mov	r7, r0
 8000dfe:	e6e7      	b.n	8000bd0 <__udivmoddi4+0x60>
 8000e00:	4618      	mov	r0, r3
 8000e02:	e6fb      	b.n	8000bfc <__udivmoddi4+0x8c>
 8000e04:	4541      	cmp	r1, r8
 8000e06:	d2ab      	bcs.n	8000d60 <__udivmoddi4+0x1f0>
 8000e08:	ebb8 0a02 	subs.w	sl, r8, r2
 8000e0c:	eb69 020e 	sbc.w	r2, r9, lr
 8000e10:	3801      	subs	r0, #1
 8000e12:	4613      	mov	r3, r2
 8000e14:	e7a4      	b.n	8000d60 <__udivmoddi4+0x1f0>
 8000e16:	4660      	mov	r0, ip
 8000e18:	e7e9      	b.n	8000dee <__udivmoddi4+0x27e>
 8000e1a:	4618      	mov	r0, r3
 8000e1c:	e795      	b.n	8000d4a <__udivmoddi4+0x1da>
 8000e1e:	4667      	mov	r7, ip
 8000e20:	e7d1      	b.n	8000dc6 <__udivmoddi4+0x256>
 8000e22:	4681      	mov	r9, r0
 8000e24:	e77c      	b.n	8000d20 <__udivmoddi4+0x1b0>
 8000e26:	3802      	subs	r0, #2
 8000e28:	442c      	add	r4, r5
 8000e2a:	e747      	b.n	8000cbc <__udivmoddi4+0x14c>
 8000e2c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e30:	442b      	add	r3, r5
 8000e32:	e72f      	b.n	8000c94 <__udivmoddi4+0x124>
 8000e34:	4638      	mov	r0, r7
 8000e36:	e708      	b.n	8000c4a <__udivmoddi4+0xda>
 8000e38:	4637      	mov	r7, r6
 8000e3a:	e6e9      	b.n	8000c10 <__udivmoddi4+0xa0>

08000e3c <__aeabi_idiv0>:
 8000e3c:	4770      	bx	lr
 8000e3e:	bf00      	nop

08000e40 <lcd_isConnected>:
/*----------Adresse de mon ecran LCD sur I2C----------*/
#define LCD_ADD 0x00 <<1 //
int prevTaille = 0;

int lcd_isConnected(void)
{
 8000e40:	b580      	push	{r7, lr}
 8000e42:	b082      	sub	sp, #8
 8000e44:	af00      	add	r7, sp, #0
	  int nblcd = 0;
 8000e46:	2300      	movs	r3, #0
 8000e48:	607b      	str	r3, [r7, #4]
	  if(HAL_I2C_IsDeviceReady(&hi2c1,LCD_ADD, 2,500)== HAL_OK)
 8000e4a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000e4e:	2202      	movs	r2, #2
 8000e50:	2100      	movs	r1, #0
 8000e52:	4806      	ldr	r0, [pc, #24]	; (8000e6c <lcd_isConnected+0x2c>)
 8000e54:	f006 fe5a 	bl	8007b0c <HAL_I2C_IsDeviceReady>
 8000e58:	4603      	mov	r3, r0
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d101      	bne.n	8000e62 <lcd_isConnected+0x22>
	  {
		  nblcd = 1;
 8000e5e:	2301      	movs	r3, #1
 8000e60:	607b      	str	r3, [r7, #4]
	  }
	  return nblcd;
 8000e62:	687b      	ldr	r3, [r7, #4]
}
 8000e64:	4618      	mov	r0, r3
 8000e66:	3708      	adds	r7, #8
 8000e68:	46bd      	mov	sp, r7
 8000e6a:	bd80      	pop	{r7, pc}
 8000e6c:	200000a4 	.word	0x200000a4

08000e70 <lcd_clear>:

void lcd_clear(void)
{
 8000e70:	b580      	push	{r7, lr}
 8000e72:	b084      	sub	sp, #16
 8000e74:	af02      	add	r7, sp, #8
	uint8_t cmdLCDCLEAR[2]={0x1B, 0x43};
 8000e76:	4b09      	ldr	r3, [pc, #36]	; (8000e9c <lcd_clear+0x2c>)
 8000e78:	881b      	ldrh	r3, [r3, #0]
 8000e7a:	80bb      	strh	r3, [r7, #4]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdLCDCLEAR,2,100);
 8000e7c:	1d3a      	adds	r2, r7, #4
 8000e7e:	2364      	movs	r3, #100	; 0x64
 8000e80:	9300      	str	r3, [sp, #0]
 8000e82:	2302      	movs	r3, #2
 8000e84:	2100      	movs	r1, #0
 8000e86:	4806      	ldr	r0, [pc, #24]	; (8000ea0 <lcd_clear+0x30>)
 8000e88:	f006 fa22 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(15);
 8000e8c:	200f      	movs	r0, #15
 8000e8e:	f005 fdff 	bl	8006a90 <HAL_Delay>
}
 8000e92:	bf00      	nop
 8000e94:	3708      	adds	r7, #8
 8000e96:	46bd      	mov	sp, r7
 8000e98:	bd80      	pop	{r7, pc}
 8000e9a:	bf00      	nop
 8000e9c:	0800a824 	.word	0x0800a824
 8000ea0:	200000a4 	.word	0x200000a4

08000ea4 <lcd_init>:

void lcd_init(void)
{
 8000ea4:	b580      	push	{r7, lr}
 8000ea6:	b086      	sub	sp, #24
 8000ea8:	af04      	add	r7, sp, #16
	/* Motif a afficher sur l'ecran 					   */
	/* Vient de la documentation du LCD 				   */
	/* Le tableau se lit comme une map 					   */
	/* Avec en haut a gacuhe le 0 0 qui donne 0x00  	   */
	/* Et avec le bas a droite qui est 15 15(F) donne 0xFF */
	uint8_t carreNoir[1]={0xFF};
 8000eaa:	23ff      	movs	r3, #255	; 0xff
 8000eac:	713b      	strb	r3, [r7, #4]
	uint8_t space[1]={0xFE};
 8000eae:	23fe      	movs	r3, #254	; 0xfe
 8000eb0:	703b      	strb	r3, [r7, #0]
/*-----------------------------------------------DEBUT-----------------------------------------------*/
	/*--------------------Premiere ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x01,1,carreNoir,1,100);
 8000eb2:	2364      	movs	r3, #100	; 0x64
 8000eb4:	9302      	str	r3, [sp, #8]
 8000eb6:	2301      	movs	r3, #1
 8000eb8:	9301      	str	r3, [sp, #4]
 8000eba:	1d3b      	adds	r3, r7, #4
 8000ebc:	9300      	str	r3, [sp, #0]
 8000ebe:	2301      	movs	r3, #1
 8000ec0:	2201      	movs	r2, #1
 8000ec2:	2100      	movs	r1, #0
 8000ec4:	48d6      	ldr	r0, [pc, #856]	; (8001220 <lcd_init+0x37c>)
 8000ec6:	f006 fd27 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8000eca:	2001      	movs	r0, #1
 8000ecc:	f005 fde0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8000ed0:	463a      	mov	r2, r7
 8000ed2:	2364      	movs	r3, #100	; 0x64
 8000ed4:	9300      	str	r3, [sp, #0]
 8000ed6:	2301      	movs	r3, #1
 8000ed8:	2100      	movs	r1, #0
 8000eda:	48d1      	ldr	r0, [pc, #836]	; (8001220 <lcd_init+0x37c>)
 8000edc:	f006 f9f8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000ee0:	2001      	movs	r0, #1
 8000ee2:	f005 fdd5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8000ee6:	463a      	mov	r2, r7
 8000ee8:	2364      	movs	r3, #100	; 0x64
 8000eea:	9300      	str	r3, [sp, #0]
 8000eec:	2301      	movs	r3, #1
 8000eee:	2100      	movs	r1, #0
 8000ef0:	48cb      	ldr	r0, [pc, #812]	; (8001220 <lcd_init+0x37c>)
 8000ef2:	f006 f9ed 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000ef6:	2001      	movs	r0, #1
 8000ef8:	f005 fdca 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8000efc:	463a      	mov	r2, r7
 8000efe:	2364      	movs	r3, #100	; 0x64
 8000f00:	9300      	str	r3, [sp, #0]
 8000f02:	2301      	movs	r3, #1
 8000f04:	2100      	movs	r1, #0
 8000f06:	48c6      	ldr	r0, [pc, #792]	; (8001220 <lcd_init+0x37c>)
 8000f08:	f006 f9e2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000f0c:	2001      	movs	r0, #1
 8000f0e:	f005 fdbf 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000f12:	1d3a      	adds	r2, r7, #4
 8000f14:	2364      	movs	r3, #100	; 0x64
 8000f16:	9300      	str	r3, [sp, #0]
 8000f18:	2301      	movs	r3, #1
 8000f1a:	2100      	movs	r1, #0
 8000f1c:	48c0      	ldr	r0, [pc, #768]	; (8001220 <lcd_init+0x37c>)
 8000f1e:	f006 f9d7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000f22:	2001      	movs	r0, #1
 8000f24:	f005 fdb4 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8000f28:	463a      	mov	r2, r7
 8000f2a:	2364      	movs	r3, #100	; 0x64
 8000f2c:	9300      	str	r3, [sp, #0]
 8000f2e:	2301      	movs	r3, #1
 8000f30:	2100      	movs	r1, #0
 8000f32:	48bb      	ldr	r0, [pc, #748]	; (8001220 <lcd_init+0x37c>)
 8000f34:	f006 f9cc 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000f38:	2001      	movs	r0, #1
 8000f3a:	f005 fda9 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000f3e:	1d3a      	adds	r2, r7, #4
 8000f40:	2364      	movs	r3, #100	; 0x64
 8000f42:	9300      	str	r3, [sp, #0]
 8000f44:	2301      	movs	r3, #1
 8000f46:	2100      	movs	r1, #0
 8000f48:	48b5      	ldr	r0, [pc, #724]	; (8001220 <lcd_init+0x37c>)
 8000f4a:	f006 f9c1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000f4e:	2001      	movs	r0, #1
 8000f50:	f005 fd9e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000f54:	1d3a      	adds	r2, r7, #4
 8000f56:	2364      	movs	r3, #100	; 0x64
 8000f58:	9300      	str	r3, [sp, #0]
 8000f5a:	2301      	movs	r3, #1
 8000f5c:	2100      	movs	r1, #0
 8000f5e:	48b0      	ldr	r0, [pc, #704]	; (8001220 <lcd_init+0x37c>)
 8000f60:	f006 f9b6 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000f64:	2001      	movs	r0, #1
 8000f66:	f005 fd93 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000f6a:	1d3a      	adds	r2, r7, #4
 8000f6c:	2364      	movs	r3, #100	; 0x64
 8000f6e:	9300      	str	r3, [sp, #0]
 8000f70:	2301      	movs	r3, #1
 8000f72:	2100      	movs	r1, #0
 8000f74:	48aa      	ldr	r0, [pc, #680]	; (8001220 <lcd_init+0x37c>)
 8000f76:	f006 f9ab 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000f7a:	2001      	movs	r0, #1
 8000f7c:	f005 fd88 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8000f80:	463a      	mov	r2, r7
 8000f82:	2364      	movs	r3, #100	; 0x64
 8000f84:	9300      	str	r3, [sp, #0]
 8000f86:	2301      	movs	r3, #1
 8000f88:	2100      	movs	r1, #0
 8000f8a:	48a5      	ldr	r0, [pc, #660]	; (8001220 <lcd_init+0x37c>)
 8000f8c:	f006 f9a0 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000f90:	2001      	movs	r0, #1
 8000f92:	f005 fd7d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8000f96:	463a      	mov	r2, r7
 8000f98:	2364      	movs	r3, #100	; 0x64
 8000f9a:	9300      	str	r3, [sp, #0]
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	2100      	movs	r1, #0
 8000fa0:	489f      	ldr	r0, [pc, #636]	; (8001220 <lcd_init+0x37c>)
 8000fa2:	f006 f995 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000fa6:	2001      	movs	r0, #1
 8000fa8:	f005 fd72 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000fac:	1d3a      	adds	r2, r7, #4
 8000fae:	2364      	movs	r3, #100	; 0x64
 8000fb0:	9300      	str	r3, [sp, #0]
 8000fb2:	2301      	movs	r3, #1
 8000fb4:	2100      	movs	r1, #0
 8000fb6:	489a      	ldr	r0, [pc, #616]	; (8001220 <lcd_init+0x37c>)
 8000fb8:	f006 f98a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000fbc:	2001      	movs	r0, #1
 8000fbe:	f005 fd67 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000fc2:	1d3a      	adds	r2, r7, #4
 8000fc4:	2364      	movs	r3, #100	; 0x64
 8000fc6:	9300      	str	r3, [sp, #0]
 8000fc8:	2301      	movs	r3, #1
 8000fca:	2100      	movs	r1, #0
 8000fcc:	4894      	ldr	r0, [pc, #592]	; (8001220 <lcd_init+0x37c>)
 8000fce:	f006 f97f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000fd2:	2001      	movs	r0, #1
 8000fd4:	f005 fd5c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000fd8:	1d3a      	adds	r2, r7, #4
 8000fda:	2364      	movs	r3, #100	; 0x64
 8000fdc:	9300      	str	r3, [sp, #0]
 8000fde:	2301      	movs	r3, #1
 8000fe0:	2100      	movs	r1, #0
 8000fe2:	488f      	ldr	r0, [pc, #572]	; (8001220 <lcd_init+0x37c>)
 8000fe4:	f006 f974 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000fe8:	2001      	movs	r0, #1
 8000fea:	f005 fd51 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8000fee:	1d3a      	adds	r2, r7, #4
 8000ff0:	2364      	movs	r3, #100	; 0x64
 8000ff2:	9300      	str	r3, [sp, #0]
 8000ff4:	2301      	movs	r3, #1
 8000ff6:	2100      	movs	r1, #0
 8000ff8:	4889      	ldr	r0, [pc, #548]	; (8001220 <lcd_init+0x37c>)
 8000ffa:	f006 f969 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000ffe:	2001      	movs	r0, #1
 8001000:	f005 fd46 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001004:	463a      	mov	r2, r7
 8001006:	2364      	movs	r3, #100	; 0x64
 8001008:	9300      	str	r3, [sp, #0]
 800100a:	2301      	movs	r3, #1
 800100c:	2100      	movs	r1, #0
 800100e:	4884      	ldr	r0, [pc, #528]	; (8001220 <lcd_init+0x37c>)
 8001010:	f006 f95e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001014:	2001      	movs	r0, #1
 8001016:	f005 fd3b 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800101a:	1d3a      	adds	r2, r7, #4
 800101c:	2364      	movs	r3, #100	; 0x64
 800101e:	9300      	str	r3, [sp, #0]
 8001020:	2301      	movs	r3, #1
 8001022:	2100      	movs	r1, #0
 8001024:	487e      	ldr	r0, [pc, #504]	; (8001220 <lcd_init+0x37c>)
 8001026:	f006 f953 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800102a:	2001      	movs	r0, #1
 800102c:	f005 fd30 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001030:	1d3a      	adds	r2, r7, #4
 8001032:	2364      	movs	r3, #100	; 0x64
 8001034:	9300      	str	r3, [sp, #0]
 8001036:	2301      	movs	r3, #1
 8001038:	2100      	movs	r1, #0
 800103a:	4879      	ldr	r0, [pc, #484]	; (8001220 <lcd_init+0x37c>)
 800103c:	f006 f948 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001040:	2001      	movs	r0, #1
 8001042:	f005 fd25 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001046:	1d3a      	adds	r2, r7, #4
 8001048:	2364      	movs	r3, #100	; 0x64
 800104a:	9300      	str	r3, [sp, #0]
 800104c:	2301      	movs	r3, #1
 800104e:	2100      	movs	r1, #0
 8001050:	4873      	ldr	r0, [pc, #460]	; (8001220 <lcd_init+0x37c>)
 8001052:	f006 f93d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001056:	2001      	movs	r0, #1
 8001058:	f005 fd1a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800105c:	463a      	mov	r2, r7
 800105e:	2364      	movs	r3, #100	; 0x64
 8001060:	9300      	str	r3, [sp, #0]
 8001062:	2301      	movs	r3, #1
 8001064:	2100      	movs	r1, #0
 8001066:	486e      	ldr	r0, [pc, #440]	; (8001220 <lcd_init+0x37c>)
 8001068:	f006 f932 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800106c:	2001      	movs	r0, #1
 800106e:	f005 fd0f 	bl	8006a90 <HAL_Delay>

    /*----------Seconde ligne----------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x02,1,carreNoir,1,100);
 8001072:	2364      	movs	r3, #100	; 0x64
 8001074:	9302      	str	r3, [sp, #8]
 8001076:	2301      	movs	r3, #1
 8001078:	9301      	str	r3, [sp, #4]
 800107a:	1d3b      	adds	r3, r7, #4
 800107c:	9300      	str	r3, [sp, #0]
 800107e:	2301      	movs	r3, #1
 8001080:	2202      	movs	r2, #2
 8001082:	2100      	movs	r1, #0
 8001084:	4866      	ldr	r0, [pc, #408]	; (8001220 <lcd_init+0x37c>)
 8001086:	f006 fc47 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 800108a:	2001      	movs	r0, #1
 800108c:	f005 fd00 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001090:	463a      	mov	r2, r7
 8001092:	2364      	movs	r3, #100	; 0x64
 8001094:	9300      	str	r3, [sp, #0]
 8001096:	2301      	movs	r3, #1
 8001098:	2100      	movs	r1, #0
 800109a:	4861      	ldr	r0, [pc, #388]	; (8001220 <lcd_init+0x37c>)
 800109c:	f006 f918 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80010a0:	2001      	movs	r0, #1
 80010a2:	f005 fcf5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80010a6:	463a      	mov	r2, r7
 80010a8:	2364      	movs	r3, #100	; 0x64
 80010aa:	9300      	str	r3, [sp, #0]
 80010ac:	2301      	movs	r3, #1
 80010ae:	2100      	movs	r1, #0
 80010b0:	485b      	ldr	r0, [pc, #364]	; (8001220 <lcd_init+0x37c>)
 80010b2:	f006 f90d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80010b6:	2001      	movs	r0, #1
 80010b8:	f005 fcea 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80010bc:	463a      	mov	r2, r7
 80010be:	2364      	movs	r3, #100	; 0x64
 80010c0:	9300      	str	r3, [sp, #0]
 80010c2:	2301      	movs	r3, #1
 80010c4:	2100      	movs	r1, #0
 80010c6:	4856      	ldr	r0, [pc, #344]	; (8001220 <lcd_init+0x37c>)
 80010c8:	f006 f902 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80010cc:	2001      	movs	r0, #1
 80010ce:	f005 fcdf 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80010d2:	1d3a      	adds	r2, r7, #4
 80010d4:	2364      	movs	r3, #100	; 0x64
 80010d6:	9300      	str	r3, [sp, #0]
 80010d8:	2301      	movs	r3, #1
 80010da:	2100      	movs	r1, #0
 80010dc:	4850      	ldr	r0, [pc, #320]	; (8001220 <lcd_init+0x37c>)
 80010de:	f006 f8f7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80010e2:	2001      	movs	r0, #1
 80010e4:	f005 fcd4 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80010e8:	463a      	mov	r2, r7
 80010ea:	2364      	movs	r3, #100	; 0x64
 80010ec:	9300      	str	r3, [sp, #0]
 80010ee:	2301      	movs	r3, #1
 80010f0:	2100      	movs	r1, #0
 80010f2:	484b      	ldr	r0, [pc, #300]	; (8001220 <lcd_init+0x37c>)
 80010f4:	f006 f8ec 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80010f8:	2001      	movs	r0, #1
 80010fa:	f005 fcc9 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80010fe:	1d3a      	adds	r2, r7, #4
 8001100:	2364      	movs	r3, #100	; 0x64
 8001102:	9300      	str	r3, [sp, #0]
 8001104:	2301      	movs	r3, #1
 8001106:	2100      	movs	r1, #0
 8001108:	4845      	ldr	r0, [pc, #276]	; (8001220 <lcd_init+0x37c>)
 800110a:	f006 f8e1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800110e:	2001      	movs	r0, #1
 8001110:	f005 fcbe 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001114:	463a      	mov	r2, r7
 8001116:	2364      	movs	r3, #100	; 0x64
 8001118:	9300      	str	r3, [sp, #0]
 800111a:	2301      	movs	r3, #1
 800111c:	2100      	movs	r1, #0
 800111e:	4840      	ldr	r0, [pc, #256]	; (8001220 <lcd_init+0x37c>)
 8001120:	f006 f8d6 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001124:	2001      	movs	r0, #1
 8001126:	f005 fcb3 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800112a:	463a      	mov	r2, r7
 800112c:	2364      	movs	r3, #100	; 0x64
 800112e:	9300      	str	r3, [sp, #0]
 8001130:	2301      	movs	r3, #1
 8001132:	2100      	movs	r1, #0
 8001134:	483a      	ldr	r0, [pc, #232]	; (8001220 <lcd_init+0x37c>)
 8001136:	f006 f8cb 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800113a:	2001      	movs	r0, #1
 800113c:	f005 fca8 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001140:	1d3a      	adds	r2, r7, #4
 8001142:	2364      	movs	r3, #100	; 0x64
 8001144:	9300      	str	r3, [sp, #0]
 8001146:	2301      	movs	r3, #1
 8001148:	2100      	movs	r1, #0
 800114a:	4835      	ldr	r0, [pc, #212]	; (8001220 <lcd_init+0x37c>)
 800114c:	f006 f8c0 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001150:	2001      	movs	r0, #1
 8001152:	f005 fc9d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001156:	463a      	mov	r2, r7
 8001158:	2364      	movs	r3, #100	; 0x64
 800115a:	9300      	str	r3, [sp, #0]
 800115c:	2301      	movs	r3, #1
 800115e:	2100      	movs	r1, #0
 8001160:	482f      	ldr	r0, [pc, #188]	; (8001220 <lcd_init+0x37c>)
 8001162:	f006 f8b5 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001166:	2001      	movs	r0, #1
 8001168:	f005 fc92 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800116c:	1d3a      	adds	r2, r7, #4
 800116e:	2364      	movs	r3, #100	; 0x64
 8001170:	9300      	str	r3, [sp, #0]
 8001172:	2301      	movs	r3, #1
 8001174:	2100      	movs	r1, #0
 8001176:	482a      	ldr	r0, [pc, #168]	; (8001220 <lcd_init+0x37c>)
 8001178:	f006 f8aa 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800117c:	2001      	movs	r0, #1
 800117e:	f005 fc87 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001182:	463a      	mov	r2, r7
 8001184:	2364      	movs	r3, #100	; 0x64
 8001186:	9300      	str	r3, [sp, #0]
 8001188:	2301      	movs	r3, #1
 800118a:	2100      	movs	r1, #0
 800118c:	4824      	ldr	r0, [pc, #144]	; (8001220 <lcd_init+0x37c>)
 800118e:	f006 f89f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001192:	2001      	movs	r0, #1
 8001194:	f005 fc7c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001198:	463a      	mov	r2, r7
 800119a:	2364      	movs	r3, #100	; 0x64
 800119c:	9300      	str	r3, [sp, #0]
 800119e:	2301      	movs	r3, #1
 80011a0:	2100      	movs	r1, #0
 80011a2:	481f      	ldr	r0, [pc, #124]	; (8001220 <lcd_init+0x37c>)
 80011a4:	f006 f894 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80011a8:	2001      	movs	r0, #1
 80011aa:	f005 fc71 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80011ae:	1d3a      	adds	r2, r7, #4
 80011b0:	2364      	movs	r3, #100	; 0x64
 80011b2:	9300      	str	r3, [sp, #0]
 80011b4:	2301      	movs	r3, #1
 80011b6:	2100      	movs	r1, #0
 80011b8:	4819      	ldr	r0, [pc, #100]	; (8001220 <lcd_init+0x37c>)
 80011ba:	f006 f889 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80011be:	2001      	movs	r0, #1
 80011c0:	f005 fc66 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80011c4:	463a      	mov	r2, r7
 80011c6:	2364      	movs	r3, #100	; 0x64
 80011c8:	9300      	str	r3, [sp, #0]
 80011ca:	2301      	movs	r3, #1
 80011cc:	2100      	movs	r1, #0
 80011ce:	4814      	ldr	r0, [pc, #80]	; (8001220 <lcd_init+0x37c>)
 80011d0:	f006 f87e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80011d4:	2001      	movs	r0, #1
 80011d6:	f005 fc5b 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80011da:	1d3a      	adds	r2, r7, #4
 80011dc:	2364      	movs	r3, #100	; 0x64
 80011de:	9300      	str	r3, [sp, #0]
 80011e0:	2301      	movs	r3, #1
 80011e2:	2100      	movs	r1, #0
 80011e4:	480e      	ldr	r0, [pc, #56]	; (8001220 <lcd_init+0x37c>)
 80011e6:	f006 f873 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80011ea:	2001      	movs	r0, #1
 80011ec:	f005 fc50 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80011f0:	463a      	mov	r2, r7
 80011f2:	2364      	movs	r3, #100	; 0x64
 80011f4:	9300      	str	r3, [sp, #0]
 80011f6:	2301      	movs	r3, #1
 80011f8:	2100      	movs	r1, #0
 80011fa:	4809      	ldr	r0, [pc, #36]	; (8001220 <lcd_init+0x37c>)
 80011fc:	f006 f868 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001200:	2001      	movs	r0, #1
 8001202:	f005 fc45 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001206:	463a      	mov	r2, r7
 8001208:	2364      	movs	r3, #100	; 0x64
 800120a:	9300      	str	r3, [sp, #0]
 800120c:	2301      	movs	r3, #1
 800120e:	2100      	movs	r1, #0
 8001210:	4803      	ldr	r0, [pc, #12]	; (8001220 <lcd_init+0x37c>)
 8001212:	f006 f85d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001216:	2001      	movs	r0, #1
 8001218:	f005 fc3a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800121c:	1d3a      	adds	r2, r7, #4
 800121e:	e001      	b.n	8001224 <lcd_init+0x380>
 8001220:	200000a4 	.word	0x200000a4
 8001224:	2364      	movs	r3, #100	; 0x64
 8001226:	9300      	str	r3, [sp, #0]
 8001228:	2301      	movs	r3, #1
 800122a:	2100      	movs	r1, #0
 800122c:	48d5      	ldr	r0, [pc, #852]	; (8001584 <lcd_init+0x6e0>)
 800122e:	f006 f84f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001232:	2001      	movs	r0, #1
 8001234:	f005 fc2c 	bl	8006a90 <HAL_Delay>

    /*----------Troisième ligne----------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,carreNoir,1,100);
 8001238:	2364      	movs	r3, #100	; 0x64
 800123a:	9302      	str	r3, [sp, #8]
 800123c:	2301      	movs	r3, #1
 800123e:	9301      	str	r3, [sp, #4]
 8001240:	1d3b      	adds	r3, r7, #4
 8001242:	9300      	str	r3, [sp, #0]
 8001244:	2301      	movs	r3, #1
 8001246:	2203      	movs	r2, #3
 8001248:	2100      	movs	r1, #0
 800124a:	48ce      	ldr	r0, [pc, #824]	; (8001584 <lcd_init+0x6e0>)
 800124c:	f006 fb64 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8001250:	2001      	movs	r0, #1
 8001252:	f005 fc1d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001256:	463a      	mov	r2, r7
 8001258:	2364      	movs	r3, #100	; 0x64
 800125a:	9300      	str	r3, [sp, #0]
 800125c:	2301      	movs	r3, #1
 800125e:	2100      	movs	r1, #0
 8001260:	48c8      	ldr	r0, [pc, #800]	; (8001584 <lcd_init+0x6e0>)
 8001262:	f006 f835 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001266:	2001      	movs	r0, #1
 8001268:	f005 fc12 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800126c:	463a      	mov	r2, r7
 800126e:	2364      	movs	r3, #100	; 0x64
 8001270:	9300      	str	r3, [sp, #0]
 8001272:	2301      	movs	r3, #1
 8001274:	2100      	movs	r1, #0
 8001276:	48c3      	ldr	r0, [pc, #780]	; (8001584 <lcd_init+0x6e0>)
 8001278:	f006 f82a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800127c:	2001      	movs	r0, #1
 800127e:	f005 fc07 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001282:	463a      	mov	r2, r7
 8001284:	2364      	movs	r3, #100	; 0x64
 8001286:	9300      	str	r3, [sp, #0]
 8001288:	2301      	movs	r3, #1
 800128a:	2100      	movs	r1, #0
 800128c:	48bd      	ldr	r0, [pc, #756]	; (8001584 <lcd_init+0x6e0>)
 800128e:	f006 f81f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001292:	2001      	movs	r0, #1
 8001294:	f005 fbfc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001298:	1d3a      	adds	r2, r7, #4
 800129a:	2364      	movs	r3, #100	; 0x64
 800129c:	9300      	str	r3, [sp, #0]
 800129e:	2301      	movs	r3, #1
 80012a0:	2100      	movs	r1, #0
 80012a2:	48b8      	ldr	r0, [pc, #736]	; (8001584 <lcd_init+0x6e0>)
 80012a4:	f006 f814 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80012a8:	2001      	movs	r0, #1
 80012aa:	f005 fbf1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80012ae:	463a      	mov	r2, r7
 80012b0:	2364      	movs	r3, #100	; 0x64
 80012b2:	9300      	str	r3, [sp, #0]
 80012b4:	2301      	movs	r3, #1
 80012b6:	2100      	movs	r1, #0
 80012b8:	48b2      	ldr	r0, [pc, #712]	; (8001584 <lcd_init+0x6e0>)
 80012ba:	f006 f809 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80012be:	2001      	movs	r0, #1
 80012c0:	f005 fbe6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80012c4:	1d3a      	adds	r2, r7, #4
 80012c6:	2364      	movs	r3, #100	; 0x64
 80012c8:	9300      	str	r3, [sp, #0]
 80012ca:	2301      	movs	r3, #1
 80012cc:	2100      	movs	r1, #0
 80012ce:	48ad      	ldr	r0, [pc, #692]	; (8001584 <lcd_init+0x6e0>)
 80012d0:	f005 fffe 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80012d4:	2001      	movs	r0, #1
 80012d6:	f005 fbdb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80012da:	463a      	mov	r2, r7
 80012dc:	2364      	movs	r3, #100	; 0x64
 80012de:	9300      	str	r3, [sp, #0]
 80012e0:	2301      	movs	r3, #1
 80012e2:	2100      	movs	r1, #0
 80012e4:	48a7      	ldr	r0, [pc, #668]	; (8001584 <lcd_init+0x6e0>)
 80012e6:	f005 fff3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80012ea:	2001      	movs	r0, #1
 80012ec:	f005 fbd0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80012f0:	463a      	mov	r2, r7
 80012f2:	2364      	movs	r3, #100	; 0x64
 80012f4:	9300      	str	r3, [sp, #0]
 80012f6:	2301      	movs	r3, #1
 80012f8:	2100      	movs	r1, #0
 80012fa:	48a2      	ldr	r0, [pc, #648]	; (8001584 <lcd_init+0x6e0>)
 80012fc:	f005 ffe8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001300:	2001      	movs	r0, #1
 8001302:	f005 fbc5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001306:	1d3a      	adds	r2, r7, #4
 8001308:	2364      	movs	r3, #100	; 0x64
 800130a:	9300      	str	r3, [sp, #0]
 800130c:	2301      	movs	r3, #1
 800130e:	2100      	movs	r1, #0
 8001310:	489c      	ldr	r0, [pc, #624]	; (8001584 <lcd_init+0x6e0>)
 8001312:	f005 ffdd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001316:	2001      	movs	r0, #1
 8001318:	f005 fbba 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800131c:	463a      	mov	r2, r7
 800131e:	2364      	movs	r3, #100	; 0x64
 8001320:	9300      	str	r3, [sp, #0]
 8001322:	2301      	movs	r3, #1
 8001324:	2100      	movs	r1, #0
 8001326:	4897      	ldr	r0, [pc, #604]	; (8001584 <lcd_init+0x6e0>)
 8001328:	f005 ffd2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800132c:	2001      	movs	r0, #1
 800132e:	f005 fbaf 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001332:	1d3a      	adds	r2, r7, #4
 8001334:	2364      	movs	r3, #100	; 0x64
 8001336:	9300      	str	r3, [sp, #0]
 8001338:	2301      	movs	r3, #1
 800133a:	2100      	movs	r1, #0
 800133c:	4891      	ldr	r0, [pc, #580]	; (8001584 <lcd_init+0x6e0>)
 800133e:	f005 ffc7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001342:	2001      	movs	r0, #1
 8001344:	f005 fba4 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001348:	1d3a      	adds	r2, r7, #4
 800134a:	2364      	movs	r3, #100	; 0x64
 800134c:	9300      	str	r3, [sp, #0]
 800134e:	2301      	movs	r3, #1
 8001350:	2100      	movs	r1, #0
 8001352:	488c      	ldr	r0, [pc, #560]	; (8001584 <lcd_init+0x6e0>)
 8001354:	f005 ffbc 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001358:	2001      	movs	r0, #1
 800135a:	f005 fb99 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800135e:	1d3a      	adds	r2, r7, #4
 8001360:	2364      	movs	r3, #100	; 0x64
 8001362:	9300      	str	r3, [sp, #0]
 8001364:	2301      	movs	r3, #1
 8001366:	2100      	movs	r1, #0
 8001368:	4886      	ldr	r0, [pc, #536]	; (8001584 <lcd_init+0x6e0>)
 800136a:	f005 ffb1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800136e:	2001      	movs	r0, #1
 8001370:	f005 fb8e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001374:	1d3a      	adds	r2, r7, #4
 8001376:	2364      	movs	r3, #100	; 0x64
 8001378:	9300      	str	r3, [sp, #0]
 800137a:	2301      	movs	r3, #1
 800137c:	2100      	movs	r1, #0
 800137e:	4881      	ldr	r0, [pc, #516]	; (8001584 <lcd_init+0x6e0>)
 8001380:	f005 ffa6 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001384:	2001      	movs	r0, #1
 8001386:	f005 fb83 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800138a:	463a      	mov	r2, r7
 800138c:	2364      	movs	r3, #100	; 0x64
 800138e:	9300      	str	r3, [sp, #0]
 8001390:	2301      	movs	r3, #1
 8001392:	2100      	movs	r1, #0
 8001394:	487b      	ldr	r0, [pc, #492]	; (8001584 <lcd_init+0x6e0>)
 8001396:	f005 ff9b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800139a:	2001      	movs	r0, #1
 800139c:	f005 fb78 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80013a0:	1d3a      	adds	r2, r7, #4
 80013a2:	2364      	movs	r3, #100	; 0x64
 80013a4:	9300      	str	r3, [sp, #0]
 80013a6:	2301      	movs	r3, #1
 80013a8:	2100      	movs	r1, #0
 80013aa:	4876      	ldr	r0, [pc, #472]	; (8001584 <lcd_init+0x6e0>)
 80013ac:	f005 ff90 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80013b0:	2001      	movs	r0, #1
 80013b2:	f005 fb6d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80013b6:	1d3a      	adds	r2, r7, #4
 80013b8:	2364      	movs	r3, #100	; 0x64
 80013ba:	9300      	str	r3, [sp, #0]
 80013bc:	2301      	movs	r3, #1
 80013be:	2100      	movs	r1, #0
 80013c0:	4870      	ldr	r0, [pc, #448]	; (8001584 <lcd_init+0x6e0>)
 80013c2:	f005 ff85 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80013c6:	2001      	movs	r0, #1
 80013c8:	f005 fb62 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80013cc:	1d3a      	adds	r2, r7, #4
 80013ce:	2364      	movs	r3, #100	; 0x64
 80013d0:	9300      	str	r3, [sp, #0]
 80013d2:	2301      	movs	r3, #1
 80013d4:	2100      	movs	r1, #0
 80013d6:	486b      	ldr	r0, [pc, #428]	; (8001584 <lcd_init+0x6e0>)
 80013d8:	f005 ff7a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80013dc:	2001      	movs	r0, #1
 80013de:	f005 fb57 	bl	8006a90 <HAL_Delay>

    /*----------Quatrième ligne----------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,carreNoir,1,100);
 80013e2:	2364      	movs	r3, #100	; 0x64
 80013e4:	9302      	str	r3, [sp, #8]
 80013e6:	2301      	movs	r3, #1
 80013e8:	9301      	str	r3, [sp, #4]
 80013ea:	1d3b      	adds	r3, r7, #4
 80013ec:	9300      	str	r3, [sp, #0]
 80013ee:	2301      	movs	r3, #1
 80013f0:	2204      	movs	r2, #4
 80013f2:	2100      	movs	r1, #0
 80013f4:	4863      	ldr	r0, [pc, #396]	; (8001584 <lcd_init+0x6e0>)
 80013f6:	f006 fa8f 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 80013fa:	2001      	movs	r0, #1
 80013fc:	f005 fb48 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001400:	1d3a      	adds	r2, r7, #4
 8001402:	2364      	movs	r3, #100	; 0x64
 8001404:	9300      	str	r3, [sp, #0]
 8001406:	2301      	movs	r3, #1
 8001408:	2100      	movs	r1, #0
 800140a:	485e      	ldr	r0, [pc, #376]	; (8001584 <lcd_init+0x6e0>)
 800140c:	f005 ff60 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001410:	2001      	movs	r0, #1
 8001412:	f005 fb3d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001416:	1d3a      	adds	r2, r7, #4
 8001418:	2364      	movs	r3, #100	; 0x64
 800141a:	9300      	str	r3, [sp, #0]
 800141c:	2301      	movs	r3, #1
 800141e:	2100      	movs	r1, #0
 8001420:	4858      	ldr	r0, [pc, #352]	; (8001584 <lcd_init+0x6e0>)
 8001422:	f005 ff55 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001426:	2001      	movs	r0, #1
 8001428:	f005 fb32 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800142c:	463a      	mov	r2, r7
 800142e:	2364      	movs	r3, #100	; 0x64
 8001430:	9300      	str	r3, [sp, #0]
 8001432:	2301      	movs	r3, #1
 8001434:	2100      	movs	r1, #0
 8001436:	4853      	ldr	r0, [pc, #332]	; (8001584 <lcd_init+0x6e0>)
 8001438:	f005 ff4a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800143c:	2001      	movs	r0, #1
 800143e:	f005 fb27 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001442:	1d3a      	adds	r2, r7, #4
 8001444:	2364      	movs	r3, #100	; 0x64
 8001446:	9300      	str	r3, [sp, #0]
 8001448:	2301      	movs	r3, #1
 800144a:	2100      	movs	r1, #0
 800144c:	484d      	ldr	r0, [pc, #308]	; (8001584 <lcd_init+0x6e0>)
 800144e:	f005 ff3f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001452:	2001      	movs	r0, #1
 8001454:	f005 fb1c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001458:	463a      	mov	r2, r7
 800145a:	2364      	movs	r3, #100	; 0x64
 800145c:	9300      	str	r3, [sp, #0]
 800145e:	2301      	movs	r3, #1
 8001460:	2100      	movs	r1, #0
 8001462:	4848      	ldr	r0, [pc, #288]	; (8001584 <lcd_init+0x6e0>)
 8001464:	f005 ff34 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001468:	2001      	movs	r0, #1
 800146a:	f005 fb11 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800146e:	1d3a      	adds	r2, r7, #4
 8001470:	2364      	movs	r3, #100	; 0x64
 8001472:	9300      	str	r3, [sp, #0]
 8001474:	2301      	movs	r3, #1
 8001476:	2100      	movs	r1, #0
 8001478:	4842      	ldr	r0, [pc, #264]	; (8001584 <lcd_init+0x6e0>)
 800147a:	f005 ff29 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800147e:	2001      	movs	r0, #1
 8001480:	f005 fb06 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001484:	1d3a      	adds	r2, r7, #4
 8001486:	2364      	movs	r3, #100	; 0x64
 8001488:	9300      	str	r3, [sp, #0]
 800148a:	2301      	movs	r3, #1
 800148c:	2100      	movs	r1, #0
 800148e:	483d      	ldr	r0, [pc, #244]	; (8001584 <lcd_init+0x6e0>)
 8001490:	f005 ff1e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001494:	2001      	movs	r0, #1
 8001496:	f005 fafb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800149a:	1d3a      	adds	r2, r7, #4
 800149c:	2364      	movs	r3, #100	; 0x64
 800149e:	9300      	str	r3, [sp, #0]
 80014a0:	2301      	movs	r3, #1
 80014a2:	2100      	movs	r1, #0
 80014a4:	4837      	ldr	r0, [pc, #220]	; (8001584 <lcd_init+0x6e0>)
 80014a6:	f005 ff13 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80014aa:	2001      	movs	r0, #1
 80014ac:	f005 faf0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80014b0:	463a      	mov	r2, r7
 80014b2:	2364      	movs	r3, #100	; 0x64
 80014b4:	9300      	str	r3, [sp, #0]
 80014b6:	2301      	movs	r3, #1
 80014b8:	2100      	movs	r1, #0
 80014ba:	4832      	ldr	r0, [pc, #200]	; (8001584 <lcd_init+0x6e0>)
 80014bc:	f005 ff08 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80014c0:	2001      	movs	r0, #1
 80014c2:	f005 fae5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80014c6:	463a      	mov	r2, r7
 80014c8:	2364      	movs	r3, #100	; 0x64
 80014ca:	9300      	str	r3, [sp, #0]
 80014cc:	2301      	movs	r3, #1
 80014ce:	2100      	movs	r1, #0
 80014d0:	482c      	ldr	r0, [pc, #176]	; (8001584 <lcd_init+0x6e0>)
 80014d2:	f005 fefd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80014d6:	2001      	movs	r0, #1
 80014d8:	f005 fada 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80014dc:	1d3a      	adds	r2, r7, #4
 80014de:	2364      	movs	r3, #100	; 0x64
 80014e0:	9300      	str	r3, [sp, #0]
 80014e2:	2301      	movs	r3, #1
 80014e4:	2100      	movs	r1, #0
 80014e6:	4827      	ldr	r0, [pc, #156]	; (8001584 <lcd_init+0x6e0>)
 80014e8:	f005 fef2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80014ec:	2001      	movs	r0, #1
 80014ee:	f005 facf 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80014f2:	463a      	mov	r2, r7
 80014f4:	2364      	movs	r3, #100	; 0x64
 80014f6:	9300      	str	r3, [sp, #0]
 80014f8:	2301      	movs	r3, #1
 80014fa:	2100      	movs	r1, #0
 80014fc:	4821      	ldr	r0, [pc, #132]	; (8001584 <lcd_init+0x6e0>)
 80014fe:	f005 fee7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001502:	2001      	movs	r0, #1
 8001504:	f005 fac4 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001508:	463a      	mov	r2, r7
 800150a:	2364      	movs	r3, #100	; 0x64
 800150c:	9300      	str	r3, [sp, #0]
 800150e:	2301      	movs	r3, #1
 8001510:	2100      	movs	r1, #0
 8001512:	481c      	ldr	r0, [pc, #112]	; (8001584 <lcd_init+0x6e0>)
 8001514:	f005 fedc 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001518:	2001      	movs	r0, #1
 800151a:	f005 fab9 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800151e:	1d3a      	adds	r2, r7, #4
 8001520:	2364      	movs	r3, #100	; 0x64
 8001522:	9300      	str	r3, [sp, #0]
 8001524:	2301      	movs	r3, #1
 8001526:	2100      	movs	r1, #0
 8001528:	4816      	ldr	r0, [pc, #88]	; (8001584 <lcd_init+0x6e0>)
 800152a:	f005 fed1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800152e:	2001      	movs	r0, #1
 8001530:	f005 faae 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001534:	463a      	mov	r2, r7
 8001536:	2364      	movs	r3, #100	; 0x64
 8001538:	9300      	str	r3, [sp, #0]
 800153a:	2301      	movs	r3, #1
 800153c:	2100      	movs	r1, #0
 800153e:	4811      	ldr	r0, [pc, #68]	; (8001584 <lcd_init+0x6e0>)
 8001540:	f005 fec6 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001544:	2001      	movs	r0, #1
 8001546:	f005 faa3 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800154a:	1d3a      	adds	r2, r7, #4
 800154c:	2364      	movs	r3, #100	; 0x64
 800154e:	9300      	str	r3, [sp, #0]
 8001550:	2301      	movs	r3, #1
 8001552:	2100      	movs	r1, #0
 8001554:	480b      	ldr	r0, [pc, #44]	; (8001584 <lcd_init+0x6e0>)
 8001556:	f005 febb 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800155a:	2001      	movs	r0, #1
 800155c:	f005 fa98 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001560:	463a      	mov	r2, r7
 8001562:	2364      	movs	r3, #100	; 0x64
 8001564:	9300      	str	r3, [sp, #0]
 8001566:	2301      	movs	r3, #1
 8001568:	2100      	movs	r1, #0
 800156a:	4806      	ldr	r0, [pc, #24]	; (8001584 <lcd_init+0x6e0>)
 800156c:	f005 feb0 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001570:	2001      	movs	r0, #1
 8001572:	f005 fa8d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001576:	463a      	mov	r2, r7
 8001578:	2364      	movs	r3, #100	; 0x64
 800157a:	9300      	str	r3, [sp, #0]
 800157c:	2301      	movs	r3, #1
 800157e:	2100      	movs	r1, #0
 8001580:	e002      	b.n	8001588 <lcd_init+0x6e4>
 8001582:	bf00      	nop
 8001584:	200000a4 	.word	0x200000a4
 8001588:	48d5      	ldr	r0, [pc, #852]	; (80018e0 <lcd_init+0xa3c>)
 800158a:	f005 fea1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800158e:	2001      	movs	r0, #1
 8001590:	f005 fa7e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001594:	1d3a      	adds	r2, r7, #4
 8001596:	2364      	movs	r3, #100	; 0x64
 8001598:	9300      	str	r3, [sp, #0]
 800159a:	2301      	movs	r3, #1
 800159c:	2100      	movs	r1, #0
 800159e:	48d0      	ldr	r0, [pc, #832]	; (80018e0 <lcd_init+0xa3c>)
 80015a0:	f005 fe96 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(4000);
 80015a4:	f44f 607a 	mov.w	r0, #4000	; 0xfa0
 80015a8:	f005 fa72 	bl	8006a90 <HAL_Delay>
/*-----------------------------------------------FIN-----------------------------------------------*/

/*-----------------------------------------------DEBUT-----------------------------------------------*/
    /*--------------------Premiere ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x01,1,space,1,100);
 80015ac:	2364      	movs	r3, #100	; 0x64
 80015ae:	9302      	str	r3, [sp, #8]
 80015b0:	2301      	movs	r3, #1
 80015b2:	9301      	str	r3, [sp, #4]
 80015b4:	463b      	mov	r3, r7
 80015b6:	9300      	str	r3, [sp, #0]
 80015b8:	2301      	movs	r3, #1
 80015ba:	2201      	movs	r2, #1
 80015bc:	2100      	movs	r1, #0
 80015be:	48c8      	ldr	r0, [pc, #800]	; (80018e0 <lcd_init+0xa3c>)
 80015c0:	f006 f9aa 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 80015c4:	2001      	movs	r0, #1
 80015c6:	f005 fa63 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80015ca:	463a      	mov	r2, r7
 80015cc:	2364      	movs	r3, #100	; 0x64
 80015ce:	9300      	str	r3, [sp, #0]
 80015d0:	2301      	movs	r3, #1
 80015d2:	2100      	movs	r1, #0
 80015d4:	48c2      	ldr	r0, [pc, #776]	; (80018e0 <lcd_init+0xa3c>)
 80015d6:	f005 fe7b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80015da:	2001      	movs	r0, #1
 80015dc:	f005 fa58 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80015e0:	463a      	mov	r2, r7
 80015e2:	2364      	movs	r3, #100	; 0x64
 80015e4:	9300      	str	r3, [sp, #0]
 80015e6:	2301      	movs	r3, #1
 80015e8:	2100      	movs	r1, #0
 80015ea:	48bd      	ldr	r0, [pc, #756]	; (80018e0 <lcd_init+0xa3c>)
 80015ec:	f005 fe70 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80015f0:	2001      	movs	r0, #1
 80015f2:	f005 fa4d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80015f6:	463a      	mov	r2, r7
 80015f8:	2364      	movs	r3, #100	; 0x64
 80015fa:	9300      	str	r3, [sp, #0]
 80015fc:	2301      	movs	r3, #1
 80015fe:	2100      	movs	r1, #0
 8001600:	48b7      	ldr	r0, [pc, #732]	; (80018e0 <lcd_init+0xa3c>)
 8001602:	f005 fe65 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001606:	2001      	movs	r0, #1
 8001608:	f005 fa42 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800160c:	463a      	mov	r2, r7
 800160e:	2364      	movs	r3, #100	; 0x64
 8001610:	9300      	str	r3, [sp, #0]
 8001612:	2301      	movs	r3, #1
 8001614:	2100      	movs	r1, #0
 8001616:	48b2      	ldr	r0, [pc, #712]	; (80018e0 <lcd_init+0xa3c>)
 8001618:	f005 fe5a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800161c:	2001      	movs	r0, #1
 800161e:	f005 fa37 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001622:	463a      	mov	r2, r7
 8001624:	2364      	movs	r3, #100	; 0x64
 8001626:	9300      	str	r3, [sp, #0]
 8001628:	2301      	movs	r3, #1
 800162a:	2100      	movs	r1, #0
 800162c:	48ac      	ldr	r0, [pc, #688]	; (80018e0 <lcd_init+0xa3c>)
 800162e:	f005 fe4f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001632:	2001      	movs	r0, #1
 8001634:	f005 fa2c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001638:	463a      	mov	r2, r7
 800163a:	2364      	movs	r3, #100	; 0x64
 800163c:	9300      	str	r3, [sp, #0]
 800163e:	2301      	movs	r3, #1
 8001640:	2100      	movs	r1, #0
 8001642:	48a7      	ldr	r0, [pc, #668]	; (80018e0 <lcd_init+0xa3c>)
 8001644:	f005 fe44 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001648:	2001      	movs	r0, #1
 800164a:	f005 fa21 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800164e:	463a      	mov	r2, r7
 8001650:	2364      	movs	r3, #100	; 0x64
 8001652:	9300      	str	r3, [sp, #0]
 8001654:	2301      	movs	r3, #1
 8001656:	2100      	movs	r1, #0
 8001658:	48a1      	ldr	r0, [pc, #644]	; (80018e0 <lcd_init+0xa3c>)
 800165a:	f005 fe39 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800165e:	2001      	movs	r0, #1
 8001660:	f005 fa16 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001664:	463a      	mov	r2, r7
 8001666:	2364      	movs	r3, #100	; 0x64
 8001668:	9300      	str	r3, [sp, #0]
 800166a:	2301      	movs	r3, #1
 800166c:	2100      	movs	r1, #0
 800166e:	489c      	ldr	r0, [pc, #624]	; (80018e0 <lcd_init+0xa3c>)
 8001670:	f005 fe2e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001674:	2001      	movs	r0, #1
 8001676:	f005 fa0b 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800167a:	463a      	mov	r2, r7
 800167c:	2364      	movs	r3, #100	; 0x64
 800167e:	9300      	str	r3, [sp, #0]
 8001680:	2301      	movs	r3, #1
 8001682:	2100      	movs	r1, #0
 8001684:	4896      	ldr	r0, [pc, #600]	; (80018e0 <lcd_init+0xa3c>)
 8001686:	f005 fe23 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800168a:	2001      	movs	r0, #1
 800168c:	f005 fa00 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001690:	463a      	mov	r2, r7
 8001692:	2364      	movs	r3, #100	; 0x64
 8001694:	9300      	str	r3, [sp, #0]
 8001696:	2301      	movs	r3, #1
 8001698:	2100      	movs	r1, #0
 800169a:	4891      	ldr	r0, [pc, #580]	; (80018e0 <lcd_init+0xa3c>)
 800169c:	f005 fe18 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80016a0:	2001      	movs	r0, #1
 80016a2:	f005 f9f5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80016a6:	463a      	mov	r2, r7
 80016a8:	2364      	movs	r3, #100	; 0x64
 80016aa:	9300      	str	r3, [sp, #0]
 80016ac:	2301      	movs	r3, #1
 80016ae:	2100      	movs	r1, #0
 80016b0:	488b      	ldr	r0, [pc, #556]	; (80018e0 <lcd_init+0xa3c>)
 80016b2:	f005 fe0d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80016b6:	2001      	movs	r0, #1
 80016b8:	f005 f9ea 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80016bc:	463a      	mov	r2, r7
 80016be:	2364      	movs	r3, #100	; 0x64
 80016c0:	9300      	str	r3, [sp, #0]
 80016c2:	2301      	movs	r3, #1
 80016c4:	2100      	movs	r1, #0
 80016c6:	4886      	ldr	r0, [pc, #536]	; (80018e0 <lcd_init+0xa3c>)
 80016c8:	f005 fe02 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80016cc:	2001      	movs	r0, #1
 80016ce:	f005 f9df 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80016d2:	463a      	mov	r2, r7
 80016d4:	2364      	movs	r3, #100	; 0x64
 80016d6:	9300      	str	r3, [sp, #0]
 80016d8:	2301      	movs	r3, #1
 80016da:	2100      	movs	r1, #0
 80016dc:	4880      	ldr	r0, [pc, #512]	; (80018e0 <lcd_init+0xa3c>)
 80016de:	f005 fdf7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80016e2:	2001      	movs	r0, #1
 80016e4:	f005 f9d4 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80016e8:	463a      	mov	r2, r7
 80016ea:	2364      	movs	r3, #100	; 0x64
 80016ec:	9300      	str	r3, [sp, #0]
 80016ee:	2301      	movs	r3, #1
 80016f0:	2100      	movs	r1, #0
 80016f2:	487b      	ldr	r0, [pc, #492]	; (80018e0 <lcd_init+0xa3c>)
 80016f4:	f005 fdec 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80016f8:	2001      	movs	r0, #1
 80016fa:	f005 f9c9 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80016fe:	463a      	mov	r2, r7
 8001700:	2364      	movs	r3, #100	; 0x64
 8001702:	9300      	str	r3, [sp, #0]
 8001704:	2301      	movs	r3, #1
 8001706:	2100      	movs	r1, #0
 8001708:	4875      	ldr	r0, [pc, #468]	; (80018e0 <lcd_init+0xa3c>)
 800170a:	f005 fde1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800170e:	2001      	movs	r0, #1
 8001710:	f005 f9be 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001714:	463a      	mov	r2, r7
 8001716:	2364      	movs	r3, #100	; 0x64
 8001718:	9300      	str	r3, [sp, #0]
 800171a:	2301      	movs	r3, #1
 800171c:	2100      	movs	r1, #0
 800171e:	4870      	ldr	r0, [pc, #448]	; (80018e0 <lcd_init+0xa3c>)
 8001720:	f005 fdd6 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001724:	2001      	movs	r0, #1
 8001726:	f005 f9b3 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800172a:	463a      	mov	r2, r7
 800172c:	2364      	movs	r3, #100	; 0x64
 800172e:	9300      	str	r3, [sp, #0]
 8001730:	2301      	movs	r3, #1
 8001732:	2100      	movs	r1, #0
 8001734:	486a      	ldr	r0, [pc, #424]	; (80018e0 <lcd_init+0xa3c>)
 8001736:	f005 fdcb 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800173a:	2001      	movs	r0, #1
 800173c:	f005 f9a8 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001740:	463a      	mov	r2, r7
 8001742:	2364      	movs	r3, #100	; 0x64
 8001744:	9300      	str	r3, [sp, #0]
 8001746:	2301      	movs	r3, #1
 8001748:	2100      	movs	r1, #0
 800174a:	4865      	ldr	r0, [pc, #404]	; (80018e0 <lcd_init+0xa3c>)
 800174c:	f005 fdc0 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001750:	2001      	movs	r0, #1
 8001752:	f005 f99d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001756:	463a      	mov	r2, r7
 8001758:	2364      	movs	r3, #100	; 0x64
 800175a:	9300      	str	r3, [sp, #0]
 800175c:	2301      	movs	r3, #1
 800175e:	2100      	movs	r1, #0
 8001760:	485f      	ldr	r0, [pc, #380]	; (80018e0 <lcd_init+0xa3c>)
 8001762:	f005 fdb5 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001766:	2001      	movs	r0, #1
 8001768:	f005 f992 	bl	8006a90 <HAL_Delay>

    /*----------Seconde ligne----------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x02,1,carreNoir,1,100);
 800176c:	2364      	movs	r3, #100	; 0x64
 800176e:	9302      	str	r3, [sp, #8]
 8001770:	2301      	movs	r3, #1
 8001772:	9301      	str	r3, [sp, #4]
 8001774:	1d3b      	adds	r3, r7, #4
 8001776:	9300      	str	r3, [sp, #0]
 8001778:	2301      	movs	r3, #1
 800177a:	2202      	movs	r2, #2
 800177c:	2100      	movs	r1, #0
 800177e:	4858      	ldr	r0, [pc, #352]	; (80018e0 <lcd_init+0xa3c>)
 8001780:	f006 f8ca 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8001784:	2001      	movs	r0, #1
 8001786:	f005 f983 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800178a:	463a      	mov	r2, r7
 800178c:	2364      	movs	r3, #100	; 0x64
 800178e:	9300      	str	r3, [sp, #0]
 8001790:	2301      	movs	r3, #1
 8001792:	2100      	movs	r1, #0
 8001794:	4852      	ldr	r0, [pc, #328]	; (80018e0 <lcd_init+0xa3c>)
 8001796:	f005 fd9b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800179a:	2001      	movs	r0, #1
 800179c:	f005 f978 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80017a0:	463a      	mov	r2, r7
 80017a2:	2364      	movs	r3, #100	; 0x64
 80017a4:	9300      	str	r3, [sp, #0]
 80017a6:	2301      	movs	r3, #1
 80017a8:	2100      	movs	r1, #0
 80017aa:	484d      	ldr	r0, [pc, #308]	; (80018e0 <lcd_init+0xa3c>)
 80017ac:	f005 fd90 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80017b0:	2001      	movs	r0, #1
 80017b2:	f005 f96d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80017b6:	463a      	mov	r2, r7
 80017b8:	2364      	movs	r3, #100	; 0x64
 80017ba:	9300      	str	r3, [sp, #0]
 80017bc:	2301      	movs	r3, #1
 80017be:	2100      	movs	r1, #0
 80017c0:	4847      	ldr	r0, [pc, #284]	; (80018e0 <lcd_init+0xa3c>)
 80017c2:	f005 fd85 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80017c6:	2001      	movs	r0, #1
 80017c8:	f005 f962 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80017cc:	1d3a      	adds	r2, r7, #4
 80017ce:	2364      	movs	r3, #100	; 0x64
 80017d0:	9300      	str	r3, [sp, #0]
 80017d2:	2301      	movs	r3, #1
 80017d4:	2100      	movs	r1, #0
 80017d6:	4842      	ldr	r0, [pc, #264]	; (80018e0 <lcd_init+0xa3c>)
 80017d8:	f005 fd7a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80017dc:	2001      	movs	r0, #1
 80017de:	f005 f957 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80017e2:	463a      	mov	r2, r7
 80017e4:	2364      	movs	r3, #100	; 0x64
 80017e6:	9300      	str	r3, [sp, #0]
 80017e8:	2301      	movs	r3, #1
 80017ea:	2100      	movs	r1, #0
 80017ec:	483c      	ldr	r0, [pc, #240]	; (80018e0 <lcd_init+0xa3c>)
 80017ee:	f005 fd6f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80017f2:	2001      	movs	r0, #1
 80017f4:	f005 f94c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80017f8:	1d3a      	adds	r2, r7, #4
 80017fa:	2364      	movs	r3, #100	; 0x64
 80017fc:	9300      	str	r3, [sp, #0]
 80017fe:	2301      	movs	r3, #1
 8001800:	2100      	movs	r1, #0
 8001802:	4837      	ldr	r0, [pc, #220]	; (80018e0 <lcd_init+0xa3c>)
 8001804:	f005 fd64 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001808:	2001      	movs	r0, #1
 800180a:	f005 f941 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800180e:	1d3a      	adds	r2, r7, #4
 8001810:	2364      	movs	r3, #100	; 0x64
 8001812:	9300      	str	r3, [sp, #0]
 8001814:	2301      	movs	r3, #1
 8001816:	2100      	movs	r1, #0
 8001818:	4831      	ldr	r0, [pc, #196]	; (80018e0 <lcd_init+0xa3c>)
 800181a:	f005 fd59 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800181e:	2001      	movs	r0, #1
 8001820:	f005 f936 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001824:	1d3a      	adds	r2, r7, #4
 8001826:	2364      	movs	r3, #100	; 0x64
 8001828:	9300      	str	r3, [sp, #0]
 800182a:	2301      	movs	r3, #1
 800182c:	2100      	movs	r1, #0
 800182e:	482c      	ldr	r0, [pc, #176]	; (80018e0 <lcd_init+0xa3c>)
 8001830:	f005 fd4e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001834:	2001      	movs	r0, #1
 8001836:	f005 f92b 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800183a:	463a      	mov	r2, r7
 800183c:	2364      	movs	r3, #100	; 0x64
 800183e:	9300      	str	r3, [sp, #0]
 8001840:	2301      	movs	r3, #1
 8001842:	2100      	movs	r1, #0
 8001844:	4826      	ldr	r0, [pc, #152]	; (80018e0 <lcd_init+0xa3c>)
 8001846:	f005 fd43 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800184a:	2001      	movs	r0, #1
 800184c:	f005 f920 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001850:	463a      	mov	r2, r7
 8001852:	2364      	movs	r3, #100	; 0x64
 8001854:	9300      	str	r3, [sp, #0]
 8001856:	2301      	movs	r3, #1
 8001858:	2100      	movs	r1, #0
 800185a:	4821      	ldr	r0, [pc, #132]	; (80018e0 <lcd_init+0xa3c>)
 800185c:	f005 fd38 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001860:	2001      	movs	r0, #1
 8001862:	f005 f915 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001866:	1d3a      	adds	r2, r7, #4
 8001868:	2364      	movs	r3, #100	; 0x64
 800186a:	9300      	str	r3, [sp, #0]
 800186c:	2301      	movs	r3, #1
 800186e:	2100      	movs	r1, #0
 8001870:	481b      	ldr	r0, [pc, #108]	; (80018e0 <lcd_init+0xa3c>)
 8001872:	f005 fd2d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001876:	2001      	movs	r0, #1
 8001878:	f005 f90a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800187c:	1d3a      	adds	r2, r7, #4
 800187e:	2364      	movs	r3, #100	; 0x64
 8001880:	9300      	str	r3, [sp, #0]
 8001882:	2301      	movs	r3, #1
 8001884:	2100      	movs	r1, #0
 8001886:	4816      	ldr	r0, [pc, #88]	; (80018e0 <lcd_init+0xa3c>)
 8001888:	f005 fd22 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800188c:	2001      	movs	r0, #1
 800188e:	f005 f8ff 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001892:	1d3a      	adds	r2, r7, #4
 8001894:	2364      	movs	r3, #100	; 0x64
 8001896:	9300      	str	r3, [sp, #0]
 8001898:	2301      	movs	r3, #1
 800189a:	2100      	movs	r1, #0
 800189c:	4810      	ldr	r0, [pc, #64]	; (80018e0 <lcd_init+0xa3c>)
 800189e:	f005 fd17 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80018a2:	2001      	movs	r0, #1
 80018a4:	f005 f8f4 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80018a8:	1d3a      	adds	r2, r7, #4
 80018aa:	2364      	movs	r3, #100	; 0x64
 80018ac:	9300      	str	r3, [sp, #0]
 80018ae:	2301      	movs	r3, #1
 80018b0:	2100      	movs	r1, #0
 80018b2:	480b      	ldr	r0, [pc, #44]	; (80018e0 <lcd_init+0xa3c>)
 80018b4:	f005 fd0c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80018b8:	2001      	movs	r0, #1
 80018ba:	f005 f8e9 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80018be:	463a      	mov	r2, r7
 80018c0:	2364      	movs	r3, #100	; 0x64
 80018c2:	9300      	str	r3, [sp, #0]
 80018c4:	2301      	movs	r3, #1
 80018c6:	2100      	movs	r1, #0
 80018c8:	4805      	ldr	r0, [pc, #20]	; (80018e0 <lcd_init+0xa3c>)
 80018ca:	f005 fd01 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80018ce:	2001      	movs	r0, #1
 80018d0:	f005 f8de 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80018d4:	1d3a      	adds	r2, r7, #4
 80018d6:	2364      	movs	r3, #100	; 0x64
 80018d8:	9300      	str	r3, [sp, #0]
 80018da:	2301      	movs	r3, #1
 80018dc:	2100      	movs	r1, #0
 80018de:	e001      	b.n	80018e4 <lcd_init+0xa40>
 80018e0:	200000a4 	.word	0x200000a4
 80018e4:	48d5      	ldr	r0, [pc, #852]	; (8001c3c <lcd_init+0xd98>)
 80018e6:	f005 fcf3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80018ea:	2001      	movs	r0, #1
 80018ec:	f005 f8d0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80018f0:	1d3a      	adds	r2, r7, #4
 80018f2:	2364      	movs	r3, #100	; 0x64
 80018f4:	9300      	str	r3, [sp, #0]
 80018f6:	2301      	movs	r3, #1
 80018f8:	2100      	movs	r1, #0
 80018fa:	48d0      	ldr	r0, [pc, #832]	; (8001c3c <lcd_init+0xd98>)
 80018fc:	f005 fce8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001900:	2001      	movs	r0, #1
 8001902:	f005 f8c5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001906:	1d3a      	adds	r2, r7, #4
 8001908:	2364      	movs	r3, #100	; 0x64
 800190a:	9300      	str	r3, [sp, #0]
 800190c:	2301      	movs	r3, #1
 800190e:	2100      	movs	r1, #0
 8001910:	48ca      	ldr	r0, [pc, #808]	; (8001c3c <lcd_init+0xd98>)
 8001912:	f005 fcdd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001916:	2001      	movs	r0, #1
 8001918:	f005 f8ba 	bl	8006a90 <HAL_Delay>
    /*-------------Troisieme lignes------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,carreNoir,1,100);
 800191c:	2364      	movs	r3, #100	; 0x64
 800191e:	9302      	str	r3, [sp, #8]
 8001920:	2301      	movs	r3, #1
 8001922:	9301      	str	r3, [sp, #4]
 8001924:	1d3b      	adds	r3, r7, #4
 8001926:	9300      	str	r3, [sp, #0]
 8001928:	2301      	movs	r3, #1
 800192a:	2203      	movs	r2, #3
 800192c:	2100      	movs	r1, #0
 800192e:	48c3      	ldr	r0, [pc, #780]	; (8001c3c <lcd_init+0xd98>)
 8001930:	f005 fff2 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8001934:	2001      	movs	r0, #1
 8001936:	f005 f8ab 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800193a:	463a      	mov	r2, r7
 800193c:	2364      	movs	r3, #100	; 0x64
 800193e:	9300      	str	r3, [sp, #0]
 8001940:	2301      	movs	r3, #1
 8001942:	2100      	movs	r1, #0
 8001944:	48bd      	ldr	r0, [pc, #756]	; (8001c3c <lcd_init+0xd98>)
 8001946:	f005 fcc3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800194a:	2001      	movs	r0, #1
 800194c:	f005 f8a0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001950:	463a      	mov	r2, r7
 8001952:	2364      	movs	r3, #100	; 0x64
 8001954:	9300      	str	r3, [sp, #0]
 8001956:	2301      	movs	r3, #1
 8001958:	2100      	movs	r1, #0
 800195a:	48b8      	ldr	r0, [pc, #736]	; (8001c3c <lcd_init+0xd98>)
 800195c:	f005 fcb8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001960:	2001      	movs	r0, #1
 8001962:	f005 f895 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001966:	463a      	mov	r2, r7
 8001968:	2364      	movs	r3, #100	; 0x64
 800196a:	9300      	str	r3, [sp, #0]
 800196c:	2301      	movs	r3, #1
 800196e:	2100      	movs	r1, #0
 8001970:	48b2      	ldr	r0, [pc, #712]	; (8001c3c <lcd_init+0xd98>)
 8001972:	f005 fcad 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001976:	2001      	movs	r0, #1
 8001978:	f005 f88a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800197c:	1d3a      	adds	r2, r7, #4
 800197e:	2364      	movs	r3, #100	; 0x64
 8001980:	9300      	str	r3, [sp, #0]
 8001982:	2301      	movs	r3, #1
 8001984:	2100      	movs	r1, #0
 8001986:	48ad      	ldr	r0, [pc, #692]	; (8001c3c <lcd_init+0xd98>)
 8001988:	f005 fca2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800198c:	2001      	movs	r0, #1
 800198e:	f005 f87f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001992:	463a      	mov	r2, r7
 8001994:	2364      	movs	r3, #100	; 0x64
 8001996:	9300      	str	r3, [sp, #0]
 8001998:	2301      	movs	r3, #1
 800199a:	2100      	movs	r1, #0
 800199c:	48a7      	ldr	r0, [pc, #668]	; (8001c3c <lcd_init+0xd98>)
 800199e:	f005 fc97 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80019a2:	2001      	movs	r0, #1
 80019a4:	f005 f874 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80019a8:	1d3a      	adds	r2, r7, #4
 80019aa:	2364      	movs	r3, #100	; 0x64
 80019ac:	9300      	str	r3, [sp, #0]
 80019ae:	2301      	movs	r3, #1
 80019b0:	2100      	movs	r1, #0
 80019b2:	48a2      	ldr	r0, [pc, #648]	; (8001c3c <lcd_init+0xd98>)
 80019b4:	f005 fc8c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80019b8:	2001      	movs	r0, #1
 80019ba:	f005 f869 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80019be:	463a      	mov	r2, r7
 80019c0:	2364      	movs	r3, #100	; 0x64
 80019c2:	9300      	str	r3, [sp, #0]
 80019c4:	2301      	movs	r3, #1
 80019c6:	2100      	movs	r1, #0
 80019c8:	489c      	ldr	r0, [pc, #624]	; (8001c3c <lcd_init+0xd98>)
 80019ca:	f005 fc81 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80019ce:	2001      	movs	r0, #1
 80019d0:	f005 f85e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80019d4:	463a      	mov	r2, r7
 80019d6:	2364      	movs	r3, #100	; 0x64
 80019d8:	9300      	str	r3, [sp, #0]
 80019da:	2301      	movs	r3, #1
 80019dc:	2100      	movs	r1, #0
 80019de:	4897      	ldr	r0, [pc, #604]	; (8001c3c <lcd_init+0xd98>)
 80019e0:	f005 fc76 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80019e4:	2001      	movs	r0, #1
 80019e6:	f005 f853 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80019ea:	1d3a      	adds	r2, r7, #4
 80019ec:	2364      	movs	r3, #100	; 0x64
 80019ee:	9300      	str	r3, [sp, #0]
 80019f0:	2301      	movs	r3, #1
 80019f2:	2100      	movs	r1, #0
 80019f4:	4891      	ldr	r0, [pc, #580]	; (8001c3c <lcd_init+0xd98>)
 80019f6:	f005 fc6b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80019fa:	2001      	movs	r0, #1
 80019fc:	f005 f848 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001a00:	463a      	mov	r2, r7
 8001a02:	2364      	movs	r3, #100	; 0x64
 8001a04:	9300      	str	r3, [sp, #0]
 8001a06:	2301      	movs	r3, #1
 8001a08:	2100      	movs	r1, #0
 8001a0a:	488c      	ldr	r0, [pc, #560]	; (8001c3c <lcd_init+0xd98>)
 8001a0c:	f005 fc60 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001a10:	2001      	movs	r0, #1
 8001a12:	f005 f83d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001a16:	1d3a      	adds	r2, r7, #4
 8001a18:	2364      	movs	r3, #100	; 0x64
 8001a1a:	9300      	str	r3, [sp, #0]
 8001a1c:	2301      	movs	r3, #1
 8001a1e:	2100      	movs	r1, #0
 8001a20:	4886      	ldr	r0, [pc, #536]	; (8001c3c <lcd_init+0xd98>)
 8001a22:	f005 fc55 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001a26:	2001      	movs	r0, #1
 8001a28:	f005 f832 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001a2c:	463a      	mov	r2, r7
 8001a2e:	2364      	movs	r3, #100	; 0x64
 8001a30:	9300      	str	r3, [sp, #0]
 8001a32:	2301      	movs	r3, #1
 8001a34:	2100      	movs	r1, #0
 8001a36:	4881      	ldr	r0, [pc, #516]	; (8001c3c <lcd_init+0xd98>)
 8001a38:	f005 fc4a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001a3c:	2001      	movs	r0, #1
 8001a3e:	f005 f827 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001a42:	463a      	mov	r2, r7
 8001a44:	2364      	movs	r3, #100	; 0x64
 8001a46:	9300      	str	r3, [sp, #0]
 8001a48:	2301      	movs	r3, #1
 8001a4a:	2100      	movs	r1, #0
 8001a4c:	487b      	ldr	r0, [pc, #492]	; (8001c3c <lcd_init+0xd98>)
 8001a4e:	f005 fc3f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001a52:	2001      	movs	r0, #1
 8001a54:	f005 f81c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001a58:	1d3a      	adds	r2, r7, #4
 8001a5a:	2364      	movs	r3, #100	; 0x64
 8001a5c:	9300      	str	r3, [sp, #0]
 8001a5e:	2301      	movs	r3, #1
 8001a60:	2100      	movs	r1, #0
 8001a62:	4876      	ldr	r0, [pc, #472]	; (8001c3c <lcd_init+0xd98>)
 8001a64:	f005 fc34 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001a68:	2001      	movs	r0, #1
 8001a6a:	f005 f811 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001a6e:	463a      	mov	r2, r7
 8001a70:	2364      	movs	r3, #100	; 0x64
 8001a72:	9300      	str	r3, [sp, #0]
 8001a74:	2301      	movs	r3, #1
 8001a76:	2100      	movs	r1, #0
 8001a78:	4870      	ldr	r0, [pc, #448]	; (8001c3c <lcd_init+0xd98>)
 8001a7a:	f005 fc29 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001a7e:	2001      	movs	r0, #1
 8001a80:	f005 f806 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001a84:	1d3a      	adds	r2, r7, #4
 8001a86:	2364      	movs	r3, #100	; 0x64
 8001a88:	9300      	str	r3, [sp, #0]
 8001a8a:	2301      	movs	r3, #1
 8001a8c:	2100      	movs	r1, #0
 8001a8e:	486b      	ldr	r0, [pc, #428]	; (8001c3c <lcd_init+0xd98>)
 8001a90:	f005 fc1e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001a94:	2001      	movs	r0, #1
 8001a96:	f004 fffb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001a9a:	463a      	mov	r2, r7
 8001a9c:	2364      	movs	r3, #100	; 0x64
 8001a9e:	9300      	str	r3, [sp, #0]
 8001aa0:	2301      	movs	r3, #1
 8001aa2:	2100      	movs	r1, #0
 8001aa4:	4865      	ldr	r0, [pc, #404]	; (8001c3c <lcd_init+0xd98>)
 8001aa6:	f005 fc13 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001aaa:	2001      	movs	r0, #1
 8001aac:	f004 fff0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001ab0:	463a      	mov	r2, r7
 8001ab2:	2364      	movs	r3, #100	; 0x64
 8001ab4:	9300      	str	r3, [sp, #0]
 8001ab6:	2301      	movs	r3, #1
 8001ab8:	2100      	movs	r1, #0
 8001aba:	4860      	ldr	r0, [pc, #384]	; (8001c3c <lcd_init+0xd98>)
 8001abc:	f005 fc08 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ac0:	2001      	movs	r0, #1
 8001ac2:	f004 ffe5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001ac6:	1d3a      	adds	r2, r7, #4
 8001ac8:	2364      	movs	r3, #100	; 0x64
 8001aca:	9300      	str	r3, [sp, #0]
 8001acc:	2301      	movs	r3, #1
 8001ace:	2100      	movs	r1, #0
 8001ad0:	485a      	ldr	r0, [pc, #360]	; (8001c3c <lcd_init+0xd98>)
 8001ad2:	f005 fbfd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ad6:	2001      	movs	r0, #1
 8001ad8:	f004 ffda 	bl	8006a90 <HAL_Delay>
    /*--------------Quatrieme ligne--------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,carreNoir,1,100);
 8001adc:	2364      	movs	r3, #100	; 0x64
 8001ade:	9302      	str	r3, [sp, #8]
 8001ae0:	2301      	movs	r3, #1
 8001ae2:	9301      	str	r3, [sp, #4]
 8001ae4:	1d3b      	adds	r3, r7, #4
 8001ae6:	9300      	str	r3, [sp, #0]
 8001ae8:	2301      	movs	r3, #1
 8001aea:	2204      	movs	r2, #4
 8001aec:	2100      	movs	r1, #0
 8001aee:	4853      	ldr	r0, [pc, #332]	; (8001c3c <lcd_init+0xd98>)
 8001af0:	f005 ff12 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8001af4:	2001      	movs	r0, #1
 8001af6:	f004 ffcb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001afa:	463a      	mov	r2, r7
 8001afc:	2364      	movs	r3, #100	; 0x64
 8001afe:	9300      	str	r3, [sp, #0]
 8001b00:	2301      	movs	r3, #1
 8001b02:	2100      	movs	r1, #0
 8001b04:	484d      	ldr	r0, [pc, #308]	; (8001c3c <lcd_init+0xd98>)
 8001b06:	f005 fbe3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001b0a:	2001      	movs	r0, #1
 8001b0c:	f004 ffc0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001b10:	463a      	mov	r2, r7
 8001b12:	2364      	movs	r3, #100	; 0x64
 8001b14:	9300      	str	r3, [sp, #0]
 8001b16:	2301      	movs	r3, #1
 8001b18:	2100      	movs	r1, #0
 8001b1a:	4848      	ldr	r0, [pc, #288]	; (8001c3c <lcd_init+0xd98>)
 8001b1c:	f005 fbd8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001b20:	2001      	movs	r0, #1
 8001b22:	f004 ffb5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001b26:	463a      	mov	r2, r7
 8001b28:	2364      	movs	r3, #100	; 0x64
 8001b2a:	9300      	str	r3, [sp, #0]
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	2100      	movs	r1, #0
 8001b30:	4842      	ldr	r0, [pc, #264]	; (8001c3c <lcd_init+0xd98>)
 8001b32:	f005 fbcd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001b36:	2001      	movs	r0, #1
 8001b38:	f004 ffaa 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001b3c:	1d3a      	adds	r2, r7, #4
 8001b3e:	2364      	movs	r3, #100	; 0x64
 8001b40:	9300      	str	r3, [sp, #0]
 8001b42:	2301      	movs	r3, #1
 8001b44:	2100      	movs	r1, #0
 8001b46:	483d      	ldr	r0, [pc, #244]	; (8001c3c <lcd_init+0xd98>)
 8001b48:	f005 fbc2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001b4c:	2001      	movs	r0, #1
 8001b4e:	f004 ff9f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001b52:	463a      	mov	r2, r7
 8001b54:	2364      	movs	r3, #100	; 0x64
 8001b56:	9300      	str	r3, [sp, #0]
 8001b58:	2301      	movs	r3, #1
 8001b5a:	2100      	movs	r1, #0
 8001b5c:	4837      	ldr	r0, [pc, #220]	; (8001c3c <lcd_init+0xd98>)
 8001b5e:	f005 fbb7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001b62:	2001      	movs	r0, #1
 8001b64:	f004 ff94 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001b68:	1d3a      	adds	r2, r7, #4
 8001b6a:	2364      	movs	r3, #100	; 0x64
 8001b6c:	9300      	str	r3, [sp, #0]
 8001b6e:	2301      	movs	r3, #1
 8001b70:	2100      	movs	r1, #0
 8001b72:	4832      	ldr	r0, [pc, #200]	; (8001c3c <lcd_init+0xd98>)
 8001b74:	f005 fbac 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001b78:	2001      	movs	r0, #1
 8001b7a:	f004 ff89 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001b7e:	463a      	mov	r2, r7
 8001b80:	2364      	movs	r3, #100	; 0x64
 8001b82:	9300      	str	r3, [sp, #0]
 8001b84:	2301      	movs	r3, #1
 8001b86:	2100      	movs	r1, #0
 8001b88:	482c      	ldr	r0, [pc, #176]	; (8001c3c <lcd_init+0xd98>)
 8001b8a:	f005 fba1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001b8e:	2001      	movs	r0, #1
 8001b90:	f004 ff7e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001b94:	463a      	mov	r2, r7
 8001b96:	2364      	movs	r3, #100	; 0x64
 8001b98:	9300      	str	r3, [sp, #0]
 8001b9a:	2301      	movs	r3, #1
 8001b9c:	2100      	movs	r1, #0
 8001b9e:	4827      	ldr	r0, [pc, #156]	; (8001c3c <lcd_init+0xd98>)
 8001ba0:	f005 fb96 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ba4:	2001      	movs	r0, #1
 8001ba6:	f004 ff73 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001baa:	1d3a      	adds	r2, r7, #4
 8001bac:	2364      	movs	r3, #100	; 0x64
 8001bae:	9300      	str	r3, [sp, #0]
 8001bb0:	2301      	movs	r3, #1
 8001bb2:	2100      	movs	r1, #0
 8001bb4:	4821      	ldr	r0, [pc, #132]	; (8001c3c <lcd_init+0xd98>)
 8001bb6:	f005 fb8b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001bba:	2001      	movs	r0, #1
 8001bbc:	f004 ff68 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001bc0:	463a      	mov	r2, r7
 8001bc2:	2364      	movs	r3, #100	; 0x64
 8001bc4:	9300      	str	r3, [sp, #0]
 8001bc6:	2301      	movs	r3, #1
 8001bc8:	2100      	movs	r1, #0
 8001bca:	481c      	ldr	r0, [pc, #112]	; (8001c3c <lcd_init+0xd98>)
 8001bcc:	f005 fb80 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001bd0:	2001      	movs	r0, #1
 8001bd2:	f004 ff5d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001bd6:	1d3a      	adds	r2, r7, #4
 8001bd8:	2364      	movs	r3, #100	; 0x64
 8001bda:	9300      	str	r3, [sp, #0]
 8001bdc:	2301      	movs	r3, #1
 8001bde:	2100      	movs	r1, #0
 8001be0:	4816      	ldr	r0, [pc, #88]	; (8001c3c <lcd_init+0xd98>)
 8001be2:	f005 fb75 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001be6:	2001      	movs	r0, #1
 8001be8:	f004 ff52 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001bec:	1d3a      	adds	r2, r7, #4
 8001bee:	2364      	movs	r3, #100	; 0x64
 8001bf0:	9300      	str	r3, [sp, #0]
 8001bf2:	2301      	movs	r3, #1
 8001bf4:	2100      	movs	r1, #0
 8001bf6:	4811      	ldr	r0, [pc, #68]	; (8001c3c <lcd_init+0xd98>)
 8001bf8:	f005 fb6a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001bfc:	2001      	movs	r0, #1
 8001bfe:	f004 ff47 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001c02:	1d3a      	adds	r2, r7, #4
 8001c04:	2364      	movs	r3, #100	; 0x64
 8001c06:	9300      	str	r3, [sp, #0]
 8001c08:	2301      	movs	r3, #1
 8001c0a:	2100      	movs	r1, #0
 8001c0c:	480b      	ldr	r0, [pc, #44]	; (8001c3c <lcd_init+0xd98>)
 8001c0e:	f005 fb5f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001c12:	2001      	movs	r0, #1
 8001c14:	f004 ff3c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001c18:	1d3a      	adds	r2, r7, #4
 8001c1a:	2364      	movs	r3, #100	; 0x64
 8001c1c:	9300      	str	r3, [sp, #0]
 8001c1e:	2301      	movs	r3, #1
 8001c20:	2100      	movs	r1, #0
 8001c22:	4806      	ldr	r0, [pc, #24]	; (8001c3c <lcd_init+0xd98>)
 8001c24:	f005 fb54 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001c28:	2001      	movs	r0, #1
 8001c2a:	f004 ff31 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001c2e:	463a      	mov	r2, r7
 8001c30:	2364      	movs	r3, #100	; 0x64
 8001c32:	9300      	str	r3, [sp, #0]
 8001c34:	2301      	movs	r3, #1
 8001c36:	2100      	movs	r1, #0
 8001c38:	e002      	b.n	8001c40 <lcd_init+0xd9c>
 8001c3a:	bf00      	nop
 8001c3c:	200000a4 	.word	0x200000a4
 8001c40:	48d5      	ldr	r0, [pc, #852]	; (8001f98 <lcd_init+0x10f4>)
 8001c42:	f005 fb45 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001c46:	2001      	movs	r0, #1
 8001c48:	f004 ff22 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001c4c:	1d3a      	adds	r2, r7, #4
 8001c4e:	2364      	movs	r3, #100	; 0x64
 8001c50:	9300      	str	r3, [sp, #0]
 8001c52:	2301      	movs	r3, #1
 8001c54:	2100      	movs	r1, #0
 8001c56:	48d0      	ldr	r0, [pc, #832]	; (8001f98 <lcd_init+0x10f4>)
 8001c58:	f005 fb3a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001c5c:	2001      	movs	r0, #1
 8001c5e:	f004 ff17 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001c62:	1d3a      	adds	r2, r7, #4
 8001c64:	2364      	movs	r3, #100	; 0x64
 8001c66:	9300      	str	r3, [sp, #0]
 8001c68:	2301      	movs	r3, #1
 8001c6a:	2100      	movs	r1, #0
 8001c6c:	48ca      	ldr	r0, [pc, #808]	; (8001f98 <lcd_init+0x10f4>)
 8001c6e:	f005 fb2f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001c72:	2001      	movs	r0, #1
 8001c74:	f004 ff0c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8001c78:	1d3a      	adds	r2, r7, #4
 8001c7a:	2364      	movs	r3, #100	; 0x64
 8001c7c:	9300      	str	r3, [sp, #0]
 8001c7e:	2301      	movs	r3, #1
 8001c80:	2100      	movs	r1, #0
 8001c82:	48c5      	ldr	r0, [pc, #788]	; (8001f98 <lcd_init+0x10f4>)
 8001c84:	f005 fb24 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001c88:	2001      	movs	r0, #1
 8001c8a:	f004 ff01 	bl	8006a90 <HAL_Delay>
/*-----------------------------------------------FIN-----------------------------------------------*/

/*-----------------------------------------------DEBUT-----------------------------------------------*/

    /*--------------------Premiere ligne----------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x01,1,space,1,100);
 8001c8e:	2364      	movs	r3, #100	; 0x64
 8001c90:	9302      	str	r3, [sp, #8]
 8001c92:	2301      	movs	r3, #1
 8001c94:	9301      	str	r3, [sp, #4]
 8001c96:	463b      	mov	r3, r7
 8001c98:	9300      	str	r3, [sp, #0]
 8001c9a:	2301      	movs	r3, #1
 8001c9c:	2201      	movs	r2, #1
 8001c9e:	2100      	movs	r1, #0
 8001ca0:	48bd      	ldr	r0, [pc, #756]	; (8001f98 <lcd_init+0x10f4>)
 8001ca2:	f005 fe39 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8001ca6:	2001      	movs	r0, #1
 8001ca8:	f004 fef2 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001cac:	463a      	mov	r2, r7
 8001cae:	2364      	movs	r3, #100	; 0x64
 8001cb0:	9300      	str	r3, [sp, #0]
 8001cb2:	2301      	movs	r3, #1
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	48b8      	ldr	r0, [pc, #736]	; (8001f98 <lcd_init+0x10f4>)
 8001cb8:	f005 fb0a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001cbc:	2001      	movs	r0, #1
 8001cbe:	f004 fee7 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001cc2:	463a      	mov	r2, r7
 8001cc4:	2364      	movs	r3, #100	; 0x64
 8001cc6:	9300      	str	r3, [sp, #0]
 8001cc8:	2301      	movs	r3, #1
 8001cca:	2100      	movs	r1, #0
 8001ccc:	48b2      	ldr	r0, [pc, #712]	; (8001f98 <lcd_init+0x10f4>)
 8001cce:	f005 faff 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001cd2:	2001      	movs	r0, #1
 8001cd4:	f004 fedc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001cd8:	463a      	mov	r2, r7
 8001cda:	2364      	movs	r3, #100	; 0x64
 8001cdc:	9300      	str	r3, [sp, #0]
 8001cde:	2301      	movs	r3, #1
 8001ce0:	2100      	movs	r1, #0
 8001ce2:	48ad      	ldr	r0, [pc, #692]	; (8001f98 <lcd_init+0x10f4>)
 8001ce4:	f005 faf4 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ce8:	2001      	movs	r0, #1
 8001cea:	f004 fed1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001cee:	463a      	mov	r2, r7
 8001cf0:	2364      	movs	r3, #100	; 0x64
 8001cf2:	9300      	str	r3, [sp, #0]
 8001cf4:	2301      	movs	r3, #1
 8001cf6:	2100      	movs	r1, #0
 8001cf8:	48a7      	ldr	r0, [pc, #668]	; (8001f98 <lcd_init+0x10f4>)
 8001cfa:	f005 fae9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001cfe:	2001      	movs	r0, #1
 8001d00:	f004 fec6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d04:	463a      	mov	r2, r7
 8001d06:	2364      	movs	r3, #100	; 0x64
 8001d08:	9300      	str	r3, [sp, #0]
 8001d0a:	2301      	movs	r3, #1
 8001d0c:	2100      	movs	r1, #0
 8001d0e:	48a2      	ldr	r0, [pc, #648]	; (8001f98 <lcd_init+0x10f4>)
 8001d10:	f005 fade 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001d14:	2001      	movs	r0, #1
 8001d16:	f004 febb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d1a:	463a      	mov	r2, r7
 8001d1c:	2364      	movs	r3, #100	; 0x64
 8001d1e:	9300      	str	r3, [sp, #0]
 8001d20:	2301      	movs	r3, #1
 8001d22:	2100      	movs	r1, #0
 8001d24:	489c      	ldr	r0, [pc, #624]	; (8001f98 <lcd_init+0x10f4>)
 8001d26:	f005 fad3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001d2a:	2001      	movs	r0, #1
 8001d2c:	f004 feb0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d30:	463a      	mov	r2, r7
 8001d32:	2364      	movs	r3, #100	; 0x64
 8001d34:	9300      	str	r3, [sp, #0]
 8001d36:	2301      	movs	r3, #1
 8001d38:	2100      	movs	r1, #0
 8001d3a:	4897      	ldr	r0, [pc, #604]	; (8001f98 <lcd_init+0x10f4>)
 8001d3c:	f005 fac8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001d40:	2001      	movs	r0, #1
 8001d42:	f004 fea5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d46:	463a      	mov	r2, r7
 8001d48:	2364      	movs	r3, #100	; 0x64
 8001d4a:	9300      	str	r3, [sp, #0]
 8001d4c:	2301      	movs	r3, #1
 8001d4e:	2100      	movs	r1, #0
 8001d50:	4891      	ldr	r0, [pc, #580]	; (8001f98 <lcd_init+0x10f4>)
 8001d52:	f005 fabd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001d56:	2001      	movs	r0, #1
 8001d58:	f004 fe9a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d5c:	463a      	mov	r2, r7
 8001d5e:	2364      	movs	r3, #100	; 0x64
 8001d60:	9300      	str	r3, [sp, #0]
 8001d62:	2301      	movs	r3, #1
 8001d64:	2100      	movs	r1, #0
 8001d66:	488c      	ldr	r0, [pc, #560]	; (8001f98 <lcd_init+0x10f4>)
 8001d68:	f005 fab2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001d6c:	2001      	movs	r0, #1
 8001d6e:	f004 fe8f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d72:	463a      	mov	r2, r7
 8001d74:	2364      	movs	r3, #100	; 0x64
 8001d76:	9300      	str	r3, [sp, #0]
 8001d78:	2301      	movs	r3, #1
 8001d7a:	2100      	movs	r1, #0
 8001d7c:	4886      	ldr	r0, [pc, #536]	; (8001f98 <lcd_init+0x10f4>)
 8001d7e:	f005 faa7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001d82:	2001      	movs	r0, #1
 8001d84:	f004 fe84 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d88:	463a      	mov	r2, r7
 8001d8a:	2364      	movs	r3, #100	; 0x64
 8001d8c:	9300      	str	r3, [sp, #0]
 8001d8e:	2301      	movs	r3, #1
 8001d90:	2100      	movs	r1, #0
 8001d92:	4881      	ldr	r0, [pc, #516]	; (8001f98 <lcd_init+0x10f4>)
 8001d94:	f005 fa9c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001d98:	2001      	movs	r0, #1
 8001d9a:	f004 fe79 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001d9e:	463a      	mov	r2, r7
 8001da0:	2364      	movs	r3, #100	; 0x64
 8001da2:	9300      	str	r3, [sp, #0]
 8001da4:	2301      	movs	r3, #1
 8001da6:	2100      	movs	r1, #0
 8001da8:	487b      	ldr	r0, [pc, #492]	; (8001f98 <lcd_init+0x10f4>)
 8001daa:	f005 fa91 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001dae:	2001      	movs	r0, #1
 8001db0:	f004 fe6e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001db4:	463a      	mov	r2, r7
 8001db6:	2364      	movs	r3, #100	; 0x64
 8001db8:	9300      	str	r3, [sp, #0]
 8001dba:	2301      	movs	r3, #1
 8001dbc:	2100      	movs	r1, #0
 8001dbe:	4876      	ldr	r0, [pc, #472]	; (8001f98 <lcd_init+0x10f4>)
 8001dc0:	f005 fa86 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001dc4:	2001      	movs	r0, #1
 8001dc6:	f004 fe63 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001dca:	463a      	mov	r2, r7
 8001dcc:	2364      	movs	r3, #100	; 0x64
 8001dce:	9300      	str	r3, [sp, #0]
 8001dd0:	2301      	movs	r3, #1
 8001dd2:	2100      	movs	r1, #0
 8001dd4:	4870      	ldr	r0, [pc, #448]	; (8001f98 <lcd_init+0x10f4>)
 8001dd6:	f005 fa7b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001dda:	2001      	movs	r0, #1
 8001ddc:	f004 fe58 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001de0:	463a      	mov	r2, r7
 8001de2:	2364      	movs	r3, #100	; 0x64
 8001de4:	9300      	str	r3, [sp, #0]
 8001de6:	2301      	movs	r3, #1
 8001de8:	2100      	movs	r1, #0
 8001dea:	486b      	ldr	r0, [pc, #428]	; (8001f98 <lcd_init+0x10f4>)
 8001dec:	f005 fa70 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001df0:	2001      	movs	r0, #1
 8001df2:	f004 fe4d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001df6:	463a      	mov	r2, r7
 8001df8:	2364      	movs	r3, #100	; 0x64
 8001dfa:	9300      	str	r3, [sp, #0]
 8001dfc:	2301      	movs	r3, #1
 8001dfe:	2100      	movs	r1, #0
 8001e00:	4865      	ldr	r0, [pc, #404]	; (8001f98 <lcd_init+0x10f4>)
 8001e02:	f005 fa65 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001e06:	2001      	movs	r0, #1
 8001e08:	f004 fe42 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001e0c:	463a      	mov	r2, r7
 8001e0e:	2364      	movs	r3, #100	; 0x64
 8001e10:	9300      	str	r3, [sp, #0]
 8001e12:	2301      	movs	r3, #1
 8001e14:	2100      	movs	r1, #0
 8001e16:	4860      	ldr	r0, [pc, #384]	; (8001f98 <lcd_init+0x10f4>)
 8001e18:	f005 fa5a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001e1c:	2001      	movs	r0, #1
 8001e1e:	f004 fe37 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001e22:	463a      	mov	r2, r7
 8001e24:	2364      	movs	r3, #100	; 0x64
 8001e26:	9300      	str	r3, [sp, #0]
 8001e28:	2301      	movs	r3, #1
 8001e2a:	2100      	movs	r1, #0
 8001e2c:	485a      	ldr	r0, [pc, #360]	; (8001f98 <lcd_init+0x10f4>)
 8001e2e:	f005 fa4f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001e32:	2001      	movs	r0, #1
 8001e34:	f004 fe2c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001e38:	463a      	mov	r2, r7
 8001e3a:	2364      	movs	r3, #100	; 0x64
 8001e3c:	9300      	str	r3, [sp, #0]
 8001e3e:	2301      	movs	r3, #1
 8001e40:	2100      	movs	r1, #0
 8001e42:	4855      	ldr	r0, [pc, #340]	; (8001f98 <lcd_init+0x10f4>)
 8001e44:	f005 fa44 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001e48:	2001      	movs	r0, #1
 8001e4a:	f004 fe21 	bl	8006a90 <HAL_Delay>

    /*--------------------Seconde ligne----------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x02,1,space,1,100);
 8001e4e:	2364      	movs	r3, #100	; 0x64
 8001e50:	9302      	str	r3, [sp, #8]
 8001e52:	2301      	movs	r3, #1
 8001e54:	9301      	str	r3, [sp, #4]
 8001e56:	463b      	mov	r3, r7
 8001e58:	9300      	str	r3, [sp, #0]
 8001e5a:	2301      	movs	r3, #1
 8001e5c:	2202      	movs	r2, #2
 8001e5e:	2100      	movs	r1, #0
 8001e60:	484d      	ldr	r0, [pc, #308]	; (8001f98 <lcd_init+0x10f4>)
 8001e62:	f005 fd59 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8001e66:	2001      	movs	r0, #1
 8001e68:	f004 fe12 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001e6c:	463a      	mov	r2, r7
 8001e6e:	2364      	movs	r3, #100	; 0x64
 8001e70:	9300      	str	r3, [sp, #0]
 8001e72:	2301      	movs	r3, #1
 8001e74:	2100      	movs	r1, #0
 8001e76:	4848      	ldr	r0, [pc, #288]	; (8001f98 <lcd_init+0x10f4>)
 8001e78:	f005 fa2a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001e7c:	2001      	movs	r0, #1
 8001e7e:	f004 fe07 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001e82:	463a      	mov	r2, r7
 8001e84:	2364      	movs	r3, #100	; 0x64
 8001e86:	9300      	str	r3, [sp, #0]
 8001e88:	2301      	movs	r3, #1
 8001e8a:	2100      	movs	r1, #0
 8001e8c:	4842      	ldr	r0, [pc, #264]	; (8001f98 <lcd_init+0x10f4>)
 8001e8e:	f005 fa1f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001e92:	2001      	movs	r0, #1
 8001e94:	f004 fdfc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001e98:	463a      	mov	r2, r7
 8001e9a:	2364      	movs	r3, #100	; 0x64
 8001e9c:	9300      	str	r3, [sp, #0]
 8001e9e:	2301      	movs	r3, #1
 8001ea0:	2100      	movs	r1, #0
 8001ea2:	483d      	ldr	r0, [pc, #244]	; (8001f98 <lcd_init+0x10f4>)
 8001ea4:	f005 fa14 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ea8:	2001      	movs	r0, #1
 8001eaa:	f004 fdf1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001eae:	463a      	mov	r2, r7
 8001eb0:	2364      	movs	r3, #100	; 0x64
 8001eb2:	9300      	str	r3, [sp, #0]
 8001eb4:	2301      	movs	r3, #1
 8001eb6:	2100      	movs	r1, #0
 8001eb8:	4837      	ldr	r0, [pc, #220]	; (8001f98 <lcd_init+0x10f4>)
 8001eba:	f005 fa09 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ebe:	2001      	movs	r0, #1
 8001ec0:	f004 fde6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001ec4:	463a      	mov	r2, r7
 8001ec6:	2364      	movs	r3, #100	; 0x64
 8001ec8:	9300      	str	r3, [sp, #0]
 8001eca:	2301      	movs	r3, #1
 8001ecc:	2100      	movs	r1, #0
 8001ece:	4832      	ldr	r0, [pc, #200]	; (8001f98 <lcd_init+0x10f4>)
 8001ed0:	f005 f9fe 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ed4:	2001      	movs	r0, #1
 8001ed6:	f004 fddb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001eda:	463a      	mov	r2, r7
 8001edc:	2364      	movs	r3, #100	; 0x64
 8001ede:	9300      	str	r3, [sp, #0]
 8001ee0:	2301      	movs	r3, #1
 8001ee2:	2100      	movs	r1, #0
 8001ee4:	482c      	ldr	r0, [pc, #176]	; (8001f98 <lcd_init+0x10f4>)
 8001ee6:	f005 f9f3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001eea:	2001      	movs	r0, #1
 8001eec:	f004 fdd0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001ef0:	463a      	mov	r2, r7
 8001ef2:	2364      	movs	r3, #100	; 0x64
 8001ef4:	9300      	str	r3, [sp, #0]
 8001ef6:	2301      	movs	r3, #1
 8001ef8:	2100      	movs	r1, #0
 8001efa:	4827      	ldr	r0, [pc, #156]	; (8001f98 <lcd_init+0x10f4>)
 8001efc:	f005 f9e8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001f00:	2001      	movs	r0, #1
 8001f02:	f004 fdc5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001f06:	463a      	mov	r2, r7
 8001f08:	2364      	movs	r3, #100	; 0x64
 8001f0a:	9300      	str	r3, [sp, #0]
 8001f0c:	2301      	movs	r3, #1
 8001f0e:	2100      	movs	r1, #0
 8001f10:	4821      	ldr	r0, [pc, #132]	; (8001f98 <lcd_init+0x10f4>)
 8001f12:	f005 f9dd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001f16:	2001      	movs	r0, #1
 8001f18:	f004 fdba 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001f1c:	463a      	mov	r2, r7
 8001f1e:	2364      	movs	r3, #100	; 0x64
 8001f20:	9300      	str	r3, [sp, #0]
 8001f22:	2301      	movs	r3, #1
 8001f24:	2100      	movs	r1, #0
 8001f26:	481c      	ldr	r0, [pc, #112]	; (8001f98 <lcd_init+0x10f4>)
 8001f28:	f005 f9d2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001f2c:	2001      	movs	r0, #1
 8001f2e:	f004 fdaf 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001f32:	463a      	mov	r2, r7
 8001f34:	2364      	movs	r3, #100	; 0x64
 8001f36:	9300      	str	r3, [sp, #0]
 8001f38:	2301      	movs	r3, #1
 8001f3a:	2100      	movs	r1, #0
 8001f3c:	4816      	ldr	r0, [pc, #88]	; (8001f98 <lcd_init+0x10f4>)
 8001f3e:	f005 f9c7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001f42:	2001      	movs	r0, #1
 8001f44:	f004 fda4 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001f48:	463a      	mov	r2, r7
 8001f4a:	2364      	movs	r3, #100	; 0x64
 8001f4c:	9300      	str	r3, [sp, #0]
 8001f4e:	2301      	movs	r3, #1
 8001f50:	2100      	movs	r1, #0
 8001f52:	4811      	ldr	r0, [pc, #68]	; (8001f98 <lcd_init+0x10f4>)
 8001f54:	f005 f9bc 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001f58:	2001      	movs	r0, #1
 8001f5a:	f004 fd99 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001f5e:	463a      	mov	r2, r7
 8001f60:	2364      	movs	r3, #100	; 0x64
 8001f62:	9300      	str	r3, [sp, #0]
 8001f64:	2301      	movs	r3, #1
 8001f66:	2100      	movs	r1, #0
 8001f68:	480b      	ldr	r0, [pc, #44]	; (8001f98 <lcd_init+0x10f4>)
 8001f6a:	f005 f9b1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001f6e:	2001      	movs	r0, #1
 8001f70:	f004 fd8e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001f74:	463a      	mov	r2, r7
 8001f76:	2364      	movs	r3, #100	; 0x64
 8001f78:	9300      	str	r3, [sp, #0]
 8001f7a:	2301      	movs	r3, #1
 8001f7c:	2100      	movs	r1, #0
 8001f7e:	4806      	ldr	r0, [pc, #24]	; (8001f98 <lcd_init+0x10f4>)
 8001f80:	f005 f9a6 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001f84:	2001      	movs	r0, #1
 8001f86:	f004 fd83 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001f8a:	463a      	mov	r2, r7
 8001f8c:	2364      	movs	r3, #100	; 0x64
 8001f8e:	9300      	str	r3, [sp, #0]
 8001f90:	2301      	movs	r3, #1
 8001f92:	2100      	movs	r1, #0
 8001f94:	e002      	b.n	8001f9c <lcd_init+0x10f8>
 8001f96:	bf00      	nop
 8001f98:	200000a4 	.word	0x200000a4
 8001f9c:	48d5      	ldr	r0, [pc, #852]	; (80022f4 <lcd_init+0x1450>)
 8001f9e:	f005 f997 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001fa2:	2001      	movs	r0, #1
 8001fa4:	f004 fd74 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001fa8:	463a      	mov	r2, r7
 8001faa:	2364      	movs	r3, #100	; 0x64
 8001fac:	9300      	str	r3, [sp, #0]
 8001fae:	2301      	movs	r3, #1
 8001fb0:	2100      	movs	r1, #0
 8001fb2:	48d0      	ldr	r0, [pc, #832]	; (80022f4 <lcd_init+0x1450>)
 8001fb4:	f005 f98c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001fb8:	2001      	movs	r0, #1
 8001fba:	f004 fd69 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001fbe:	463a      	mov	r2, r7
 8001fc0:	2364      	movs	r3, #100	; 0x64
 8001fc2:	9300      	str	r3, [sp, #0]
 8001fc4:	2301      	movs	r3, #1
 8001fc6:	2100      	movs	r1, #0
 8001fc8:	48ca      	ldr	r0, [pc, #808]	; (80022f4 <lcd_init+0x1450>)
 8001fca:	f005 f981 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001fce:	2001      	movs	r0, #1
 8001fd0:	f004 fd5e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001fd4:	463a      	mov	r2, r7
 8001fd6:	2364      	movs	r3, #100	; 0x64
 8001fd8:	9300      	str	r3, [sp, #0]
 8001fda:	2301      	movs	r3, #1
 8001fdc:	2100      	movs	r1, #0
 8001fde:	48c5      	ldr	r0, [pc, #788]	; (80022f4 <lcd_init+0x1450>)
 8001fe0:	f005 f976 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001fe4:	2001      	movs	r0, #1
 8001fe6:	f004 fd53 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8001fea:	463a      	mov	r2, r7
 8001fec:	2364      	movs	r3, #100	; 0x64
 8001fee:	9300      	str	r3, [sp, #0]
 8001ff0:	2301      	movs	r3, #1
 8001ff2:	2100      	movs	r1, #0
 8001ff4:	48bf      	ldr	r0, [pc, #764]	; (80022f4 <lcd_init+0x1450>)
 8001ff6:	f005 f96b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8001ffa:	2001      	movs	r0, #1
 8001ffc:	f004 fd48 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002000:	463a      	mov	r2, r7
 8002002:	2364      	movs	r3, #100	; 0x64
 8002004:	9300      	str	r3, [sp, #0]
 8002006:	2301      	movs	r3, #1
 8002008:	2100      	movs	r1, #0
 800200a:	48ba      	ldr	r0, [pc, #744]	; (80022f4 <lcd_init+0x1450>)
 800200c:	f005 f960 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002010:	2001      	movs	r0, #1
 8002012:	f004 fd3d 	bl	8006a90 <HAL_Delay>

    /*--------------------Troisieme ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,carreNoir,1,100);
 8002016:	2364      	movs	r3, #100	; 0x64
 8002018:	9302      	str	r3, [sp, #8]
 800201a:	2301      	movs	r3, #1
 800201c:	9301      	str	r3, [sp, #4]
 800201e:	1d3b      	adds	r3, r7, #4
 8002020:	9300      	str	r3, [sp, #0]
 8002022:	2301      	movs	r3, #1
 8002024:	2203      	movs	r2, #3
 8002026:	2100      	movs	r1, #0
 8002028:	48b2      	ldr	r0, [pc, #712]	; (80022f4 <lcd_init+0x1450>)
 800202a:	f005 fc75 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 800202e:	2001      	movs	r0, #1
 8002030:	f004 fd2e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002034:	463a      	mov	r2, r7
 8002036:	2364      	movs	r3, #100	; 0x64
 8002038:	9300      	str	r3, [sp, #0]
 800203a:	2301      	movs	r3, #1
 800203c:	2100      	movs	r1, #0
 800203e:	48ad      	ldr	r0, [pc, #692]	; (80022f4 <lcd_init+0x1450>)
 8002040:	f005 f946 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002044:	2001      	movs	r0, #1
 8002046:	f004 fd23 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800204a:	463a      	mov	r2, r7
 800204c:	2364      	movs	r3, #100	; 0x64
 800204e:	9300      	str	r3, [sp, #0]
 8002050:	2301      	movs	r3, #1
 8002052:	2100      	movs	r1, #0
 8002054:	48a7      	ldr	r0, [pc, #668]	; (80022f4 <lcd_init+0x1450>)
 8002056:	f005 f93b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800205a:	2001      	movs	r0, #1
 800205c:	f004 fd18 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002060:	463a      	mov	r2, r7
 8002062:	2364      	movs	r3, #100	; 0x64
 8002064:	9300      	str	r3, [sp, #0]
 8002066:	2301      	movs	r3, #1
 8002068:	2100      	movs	r1, #0
 800206a:	48a2      	ldr	r0, [pc, #648]	; (80022f4 <lcd_init+0x1450>)
 800206c:	f005 f930 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002070:	2001      	movs	r0, #1
 8002072:	f004 fd0d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002076:	1d3a      	adds	r2, r7, #4
 8002078:	2364      	movs	r3, #100	; 0x64
 800207a:	9300      	str	r3, [sp, #0]
 800207c:	2301      	movs	r3, #1
 800207e:	2100      	movs	r1, #0
 8002080:	489c      	ldr	r0, [pc, #624]	; (80022f4 <lcd_init+0x1450>)
 8002082:	f005 f925 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002086:	2001      	movs	r0, #1
 8002088:	f004 fd02 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800208c:	463a      	mov	r2, r7
 800208e:	2364      	movs	r3, #100	; 0x64
 8002090:	9300      	str	r3, [sp, #0]
 8002092:	2301      	movs	r3, #1
 8002094:	2100      	movs	r1, #0
 8002096:	4897      	ldr	r0, [pc, #604]	; (80022f4 <lcd_init+0x1450>)
 8002098:	f005 f91a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800209c:	2001      	movs	r0, #1
 800209e:	f004 fcf7 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80020a2:	1d3a      	adds	r2, r7, #4
 80020a4:	2364      	movs	r3, #100	; 0x64
 80020a6:	9300      	str	r3, [sp, #0]
 80020a8:	2301      	movs	r3, #1
 80020aa:	2100      	movs	r1, #0
 80020ac:	4891      	ldr	r0, [pc, #580]	; (80022f4 <lcd_init+0x1450>)
 80020ae:	f005 f90f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80020b2:	2001      	movs	r0, #1
 80020b4:	f004 fcec 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80020b8:	1d3a      	adds	r2, r7, #4
 80020ba:	2364      	movs	r3, #100	; 0x64
 80020bc:	9300      	str	r3, [sp, #0]
 80020be:	2301      	movs	r3, #1
 80020c0:	2100      	movs	r1, #0
 80020c2:	488c      	ldr	r0, [pc, #560]	; (80022f4 <lcd_init+0x1450>)
 80020c4:	f005 f904 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80020c8:	2001      	movs	r0, #1
 80020ca:	f004 fce1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80020ce:	1d3a      	adds	r2, r7, #4
 80020d0:	2364      	movs	r3, #100	; 0x64
 80020d2:	9300      	str	r3, [sp, #0]
 80020d4:	2301      	movs	r3, #1
 80020d6:	2100      	movs	r1, #0
 80020d8:	4886      	ldr	r0, [pc, #536]	; (80022f4 <lcd_init+0x1450>)
 80020da:	f005 f8f9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80020de:	2001      	movs	r0, #1
 80020e0:	f004 fcd6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80020e4:	463a      	mov	r2, r7
 80020e6:	2364      	movs	r3, #100	; 0x64
 80020e8:	9300      	str	r3, [sp, #0]
 80020ea:	2301      	movs	r3, #1
 80020ec:	2100      	movs	r1, #0
 80020ee:	4881      	ldr	r0, [pc, #516]	; (80022f4 <lcd_init+0x1450>)
 80020f0:	f005 f8ee 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80020f4:	2001      	movs	r0, #1
 80020f6:	f004 fccb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80020fa:	463a      	mov	r2, r7
 80020fc:	2364      	movs	r3, #100	; 0x64
 80020fe:	9300      	str	r3, [sp, #0]
 8002100:	2301      	movs	r3, #1
 8002102:	2100      	movs	r1, #0
 8002104:	487b      	ldr	r0, [pc, #492]	; (80022f4 <lcd_init+0x1450>)
 8002106:	f005 f8e3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800210a:	2001      	movs	r0, #1
 800210c:	f004 fcc0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002110:	1d3a      	adds	r2, r7, #4
 8002112:	2364      	movs	r3, #100	; 0x64
 8002114:	9300      	str	r3, [sp, #0]
 8002116:	2301      	movs	r3, #1
 8002118:	2100      	movs	r1, #0
 800211a:	4876      	ldr	r0, [pc, #472]	; (80022f4 <lcd_init+0x1450>)
 800211c:	f005 f8d8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002120:	2001      	movs	r0, #1
 8002122:	f004 fcb5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002126:	1d3a      	adds	r2, r7, #4
 8002128:	2364      	movs	r3, #100	; 0x64
 800212a:	9300      	str	r3, [sp, #0]
 800212c:	2301      	movs	r3, #1
 800212e:	2100      	movs	r1, #0
 8002130:	4870      	ldr	r0, [pc, #448]	; (80022f4 <lcd_init+0x1450>)
 8002132:	f005 f8cd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002136:	2001      	movs	r0, #1
 8002138:	f004 fcaa 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800213c:	1d3a      	adds	r2, r7, #4
 800213e:	2364      	movs	r3, #100	; 0x64
 8002140:	9300      	str	r3, [sp, #0]
 8002142:	2301      	movs	r3, #1
 8002144:	2100      	movs	r1, #0
 8002146:	486b      	ldr	r0, [pc, #428]	; (80022f4 <lcd_init+0x1450>)
 8002148:	f005 f8c2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800214c:	2001      	movs	r0, #1
 800214e:	f004 fc9f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002152:	1d3a      	adds	r2, r7, #4
 8002154:	2364      	movs	r3, #100	; 0x64
 8002156:	9300      	str	r3, [sp, #0]
 8002158:	2301      	movs	r3, #1
 800215a:	2100      	movs	r1, #0
 800215c:	4865      	ldr	r0, [pc, #404]	; (80022f4 <lcd_init+0x1450>)
 800215e:	f005 f8b7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002162:	2001      	movs	r0, #1
 8002164:	f004 fc94 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002168:	463a      	mov	r2, r7
 800216a:	2364      	movs	r3, #100	; 0x64
 800216c:	9300      	str	r3, [sp, #0]
 800216e:	2301      	movs	r3, #1
 8002170:	2100      	movs	r1, #0
 8002172:	4860      	ldr	r0, [pc, #384]	; (80022f4 <lcd_init+0x1450>)
 8002174:	f005 f8ac 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002178:	2001      	movs	r0, #1
 800217a:	f004 fc89 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800217e:	1d3a      	adds	r2, r7, #4
 8002180:	2364      	movs	r3, #100	; 0x64
 8002182:	9300      	str	r3, [sp, #0]
 8002184:	2301      	movs	r3, #1
 8002186:	2100      	movs	r1, #0
 8002188:	485a      	ldr	r0, [pc, #360]	; (80022f4 <lcd_init+0x1450>)
 800218a:	f005 f8a1 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800218e:	2001      	movs	r0, #1
 8002190:	f004 fc7e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002194:	1d3a      	adds	r2, r7, #4
 8002196:	2364      	movs	r3, #100	; 0x64
 8002198:	9300      	str	r3, [sp, #0]
 800219a:	2301      	movs	r3, #1
 800219c:	2100      	movs	r1, #0
 800219e:	4855      	ldr	r0, [pc, #340]	; (80022f4 <lcd_init+0x1450>)
 80021a0:	f005 f896 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80021a4:	2001      	movs	r0, #1
 80021a6:	f004 fc73 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80021aa:	1d3a      	adds	r2, r7, #4
 80021ac:	2364      	movs	r3, #100	; 0x64
 80021ae:	9300      	str	r3, [sp, #0]
 80021b0:	2301      	movs	r3, #1
 80021b2:	2100      	movs	r1, #0
 80021b4:	484f      	ldr	r0, [pc, #316]	; (80022f4 <lcd_init+0x1450>)
 80021b6:	f005 f88b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80021ba:	2001      	movs	r0, #1
 80021bc:	f004 fc68 	bl	8006a90 <HAL_Delay>
    /*--------------------Quatrieme ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,carreNoir,1,100);
 80021c0:	2364      	movs	r3, #100	; 0x64
 80021c2:	9302      	str	r3, [sp, #8]
 80021c4:	2301      	movs	r3, #1
 80021c6:	9301      	str	r3, [sp, #4]
 80021c8:	1d3b      	adds	r3, r7, #4
 80021ca:	9300      	str	r3, [sp, #0]
 80021cc:	2301      	movs	r3, #1
 80021ce:	2204      	movs	r2, #4
 80021d0:	2100      	movs	r1, #0
 80021d2:	4848      	ldr	r0, [pc, #288]	; (80022f4 <lcd_init+0x1450>)
 80021d4:	f005 fba0 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 80021d8:	2001      	movs	r0, #1
 80021da:	f004 fc59 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80021de:	463a      	mov	r2, r7
 80021e0:	2364      	movs	r3, #100	; 0x64
 80021e2:	9300      	str	r3, [sp, #0]
 80021e4:	2301      	movs	r3, #1
 80021e6:	2100      	movs	r1, #0
 80021e8:	4842      	ldr	r0, [pc, #264]	; (80022f4 <lcd_init+0x1450>)
 80021ea:	f005 f871 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80021ee:	2001      	movs	r0, #1
 80021f0:	f004 fc4e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80021f4:	463a      	mov	r2, r7
 80021f6:	2364      	movs	r3, #100	; 0x64
 80021f8:	9300      	str	r3, [sp, #0]
 80021fa:	2301      	movs	r3, #1
 80021fc:	2100      	movs	r1, #0
 80021fe:	483d      	ldr	r0, [pc, #244]	; (80022f4 <lcd_init+0x1450>)
 8002200:	f005 f866 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002204:	2001      	movs	r0, #1
 8002206:	f004 fc43 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800220a:	463a      	mov	r2, r7
 800220c:	2364      	movs	r3, #100	; 0x64
 800220e:	9300      	str	r3, [sp, #0]
 8002210:	2301      	movs	r3, #1
 8002212:	2100      	movs	r1, #0
 8002214:	4837      	ldr	r0, [pc, #220]	; (80022f4 <lcd_init+0x1450>)
 8002216:	f005 f85b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800221a:	2001      	movs	r0, #1
 800221c:	f004 fc38 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002220:	1d3a      	adds	r2, r7, #4
 8002222:	2364      	movs	r3, #100	; 0x64
 8002224:	9300      	str	r3, [sp, #0]
 8002226:	2301      	movs	r3, #1
 8002228:	2100      	movs	r1, #0
 800222a:	4832      	ldr	r0, [pc, #200]	; (80022f4 <lcd_init+0x1450>)
 800222c:	f005 f850 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002230:	2001      	movs	r0, #1
 8002232:	f004 fc2d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002236:	463a      	mov	r2, r7
 8002238:	2364      	movs	r3, #100	; 0x64
 800223a:	9300      	str	r3, [sp, #0]
 800223c:	2301      	movs	r3, #1
 800223e:	2100      	movs	r1, #0
 8002240:	482c      	ldr	r0, [pc, #176]	; (80022f4 <lcd_init+0x1450>)
 8002242:	f005 f845 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002246:	2001      	movs	r0, #1
 8002248:	f004 fc22 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800224c:	1d3a      	adds	r2, r7, #4
 800224e:	2364      	movs	r3, #100	; 0x64
 8002250:	9300      	str	r3, [sp, #0]
 8002252:	2301      	movs	r3, #1
 8002254:	2100      	movs	r1, #0
 8002256:	4827      	ldr	r0, [pc, #156]	; (80022f4 <lcd_init+0x1450>)
 8002258:	f005 f83a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800225c:	2001      	movs	r0, #1
 800225e:	f004 fc17 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002262:	463a      	mov	r2, r7
 8002264:	2364      	movs	r3, #100	; 0x64
 8002266:	9300      	str	r3, [sp, #0]
 8002268:	2301      	movs	r3, #1
 800226a:	2100      	movs	r1, #0
 800226c:	4821      	ldr	r0, [pc, #132]	; (80022f4 <lcd_init+0x1450>)
 800226e:	f005 f82f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002272:	2001      	movs	r0, #1
 8002274:	f004 fc0c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002278:	463a      	mov	r2, r7
 800227a:	2364      	movs	r3, #100	; 0x64
 800227c:	9300      	str	r3, [sp, #0]
 800227e:	2301      	movs	r3, #1
 8002280:	2100      	movs	r1, #0
 8002282:	481c      	ldr	r0, [pc, #112]	; (80022f4 <lcd_init+0x1450>)
 8002284:	f005 f824 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002288:	2001      	movs	r0, #1
 800228a:	f004 fc01 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800228e:	1d3a      	adds	r2, r7, #4
 8002290:	2364      	movs	r3, #100	; 0x64
 8002292:	9300      	str	r3, [sp, #0]
 8002294:	2301      	movs	r3, #1
 8002296:	2100      	movs	r1, #0
 8002298:	4816      	ldr	r0, [pc, #88]	; (80022f4 <lcd_init+0x1450>)
 800229a:	f005 f819 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800229e:	2001      	movs	r0, #1
 80022a0:	f004 fbf6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80022a4:	463a      	mov	r2, r7
 80022a6:	2364      	movs	r3, #100	; 0x64
 80022a8:	9300      	str	r3, [sp, #0]
 80022aa:	2301      	movs	r3, #1
 80022ac:	2100      	movs	r1, #0
 80022ae:	4811      	ldr	r0, [pc, #68]	; (80022f4 <lcd_init+0x1450>)
 80022b0:	f005 f80e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80022b4:	2001      	movs	r0, #1
 80022b6:	f004 fbeb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80022ba:	1d3a      	adds	r2, r7, #4
 80022bc:	2364      	movs	r3, #100	; 0x64
 80022be:	9300      	str	r3, [sp, #0]
 80022c0:	2301      	movs	r3, #1
 80022c2:	2100      	movs	r1, #0
 80022c4:	480b      	ldr	r0, [pc, #44]	; (80022f4 <lcd_init+0x1450>)
 80022c6:	f005 f803 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80022ca:	2001      	movs	r0, #1
 80022cc:	f004 fbe0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80022d0:	463a      	mov	r2, r7
 80022d2:	2364      	movs	r3, #100	; 0x64
 80022d4:	9300      	str	r3, [sp, #0]
 80022d6:	2301      	movs	r3, #1
 80022d8:	2100      	movs	r1, #0
 80022da:	4806      	ldr	r0, [pc, #24]	; (80022f4 <lcd_init+0x1450>)
 80022dc:	f004 fff8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80022e0:	2001      	movs	r0, #1
 80022e2:	f004 fbd5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80022e6:	463a      	mov	r2, r7
 80022e8:	2364      	movs	r3, #100	; 0x64
 80022ea:	9300      	str	r3, [sp, #0]
 80022ec:	2301      	movs	r3, #1
 80022ee:	2100      	movs	r1, #0
 80022f0:	e002      	b.n	80022f8 <lcd_init+0x1454>
 80022f2:	bf00      	nop
 80022f4:	200000a4 	.word	0x200000a4
 80022f8:	48d5      	ldr	r0, [pc, #852]	; (8002650 <lcd_init+0x17ac>)
 80022fa:	f004 ffe9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80022fe:	2001      	movs	r0, #1
 8002300:	f004 fbc6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002304:	1d3a      	adds	r2, r7, #4
 8002306:	2364      	movs	r3, #100	; 0x64
 8002308:	9300      	str	r3, [sp, #0]
 800230a:	2301      	movs	r3, #1
 800230c:	2100      	movs	r1, #0
 800230e:	48d0      	ldr	r0, [pc, #832]	; (8002650 <lcd_init+0x17ac>)
 8002310:	f004 ffde 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002314:	2001      	movs	r0, #1
 8002316:	f004 fbbb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800231a:	463a      	mov	r2, r7
 800231c:	2364      	movs	r3, #100	; 0x64
 800231e:	9300      	str	r3, [sp, #0]
 8002320:	2301      	movs	r3, #1
 8002322:	2100      	movs	r1, #0
 8002324:	48ca      	ldr	r0, [pc, #808]	; (8002650 <lcd_init+0x17ac>)
 8002326:	f004 ffd3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800232a:	2001      	movs	r0, #1
 800232c:	f004 fbb0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002330:	1d3a      	adds	r2, r7, #4
 8002332:	2364      	movs	r3, #100	; 0x64
 8002334:	9300      	str	r3, [sp, #0]
 8002336:	2301      	movs	r3, #1
 8002338:	2100      	movs	r1, #0
 800233a:	48c5      	ldr	r0, [pc, #788]	; (8002650 <lcd_init+0x17ac>)
 800233c:	f004 ffc8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002340:	2001      	movs	r0, #1
 8002342:	f004 fba5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002346:	463a      	mov	r2, r7
 8002348:	2364      	movs	r3, #100	; 0x64
 800234a:	9300      	str	r3, [sp, #0]
 800234c:	2301      	movs	r3, #1
 800234e:	2100      	movs	r1, #0
 8002350:	48bf      	ldr	r0, [pc, #764]	; (8002650 <lcd_init+0x17ac>)
 8002352:	f004 ffbd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002356:	2001      	movs	r0, #1
 8002358:	f004 fb9a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800235c:	463a      	mov	r2, r7
 800235e:	2364      	movs	r3, #100	; 0x64
 8002360:	9300      	str	r3, [sp, #0]
 8002362:	2301      	movs	r3, #1
 8002364:	2100      	movs	r1, #0
 8002366:	48ba      	ldr	r0, [pc, #744]	; (8002650 <lcd_init+0x17ac>)
 8002368:	f004 ffb2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800236c:	2001      	movs	r0, #1
 800236e:	f004 fb8f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002372:	1d3a      	adds	r2, r7, #4
 8002374:	2364      	movs	r3, #100	; 0x64
 8002376:	9300      	str	r3, [sp, #0]
 8002378:	2301      	movs	r3, #1
 800237a:	2100      	movs	r1, #0
 800237c:	48b4      	ldr	r0, [pc, #720]	; (8002650 <lcd_init+0x17ac>)
 800237e:	f004 ffa7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002382:	2001      	movs	r0, #1
 8002384:	f004 fb84 	bl	8006a90 <HAL_Delay>


/*-----------------------------------------------DEBUT-----------------------------------------------*/

    /*--------------------Premiere ligne----------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x01,1,space,1,100);
 8002388:	2364      	movs	r3, #100	; 0x64
 800238a:	9302      	str	r3, [sp, #8]
 800238c:	2301      	movs	r3, #1
 800238e:	9301      	str	r3, [sp, #4]
 8002390:	463b      	mov	r3, r7
 8002392:	9300      	str	r3, [sp, #0]
 8002394:	2301      	movs	r3, #1
 8002396:	2201      	movs	r2, #1
 8002398:	2100      	movs	r1, #0
 800239a:	48ad      	ldr	r0, [pc, #692]	; (8002650 <lcd_init+0x17ac>)
 800239c:	f005 fabc 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 80023a0:	2001      	movs	r0, #1
 80023a2:	f004 fb75 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80023a6:	463a      	mov	r2, r7
 80023a8:	2364      	movs	r3, #100	; 0x64
 80023aa:	9300      	str	r3, [sp, #0]
 80023ac:	2301      	movs	r3, #1
 80023ae:	2100      	movs	r1, #0
 80023b0:	48a7      	ldr	r0, [pc, #668]	; (8002650 <lcd_init+0x17ac>)
 80023b2:	f004 ff8d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80023b6:	2001      	movs	r0, #1
 80023b8:	f004 fb6a 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80023bc:	463a      	mov	r2, r7
 80023be:	2364      	movs	r3, #100	; 0x64
 80023c0:	9300      	str	r3, [sp, #0]
 80023c2:	2301      	movs	r3, #1
 80023c4:	2100      	movs	r1, #0
 80023c6:	48a2      	ldr	r0, [pc, #648]	; (8002650 <lcd_init+0x17ac>)
 80023c8:	f004 ff82 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80023cc:	2001      	movs	r0, #1
 80023ce:	f004 fb5f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80023d2:	463a      	mov	r2, r7
 80023d4:	2364      	movs	r3, #100	; 0x64
 80023d6:	9300      	str	r3, [sp, #0]
 80023d8:	2301      	movs	r3, #1
 80023da:	2100      	movs	r1, #0
 80023dc:	489c      	ldr	r0, [pc, #624]	; (8002650 <lcd_init+0x17ac>)
 80023de:	f004 ff77 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80023e2:	2001      	movs	r0, #1
 80023e4:	f004 fb54 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80023e8:	463a      	mov	r2, r7
 80023ea:	2364      	movs	r3, #100	; 0x64
 80023ec:	9300      	str	r3, [sp, #0]
 80023ee:	2301      	movs	r3, #1
 80023f0:	2100      	movs	r1, #0
 80023f2:	4897      	ldr	r0, [pc, #604]	; (8002650 <lcd_init+0x17ac>)
 80023f4:	f004 ff6c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80023f8:	2001      	movs	r0, #1
 80023fa:	f004 fb49 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80023fe:	463a      	mov	r2, r7
 8002400:	2364      	movs	r3, #100	; 0x64
 8002402:	9300      	str	r3, [sp, #0]
 8002404:	2301      	movs	r3, #1
 8002406:	2100      	movs	r1, #0
 8002408:	4891      	ldr	r0, [pc, #580]	; (8002650 <lcd_init+0x17ac>)
 800240a:	f004 ff61 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800240e:	2001      	movs	r0, #1
 8002410:	f004 fb3e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002414:	463a      	mov	r2, r7
 8002416:	2364      	movs	r3, #100	; 0x64
 8002418:	9300      	str	r3, [sp, #0]
 800241a:	2301      	movs	r3, #1
 800241c:	2100      	movs	r1, #0
 800241e:	488c      	ldr	r0, [pc, #560]	; (8002650 <lcd_init+0x17ac>)
 8002420:	f004 ff56 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002424:	2001      	movs	r0, #1
 8002426:	f004 fb33 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800242a:	463a      	mov	r2, r7
 800242c:	2364      	movs	r3, #100	; 0x64
 800242e:	9300      	str	r3, [sp, #0]
 8002430:	2301      	movs	r3, #1
 8002432:	2100      	movs	r1, #0
 8002434:	4886      	ldr	r0, [pc, #536]	; (8002650 <lcd_init+0x17ac>)
 8002436:	f004 ff4b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800243a:	2001      	movs	r0, #1
 800243c:	f004 fb28 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002440:	463a      	mov	r2, r7
 8002442:	2364      	movs	r3, #100	; 0x64
 8002444:	9300      	str	r3, [sp, #0]
 8002446:	2301      	movs	r3, #1
 8002448:	2100      	movs	r1, #0
 800244a:	4881      	ldr	r0, [pc, #516]	; (8002650 <lcd_init+0x17ac>)
 800244c:	f004 ff40 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002450:	2001      	movs	r0, #1
 8002452:	f004 fb1d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002456:	463a      	mov	r2, r7
 8002458:	2364      	movs	r3, #100	; 0x64
 800245a:	9300      	str	r3, [sp, #0]
 800245c:	2301      	movs	r3, #1
 800245e:	2100      	movs	r1, #0
 8002460:	487b      	ldr	r0, [pc, #492]	; (8002650 <lcd_init+0x17ac>)
 8002462:	f004 ff35 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002466:	2001      	movs	r0, #1
 8002468:	f004 fb12 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800246c:	463a      	mov	r2, r7
 800246e:	2364      	movs	r3, #100	; 0x64
 8002470:	9300      	str	r3, [sp, #0]
 8002472:	2301      	movs	r3, #1
 8002474:	2100      	movs	r1, #0
 8002476:	4876      	ldr	r0, [pc, #472]	; (8002650 <lcd_init+0x17ac>)
 8002478:	f004 ff2a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800247c:	2001      	movs	r0, #1
 800247e:	f004 fb07 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002482:	463a      	mov	r2, r7
 8002484:	2364      	movs	r3, #100	; 0x64
 8002486:	9300      	str	r3, [sp, #0]
 8002488:	2301      	movs	r3, #1
 800248a:	2100      	movs	r1, #0
 800248c:	4870      	ldr	r0, [pc, #448]	; (8002650 <lcd_init+0x17ac>)
 800248e:	f004 ff1f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002492:	2001      	movs	r0, #1
 8002494:	f004 fafc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002498:	463a      	mov	r2, r7
 800249a:	2364      	movs	r3, #100	; 0x64
 800249c:	9300      	str	r3, [sp, #0]
 800249e:	2301      	movs	r3, #1
 80024a0:	2100      	movs	r1, #0
 80024a2:	486b      	ldr	r0, [pc, #428]	; (8002650 <lcd_init+0x17ac>)
 80024a4:	f004 ff14 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80024a8:	2001      	movs	r0, #1
 80024aa:	f004 faf1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80024ae:	463a      	mov	r2, r7
 80024b0:	2364      	movs	r3, #100	; 0x64
 80024b2:	9300      	str	r3, [sp, #0]
 80024b4:	2301      	movs	r3, #1
 80024b6:	2100      	movs	r1, #0
 80024b8:	4865      	ldr	r0, [pc, #404]	; (8002650 <lcd_init+0x17ac>)
 80024ba:	f004 ff09 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80024be:	2001      	movs	r0, #1
 80024c0:	f004 fae6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80024c4:	463a      	mov	r2, r7
 80024c6:	2364      	movs	r3, #100	; 0x64
 80024c8:	9300      	str	r3, [sp, #0]
 80024ca:	2301      	movs	r3, #1
 80024cc:	2100      	movs	r1, #0
 80024ce:	4860      	ldr	r0, [pc, #384]	; (8002650 <lcd_init+0x17ac>)
 80024d0:	f004 fefe 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80024d4:	2001      	movs	r0, #1
 80024d6:	f004 fadb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80024da:	463a      	mov	r2, r7
 80024dc:	2364      	movs	r3, #100	; 0x64
 80024de:	9300      	str	r3, [sp, #0]
 80024e0:	2301      	movs	r3, #1
 80024e2:	2100      	movs	r1, #0
 80024e4:	485a      	ldr	r0, [pc, #360]	; (8002650 <lcd_init+0x17ac>)
 80024e6:	f004 fef3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80024ea:	2001      	movs	r0, #1
 80024ec:	f004 fad0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80024f0:	463a      	mov	r2, r7
 80024f2:	2364      	movs	r3, #100	; 0x64
 80024f4:	9300      	str	r3, [sp, #0]
 80024f6:	2301      	movs	r3, #1
 80024f8:	2100      	movs	r1, #0
 80024fa:	4855      	ldr	r0, [pc, #340]	; (8002650 <lcd_init+0x17ac>)
 80024fc:	f004 fee8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002500:	2001      	movs	r0, #1
 8002502:	f004 fac5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002506:	463a      	mov	r2, r7
 8002508:	2364      	movs	r3, #100	; 0x64
 800250a:	9300      	str	r3, [sp, #0]
 800250c:	2301      	movs	r3, #1
 800250e:	2100      	movs	r1, #0
 8002510:	484f      	ldr	r0, [pc, #316]	; (8002650 <lcd_init+0x17ac>)
 8002512:	f004 fedd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002516:	2001      	movs	r0, #1
 8002518:	f004 faba 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800251c:	463a      	mov	r2, r7
 800251e:	2364      	movs	r3, #100	; 0x64
 8002520:	9300      	str	r3, [sp, #0]
 8002522:	2301      	movs	r3, #1
 8002524:	2100      	movs	r1, #0
 8002526:	484a      	ldr	r0, [pc, #296]	; (8002650 <lcd_init+0x17ac>)
 8002528:	f004 fed2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800252c:	2001      	movs	r0, #1
 800252e:	f004 faaf 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002532:	463a      	mov	r2, r7
 8002534:	2364      	movs	r3, #100	; 0x64
 8002536:	9300      	str	r3, [sp, #0]
 8002538:	2301      	movs	r3, #1
 800253a:	2100      	movs	r1, #0
 800253c:	4844      	ldr	r0, [pc, #272]	; (8002650 <lcd_init+0x17ac>)
 800253e:	f004 fec7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002542:	2001      	movs	r0, #1
 8002544:	f004 faa4 	bl	8006a90 <HAL_Delay>

    /*--------------------Seconde ligne----------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x02,1,space,1,100);
 8002548:	2364      	movs	r3, #100	; 0x64
 800254a:	9302      	str	r3, [sp, #8]
 800254c:	2301      	movs	r3, #1
 800254e:	9301      	str	r3, [sp, #4]
 8002550:	463b      	mov	r3, r7
 8002552:	9300      	str	r3, [sp, #0]
 8002554:	2301      	movs	r3, #1
 8002556:	2202      	movs	r2, #2
 8002558:	2100      	movs	r1, #0
 800255a:	483d      	ldr	r0, [pc, #244]	; (8002650 <lcd_init+0x17ac>)
 800255c:	f005 f9dc 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8002560:	2001      	movs	r0, #1
 8002562:	f004 fa95 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002566:	463a      	mov	r2, r7
 8002568:	2364      	movs	r3, #100	; 0x64
 800256a:	9300      	str	r3, [sp, #0]
 800256c:	2301      	movs	r3, #1
 800256e:	2100      	movs	r1, #0
 8002570:	4837      	ldr	r0, [pc, #220]	; (8002650 <lcd_init+0x17ac>)
 8002572:	f004 fead 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002576:	2001      	movs	r0, #1
 8002578:	f004 fa8a 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800257c:	463a      	mov	r2, r7
 800257e:	2364      	movs	r3, #100	; 0x64
 8002580:	9300      	str	r3, [sp, #0]
 8002582:	2301      	movs	r3, #1
 8002584:	2100      	movs	r1, #0
 8002586:	4832      	ldr	r0, [pc, #200]	; (8002650 <lcd_init+0x17ac>)
 8002588:	f004 fea2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800258c:	2001      	movs	r0, #1
 800258e:	f004 fa7f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002592:	463a      	mov	r2, r7
 8002594:	2364      	movs	r3, #100	; 0x64
 8002596:	9300      	str	r3, [sp, #0]
 8002598:	2301      	movs	r3, #1
 800259a:	2100      	movs	r1, #0
 800259c:	482c      	ldr	r0, [pc, #176]	; (8002650 <lcd_init+0x17ac>)
 800259e:	f004 fe97 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80025a2:	2001      	movs	r0, #1
 80025a4:	f004 fa74 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80025a8:	463a      	mov	r2, r7
 80025aa:	2364      	movs	r3, #100	; 0x64
 80025ac:	9300      	str	r3, [sp, #0]
 80025ae:	2301      	movs	r3, #1
 80025b0:	2100      	movs	r1, #0
 80025b2:	4827      	ldr	r0, [pc, #156]	; (8002650 <lcd_init+0x17ac>)
 80025b4:	f004 fe8c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80025b8:	2001      	movs	r0, #1
 80025ba:	f004 fa69 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80025be:	463a      	mov	r2, r7
 80025c0:	2364      	movs	r3, #100	; 0x64
 80025c2:	9300      	str	r3, [sp, #0]
 80025c4:	2301      	movs	r3, #1
 80025c6:	2100      	movs	r1, #0
 80025c8:	4821      	ldr	r0, [pc, #132]	; (8002650 <lcd_init+0x17ac>)
 80025ca:	f004 fe81 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80025ce:	2001      	movs	r0, #1
 80025d0:	f004 fa5e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80025d4:	463a      	mov	r2, r7
 80025d6:	2364      	movs	r3, #100	; 0x64
 80025d8:	9300      	str	r3, [sp, #0]
 80025da:	2301      	movs	r3, #1
 80025dc:	2100      	movs	r1, #0
 80025de:	481c      	ldr	r0, [pc, #112]	; (8002650 <lcd_init+0x17ac>)
 80025e0:	f004 fe76 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80025e4:	2001      	movs	r0, #1
 80025e6:	f004 fa53 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80025ea:	463a      	mov	r2, r7
 80025ec:	2364      	movs	r3, #100	; 0x64
 80025ee:	9300      	str	r3, [sp, #0]
 80025f0:	2301      	movs	r3, #1
 80025f2:	2100      	movs	r1, #0
 80025f4:	4816      	ldr	r0, [pc, #88]	; (8002650 <lcd_init+0x17ac>)
 80025f6:	f004 fe6b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80025fa:	2001      	movs	r0, #1
 80025fc:	f004 fa48 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002600:	463a      	mov	r2, r7
 8002602:	2364      	movs	r3, #100	; 0x64
 8002604:	9300      	str	r3, [sp, #0]
 8002606:	2301      	movs	r3, #1
 8002608:	2100      	movs	r1, #0
 800260a:	4811      	ldr	r0, [pc, #68]	; (8002650 <lcd_init+0x17ac>)
 800260c:	f004 fe60 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002610:	2001      	movs	r0, #1
 8002612:	f004 fa3d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002616:	463a      	mov	r2, r7
 8002618:	2364      	movs	r3, #100	; 0x64
 800261a:	9300      	str	r3, [sp, #0]
 800261c:	2301      	movs	r3, #1
 800261e:	2100      	movs	r1, #0
 8002620:	480b      	ldr	r0, [pc, #44]	; (8002650 <lcd_init+0x17ac>)
 8002622:	f004 fe55 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002626:	2001      	movs	r0, #1
 8002628:	f004 fa32 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800262c:	463a      	mov	r2, r7
 800262e:	2364      	movs	r3, #100	; 0x64
 8002630:	9300      	str	r3, [sp, #0]
 8002632:	2301      	movs	r3, #1
 8002634:	2100      	movs	r1, #0
 8002636:	4806      	ldr	r0, [pc, #24]	; (8002650 <lcd_init+0x17ac>)
 8002638:	f004 fe4a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800263c:	2001      	movs	r0, #1
 800263e:	f004 fa27 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002642:	463a      	mov	r2, r7
 8002644:	2364      	movs	r3, #100	; 0x64
 8002646:	9300      	str	r3, [sp, #0]
 8002648:	2301      	movs	r3, #1
 800264a:	2100      	movs	r1, #0
 800264c:	e002      	b.n	8002654 <lcd_init+0x17b0>
 800264e:	bf00      	nop
 8002650:	200000a4 	.word	0x200000a4
 8002654:	48d5      	ldr	r0, [pc, #852]	; (80029ac <lcd_init+0x1b08>)
 8002656:	f004 fe3b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800265a:	2001      	movs	r0, #1
 800265c:	f004 fa18 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002660:	463a      	mov	r2, r7
 8002662:	2364      	movs	r3, #100	; 0x64
 8002664:	9300      	str	r3, [sp, #0]
 8002666:	2301      	movs	r3, #1
 8002668:	2100      	movs	r1, #0
 800266a:	48d0      	ldr	r0, [pc, #832]	; (80029ac <lcd_init+0x1b08>)
 800266c:	f004 fe30 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002670:	2001      	movs	r0, #1
 8002672:	f004 fa0d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002676:	463a      	mov	r2, r7
 8002678:	2364      	movs	r3, #100	; 0x64
 800267a:	9300      	str	r3, [sp, #0]
 800267c:	2301      	movs	r3, #1
 800267e:	2100      	movs	r1, #0
 8002680:	48ca      	ldr	r0, [pc, #808]	; (80029ac <lcd_init+0x1b08>)
 8002682:	f004 fe25 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002686:	2001      	movs	r0, #1
 8002688:	f004 fa02 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800268c:	463a      	mov	r2, r7
 800268e:	2364      	movs	r3, #100	; 0x64
 8002690:	9300      	str	r3, [sp, #0]
 8002692:	2301      	movs	r3, #1
 8002694:	2100      	movs	r1, #0
 8002696:	48c5      	ldr	r0, [pc, #788]	; (80029ac <lcd_init+0x1b08>)
 8002698:	f004 fe1a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800269c:	2001      	movs	r0, #1
 800269e:	f004 f9f7 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80026a2:	463a      	mov	r2, r7
 80026a4:	2364      	movs	r3, #100	; 0x64
 80026a6:	9300      	str	r3, [sp, #0]
 80026a8:	2301      	movs	r3, #1
 80026aa:	2100      	movs	r1, #0
 80026ac:	48bf      	ldr	r0, [pc, #764]	; (80029ac <lcd_init+0x1b08>)
 80026ae:	f004 fe0f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80026b2:	2001      	movs	r0, #1
 80026b4:	f004 f9ec 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80026b8:	463a      	mov	r2, r7
 80026ba:	2364      	movs	r3, #100	; 0x64
 80026bc:	9300      	str	r3, [sp, #0]
 80026be:	2301      	movs	r3, #1
 80026c0:	2100      	movs	r1, #0
 80026c2:	48ba      	ldr	r0, [pc, #744]	; (80029ac <lcd_init+0x1b08>)
 80026c4:	f004 fe04 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80026c8:	2001      	movs	r0, #1
 80026ca:	f004 f9e1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80026ce:	463a      	mov	r2, r7
 80026d0:	2364      	movs	r3, #100	; 0x64
 80026d2:	9300      	str	r3, [sp, #0]
 80026d4:	2301      	movs	r3, #1
 80026d6:	2100      	movs	r1, #0
 80026d8:	48b4      	ldr	r0, [pc, #720]	; (80029ac <lcd_init+0x1b08>)
 80026da:	f004 fdf9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80026de:	2001      	movs	r0, #1
 80026e0:	f004 f9d6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80026e4:	463a      	mov	r2, r7
 80026e6:	2364      	movs	r3, #100	; 0x64
 80026e8:	9300      	str	r3, [sp, #0]
 80026ea:	2301      	movs	r3, #1
 80026ec:	2100      	movs	r1, #0
 80026ee:	48af      	ldr	r0, [pc, #700]	; (80029ac <lcd_init+0x1b08>)
 80026f0:	f004 fdee 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80026f4:	2001      	movs	r0, #1
 80026f6:	f004 f9cb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80026fa:	463a      	mov	r2, r7
 80026fc:	2364      	movs	r3, #100	; 0x64
 80026fe:	9300      	str	r3, [sp, #0]
 8002700:	2301      	movs	r3, #1
 8002702:	2100      	movs	r1, #0
 8002704:	48a9      	ldr	r0, [pc, #676]	; (80029ac <lcd_init+0x1b08>)
 8002706:	f004 fde3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800270a:	2001      	movs	r0, #1
 800270c:	f004 f9c0 	bl	8006a90 <HAL_Delay>

    /*--------------------Troisieme ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8002710:	2364      	movs	r3, #100	; 0x64
 8002712:	9302      	str	r3, [sp, #8]
 8002714:	2301      	movs	r3, #1
 8002716:	9301      	str	r3, [sp, #4]
 8002718:	463b      	mov	r3, r7
 800271a:	9300      	str	r3, [sp, #0]
 800271c:	2301      	movs	r3, #1
 800271e:	2203      	movs	r2, #3
 8002720:	2100      	movs	r1, #0
 8002722:	48a2      	ldr	r0, [pc, #648]	; (80029ac <lcd_init+0x1b08>)
 8002724:	f005 f8f8 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8002728:	2001      	movs	r0, #1
 800272a:	f004 f9b1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800272e:	463a      	mov	r2, r7
 8002730:	2364      	movs	r3, #100	; 0x64
 8002732:	9300      	str	r3, [sp, #0]
 8002734:	2301      	movs	r3, #1
 8002736:	2100      	movs	r1, #0
 8002738:	489c      	ldr	r0, [pc, #624]	; (80029ac <lcd_init+0x1b08>)
 800273a:	f004 fdc9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800273e:	2001      	movs	r0, #1
 8002740:	f004 f9a6 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002744:	463a      	mov	r2, r7
 8002746:	2364      	movs	r3, #100	; 0x64
 8002748:	9300      	str	r3, [sp, #0]
 800274a:	2301      	movs	r3, #1
 800274c:	2100      	movs	r1, #0
 800274e:	4897      	ldr	r0, [pc, #604]	; (80029ac <lcd_init+0x1b08>)
 8002750:	f004 fdbe 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002754:	2001      	movs	r0, #1
 8002756:	f004 f99b 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800275a:	463a      	mov	r2, r7
 800275c:	2364      	movs	r3, #100	; 0x64
 800275e:	9300      	str	r3, [sp, #0]
 8002760:	2301      	movs	r3, #1
 8002762:	2100      	movs	r1, #0
 8002764:	4891      	ldr	r0, [pc, #580]	; (80029ac <lcd_init+0x1b08>)
 8002766:	f004 fdb3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800276a:	2001      	movs	r0, #1
 800276c:	f004 f990 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002770:	463a      	mov	r2, r7
 8002772:	2364      	movs	r3, #100	; 0x64
 8002774:	9300      	str	r3, [sp, #0]
 8002776:	2301      	movs	r3, #1
 8002778:	2100      	movs	r1, #0
 800277a:	488c      	ldr	r0, [pc, #560]	; (80029ac <lcd_init+0x1b08>)
 800277c:	f004 fda8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002780:	2001      	movs	r0, #1
 8002782:	f004 f985 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002786:	463a      	mov	r2, r7
 8002788:	2364      	movs	r3, #100	; 0x64
 800278a:	9300      	str	r3, [sp, #0]
 800278c:	2301      	movs	r3, #1
 800278e:	2100      	movs	r1, #0
 8002790:	4886      	ldr	r0, [pc, #536]	; (80029ac <lcd_init+0x1b08>)
 8002792:	f004 fd9d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002796:	2001      	movs	r0, #1
 8002798:	f004 f97a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800279c:	463a      	mov	r2, r7
 800279e:	2364      	movs	r3, #100	; 0x64
 80027a0:	9300      	str	r3, [sp, #0]
 80027a2:	2301      	movs	r3, #1
 80027a4:	2100      	movs	r1, #0
 80027a6:	4881      	ldr	r0, [pc, #516]	; (80029ac <lcd_init+0x1b08>)
 80027a8:	f004 fd92 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80027ac:	2001      	movs	r0, #1
 80027ae:	f004 f96f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80027b2:	463a      	mov	r2, r7
 80027b4:	2364      	movs	r3, #100	; 0x64
 80027b6:	9300      	str	r3, [sp, #0]
 80027b8:	2301      	movs	r3, #1
 80027ba:	2100      	movs	r1, #0
 80027bc:	487b      	ldr	r0, [pc, #492]	; (80029ac <lcd_init+0x1b08>)
 80027be:	f004 fd87 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80027c2:	2001      	movs	r0, #1
 80027c4:	f004 f964 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80027c8:	463a      	mov	r2, r7
 80027ca:	2364      	movs	r3, #100	; 0x64
 80027cc:	9300      	str	r3, [sp, #0]
 80027ce:	2301      	movs	r3, #1
 80027d0:	2100      	movs	r1, #0
 80027d2:	4876      	ldr	r0, [pc, #472]	; (80029ac <lcd_init+0x1b08>)
 80027d4:	f004 fd7c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80027d8:	2001      	movs	r0, #1
 80027da:	f004 f959 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80027de:	463a      	mov	r2, r7
 80027e0:	2364      	movs	r3, #100	; 0x64
 80027e2:	9300      	str	r3, [sp, #0]
 80027e4:	2301      	movs	r3, #1
 80027e6:	2100      	movs	r1, #0
 80027e8:	4870      	ldr	r0, [pc, #448]	; (80029ac <lcd_init+0x1b08>)
 80027ea:	f004 fd71 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80027ee:	2001      	movs	r0, #1
 80027f0:	f004 f94e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80027f4:	463a      	mov	r2, r7
 80027f6:	2364      	movs	r3, #100	; 0x64
 80027f8:	9300      	str	r3, [sp, #0]
 80027fa:	2301      	movs	r3, #1
 80027fc:	2100      	movs	r1, #0
 80027fe:	486b      	ldr	r0, [pc, #428]	; (80029ac <lcd_init+0x1b08>)
 8002800:	f004 fd66 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002804:	2001      	movs	r0, #1
 8002806:	f004 f943 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800280a:	463a      	mov	r2, r7
 800280c:	2364      	movs	r3, #100	; 0x64
 800280e:	9300      	str	r3, [sp, #0]
 8002810:	2301      	movs	r3, #1
 8002812:	2100      	movs	r1, #0
 8002814:	4865      	ldr	r0, [pc, #404]	; (80029ac <lcd_init+0x1b08>)
 8002816:	f004 fd5b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800281a:	2001      	movs	r0, #1
 800281c:	f004 f938 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002820:	463a      	mov	r2, r7
 8002822:	2364      	movs	r3, #100	; 0x64
 8002824:	9300      	str	r3, [sp, #0]
 8002826:	2301      	movs	r3, #1
 8002828:	2100      	movs	r1, #0
 800282a:	4860      	ldr	r0, [pc, #384]	; (80029ac <lcd_init+0x1b08>)
 800282c:	f004 fd50 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002830:	2001      	movs	r0, #1
 8002832:	f004 f92d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002836:	463a      	mov	r2, r7
 8002838:	2364      	movs	r3, #100	; 0x64
 800283a:	9300      	str	r3, [sp, #0]
 800283c:	2301      	movs	r3, #1
 800283e:	2100      	movs	r1, #0
 8002840:	485a      	ldr	r0, [pc, #360]	; (80029ac <lcd_init+0x1b08>)
 8002842:	f004 fd45 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002846:	2001      	movs	r0, #1
 8002848:	f004 f922 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800284c:	463a      	mov	r2, r7
 800284e:	2364      	movs	r3, #100	; 0x64
 8002850:	9300      	str	r3, [sp, #0]
 8002852:	2301      	movs	r3, #1
 8002854:	2100      	movs	r1, #0
 8002856:	4855      	ldr	r0, [pc, #340]	; (80029ac <lcd_init+0x1b08>)
 8002858:	f004 fd3a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800285c:	2001      	movs	r0, #1
 800285e:	f004 f917 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002862:	463a      	mov	r2, r7
 8002864:	2364      	movs	r3, #100	; 0x64
 8002866:	9300      	str	r3, [sp, #0]
 8002868:	2301      	movs	r3, #1
 800286a:	2100      	movs	r1, #0
 800286c:	484f      	ldr	r0, [pc, #316]	; (80029ac <lcd_init+0x1b08>)
 800286e:	f004 fd2f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002872:	2001      	movs	r0, #1
 8002874:	f004 f90c 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002878:	463a      	mov	r2, r7
 800287a:	2364      	movs	r3, #100	; 0x64
 800287c:	9300      	str	r3, [sp, #0]
 800287e:	2301      	movs	r3, #1
 8002880:	2100      	movs	r1, #0
 8002882:	484a      	ldr	r0, [pc, #296]	; (80029ac <lcd_init+0x1b08>)
 8002884:	f004 fd24 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002888:	2001      	movs	r0, #1
 800288a:	f004 f901 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800288e:	463a      	mov	r2, r7
 8002890:	2364      	movs	r3, #100	; 0x64
 8002892:	9300      	str	r3, [sp, #0]
 8002894:	2301      	movs	r3, #1
 8002896:	2100      	movs	r1, #0
 8002898:	4844      	ldr	r0, [pc, #272]	; (80029ac <lcd_init+0x1b08>)
 800289a:	f004 fd19 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800289e:	2001      	movs	r0, #1
 80028a0:	f004 f8f6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80028a4:	463a      	mov	r2, r7
 80028a6:	2364      	movs	r3, #100	; 0x64
 80028a8:	9300      	str	r3, [sp, #0]
 80028aa:	2301      	movs	r3, #1
 80028ac:	2100      	movs	r1, #0
 80028ae:	483f      	ldr	r0, [pc, #252]	; (80029ac <lcd_init+0x1b08>)
 80028b0:	f004 fd0e 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80028b4:	2001      	movs	r0, #1
 80028b6:	f004 f8eb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80028ba:	463a      	mov	r2, r7
 80028bc:	2364      	movs	r3, #100	; 0x64
 80028be:	9300      	str	r3, [sp, #0]
 80028c0:	2301      	movs	r3, #1
 80028c2:	2100      	movs	r1, #0
 80028c4:	4839      	ldr	r0, [pc, #228]	; (80029ac <lcd_init+0x1b08>)
 80028c6:	f004 fd03 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80028ca:	2001      	movs	r0, #1
 80028cc:	f004 f8e0 	bl	8006a90 <HAL_Delay>

	/*--------------------Quatrieme ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,carreNoir,1,100);
 80028d0:	2364      	movs	r3, #100	; 0x64
 80028d2:	9302      	str	r3, [sp, #8]
 80028d4:	2301      	movs	r3, #1
 80028d6:	9301      	str	r3, [sp, #4]
 80028d8:	1d3b      	adds	r3, r7, #4
 80028da:	9300      	str	r3, [sp, #0]
 80028dc:	2301      	movs	r3, #1
 80028de:	2204      	movs	r2, #4
 80028e0:	2100      	movs	r1, #0
 80028e2:	4832      	ldr	r0, [pc, #200]	; (80029ac <lcd_init+0x1b08>)
 80028e4:	f005 f818 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 80028e8:	2001      	movs	r0, #1
 80028ea:	f004 f8d1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80028ee:	463a      	mov	r2, r7
 80028f0:	2364      	movs	r3, #100	; 0x64
 80028f2:	9300      	str	r3, [sp, #0]
 80028f4:	2301      	movs	r3, #1
 80028f6:	2100      	movs	r1, #0
 80028f8:	482c      	ldr	r0, [pc, #176]	; (80029ac <lcd_init+0x1b08>)
 80028fa:	f004 fce9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80028fe:	2001      	movs	r0, #1
 8002900:	f004 f8c6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002904:	463a      	mov	r2, r7
 8002906:	2364      	movs	r3, #100	; 0x64
 8002908:	9300      	str	r3, [sp, #0]
 800290a:	2301      	movs	r3, #1
 800290c:	2100      	movs	r1, #0
 800290e:	4827      	ldr	r0, [pc, #156]	; (80029ac <lcd_init+0x1b08>)
 8002910:	f004 fcde 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002914:	2001      	movs	r0, #1
 8002916:	f004 f8bb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800291a:	463a      	mov	r2, r7
 800291c:	2364      	movs	r3, #100	; 0x64
 800291e:	9300      	str	r3, [sp, #0]
 8002920:	2301      	movs	r3, #1
 8002922:	2100      	movs	r1, #0
 8002924:	4821      	ldr	r0, [pc, #132]	; (80029ac <lcd_init+0x1b08>)
 8002926:	f004 fcd3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800292a:	2001      	movs	r0, #1
 800292c:	f004 f8b0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002930:	1d3a      	adds	r2, r7, #4
 8002932:	2364      	movs	r3, #100	; 0x64
 8002934:	9300      	str	r3, [sp, #0]
 8002936:	2301      	movs	r3, #1
 8002938:	2100      	movs	r1, #0
 800293a:	481c      	ldr	r0, [pc, #112]	; (80029ac <lcd_init+0x1b08>)
 800293c:	f004 fcc8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002940:	2001      	movs	r0, #1
 8002942:	f004 f8a5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002946:	463a      	mov	r2, r7
 8002948:	2364      	movs	r3, #100	; 0x64
 800294a:	9300      	str	r3, [sp, #0]
 800294c:	2301      	movs	r3, #1
 800294e:	2100      	movs	r1, #0
 8002950:	4816      	ldr	r0, [pc, #88]	; (80029ac <lcd_init+0x1b08>)
 8002952:	f004 fcbd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002956:	2001      	movs	r0, #1
 8002958:	f004 f89a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800295c:	1d3a      	adds	r2, r7, #4
 800295e:	2364      	movs	r3, #100	; 0x64
 8002960:	9300      	str	r3, [sp, #0]
 8002962:	2301      	movs	r3, #1
 8002964:	2100      	movs	r1, #0
 8002966:	4811      	ldr	r0, [pc, #68]	; (80029ac <lcd_init+0x1b08>)
 8002968:	f004 fcb2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800296c:	2001      	movs	r0, #1
 800296e:	f004 f88f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002972:	1d3a      	adds	r2, r7, #4
 8002974:	2364      	movs	r3, #100	; 0x64
 8002976:	9300      	str	r3, [sp, #0]
 8002978:	2301      	movs	r3, #1
 800297a:	2100      	movs	r1, #0
 800297c:	480b      	ldr	r0, [pc, #44]	; (80029ac <lcd_init+0x1b08>)
 800297e:	f004 fca7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002982:	2001      	movs	r0, #1
 8002984:	f004 f884 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002988:	1d3a      	adds	r2, r7, #4
 800298a:	2364      	movs	r3, #100	; 0x64
 800298c:	9300      	str	r3, [sp, #0]
 800298e:	2301      	movs	r3, #1
 8002990:	2100      	movs	r1, #0
 8002992:	4806      	ldr	r0, [pc, #24]	; (80029ac <lcd_init+0x1b08>)
 8002994:	f004 fc9c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002998:	2001      	movs	r0, #1
 800299a:	f004 f879 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800299e:	463a      	mov	r2, r7
 80029a0:	2364      	movs	r3, #100	; 0x64
 80029a2:	9300      	str	r3, [sp, #0]
 80029a4:	2301      	movs	r3, #1
 80029a6:	2100      	movs	r1, #0
 80029a8:	e002      	b.n	80029b0 <lcd_init+0x1b0c>
 80029aa:	bf00      	nop
 80029ac:	200000a4 	.word	0x200000a4
 80029b0:	48d5      	ldr	r0, [pc, #852]	; (8002d08 <lcd_init+0x1e64>)
 80029b2:	f004 fc8d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80029b6:	2001      	movs	r0, #1
 80029b8:	f004 f86a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80029bc:	463a      	mov	r2, r7
 80029be:	2364      	movs	r3, #100	; 0x64
 80029c0:	9300      	str	r3, [sp, #0]
 80029c2:	2301      	movs	r3, #1
 80029c4:	2100      	movs	r1, #0
 80029c6:	48d0      	ldr	r0, [pc, #832]	; (8002d08 <lcd_init+0x1e64>)
 80029c8:	f004 fc82 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80029cc:	2001      	movs	r0, #1
 80029ce:	f004 f85f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80029d2:	1d3a      	adds	r2, r7, #4
 80029d4:	2364      	movs	r3, #100	; 0x64
 80029d6:	9300      	str	r3, [sp, #0]
 80029d8:	2301      	movs	r3, #1
 80029da:	2100      	movs	r1, #0
 80029dc:	48ca      	ldr	r0, [pc, #808]	; (8002d08 <lcd_init+0x1e64>)
 80029de:	f004 fc77 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80029e2:	2001      	movs	r0, #1
 80029e4:	f004 f854 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80029e8:	1d3a      	adds	r2, r7, #4
 80029ea:	2364      	movs	r3, #100	; 0x64
 80029ec:	9300      	str	r3, [sp, #0]
 80029ee:	2301      	movs	r3, #1
 80029f0:	2100      	movs	r1, #0
 80029f2:	48c5      	ldr	r0, [pc, #788]	; (8002d08 <lcd_init+0x1e64>)
 80029f4:	f004 fc6c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80029f8:	2001      	movs	r0, #1
 80029fa:	f004 f849 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80029fe:	1d3a      	adds	r2, r7, #4
 8002a00:	2364      	movs	r3, #100	; 0x64
 8002a02:	9300      	str	r3, [sp, #0]
 8002a04:	2301      	movs	r3, #1
 8002a06:	2100      	movs	r1, #0
 8002a08:	48bf      	ldr	r0, [pc, #764]	; (8002d08 <lcd_init+0x1e64>)
 8002a0a:	f004 fc61 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002a0e:	2001      	movs	r0, #1
 8002a10:	f004 f83e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002a14:	1d3a      	adds	r2, r7, #4
 8002a16:	2364      	movs	r3, #100	; 0x64
 8002a18:	9300      	str	r3, [sp, #0]
 8002a1a:	2301      	movs	r3, #1
 8002a1c:	2100      	movs	r1, #0
 8002a1e:	48ba      	ldr	r0, [pc, #744]	; (8002d08 <lcd_init+0x1e64>)
 8002a20:	f004 fc56 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002a24:	2001      	movs	r0, #1
 8002a26:	f004 f833 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002a2a:	463a      	mov	r2, r7
 8002a2c:	2364      	movs	r3, #100	; 0x64
 8002a2e:	9300      	str	r3, [sp, #0]
 8002a30:	2301      	movs	r3, #1
 8002a32:	2100      	movs	r1, #0
 8002a34:	48b4      	ldr	r0, [pc, #720]	; (8002d08 <lcd_init+0x1e64>)
 8002a36:	f004 fc4b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002a3a:	2001      	movs	r0, #1
 8002a3c:	f004 f828 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002a40:	1d3a      	adds	r2, r7, #4
 8002a42:	2364      	movs	r3, #100	; 0x64
 8002a44:	9300      	str	r3, [sp, #0]
 8002a46:	2301      	movs	r3, #1
 8002a48:	2100      	movs	r1, #0
 8002a4a:	48af      	ldr	r0, [pc, #700]	; (8002d08 <lcd_init+0x1e64>)
 8002a4c:	f004 fc40 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002a50:	2001      	movs	r0, #1
 8002a52:	f004 f81d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002a56:	1d3a      	adds	r2, r7, #4
 8002a58:	2364      	movs	r3, #100	; 0x64
 8002a5a:	9300      	str	r3, [sp, #0]
 8002a5c:	2301      	movs	r3, #1
 8002a5e:	2100      	movs	r1, #0
 8002a60:	48a9      	ldr	r0, [pc, #676]	; (8002d08 <lcd_init+0x1e64>)
 8002a62:	f004 fc35 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002a66:	2001      	movs	r0, #1
 8002a68:	f004 f812 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8002a6c:	1d3a      	adds	r2, r7, #4
 8002a6e:	2364      	movs	r3, #100	; 0x64
 8002a70:	9300      	str	r3, [sp, #0]
 8002a72:	2301      	movs	r3, #1
 8002a74:	2100      	movs	r1, #0
 8002a76:	48a4      	ldr	r0, [pc, #656]	; (8002d08 <lcd_init+0x1e64>)
 8002a78:	f004 fc2a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002a7c:	2001      	movs	r0, #1
 8002a7e:	f004 f807 	bl	8006a90 <HAL_Delay>


/*-----------------------------------------------DEBUT-----------------------------------------------*/

	/*--------------------Premiere ligne----------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x01,1,space,1,100);
 8002a82:	2364      	movs	r3, #100	; 0x64
 8002a84:	9302      	str	r3, [sp, #8]
 8002a86:	2301      	movs	r3, #1
 8002a88:	9301      	str	r3, [sp, #4]
 8002a8a:	463b      	mov	r3, r7
 8002a8c:	9300      	str	r3, [sp, #0]
 8002a8e:	2301      	movs	r3, #1
 8002a90:	2201      	movs	r2, #1
 8002a92:	2100      	movs	r1, #0
 8002a94:	489c      	ldr	r0, [pc, #624]	; (8002d08 <lcd_init+0x1e64>)
 8002a96:	f004 ff3f 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8002a9a:	2001      	movs	r0, #1
 8002a9c:	f003 fff8 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002aa0:	463a      	mov	r2, r7
 8002aa2:	2364      	movs	r3, #100	; 0x64
 8002aa4:	9300      	str	r3, [sp, #0]
 8002aa6:	2301      	movs	r3, #1
 8002aa8:	2100      	movs	r1, #0
 8002aaa:	4897      	ldr	r0, [pc, #604]	; (8002d08 <lcd_init+0x1e64>)
 8002aac:	f004 fc10 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ab0:	2001      	movs	r0, #1
 8002ab2:	f003 ffed 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ab6:	463a      	mov	r2, r7
 8002ab8:	2364      	movs	r3, #100	; 0x64
 8002aba:	9300      	str	r3, [sp, #0]
 8002abc:	2301      	movs	r3, #1
 8002abe:	2100      	movs	r1, #0
 8002ac0:	4891      	ldr	r0, [pc, #580]	; (8002d08 <lcd_init+0x1e64>)
 8002ac2:	f004 fc05 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ac6:	2001      	movs	r0, #1
 8002ac8:	f003 ffe2 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002acc:	463a      	mov	r2, r7
 8002ace:	2364      	movs	r3, #100	; 0x64
 8002ad0:	9300      	str	r3, [sp, #0]
 8002ad2:	2301      	movs	r3, #1
 8002ad4:	2100      	movs	r1, #0
 8002ad6:	488c      	ldr	r0, [pc, #560]	; (8002d08 <lcd_init+0x1e64>)
 8002ad8:	f004 fbfa 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002adc:	2001      	movs	r0, #1
 8002ade:	f003 ffd7 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ae2:	463a      	mov	r2, r7
 8002ae4:	2364      	movs	r3, #100	; 0x64
 8002ae6:	9300      	str	r3, [sp, #0]
 8002ae8:	2301      	movs	r3, #1
 8002aea:	2100      	movs	r1, #0
 8002aec:	4886      	ldr	r0, [pc, #536]	; (8002d08 <lcd_init+0x1e64>)
 8002aee:	f004 fbef 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002af2:	2001      	movs	r0, #1
 8002af4:	f003 ffcc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002af8:	463a      	mov	r2, r7
 8002afa:	2364      	movs	r3, #100	; 0x64
 8002afc:	9300      	str	r3, [sp, #0]
 8002afe:	2301      	movs	r3, #1
 8002b00:	2100      	movs	r1, #0
 8002b02:	4881      	ldr	r0, [pc, #516]	; (8002d08 <lcd_init+0x1e64>)
 8002b04:	f004 fbe4 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002b08:	2001      	movs	r0, #1
 8002b0a:	f003 ffc1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002b0e:	463a      	mov	r2, r7
 8002b10:	2364      	movs	r3, #100	; 0x64
 8002b12:	9300      	str	r3, [sp, #0]
 8002b14:	2301      	movs	r3, #1
 8002b16:	2100      	movs	r1, #0
 8002b18:	487b      	ldr	r0, [pc, #492]	; (8002d08 <lcd_init+0x1e64>)
 8002b1a:	f004 fbd9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002b1e:	2001      	movs	r0, #1
 8002b20:	f003 ffb6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002b24:	463a      	mov	r2, r7
 8002b26:	2364      	movs	r3, #100	; 0x64
 8002b28:	9300      	str	r3, [sp, #0]
 8002b2a:	2301      	movs	r3, #1
 8002b2c:	2100      	movs	r1, #0
 8002b2e:	4876      	ldr	r0, [pc, #472]	; (8002d08 <lcd_init+0x1e64>)
 8002b30:	f004 fbce 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002b34:	2001      	movs	r0, #1
 8002b36:	f003 ffab 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002b3a:	463a      	mov	r2, r7
 8002b3c:	2364      	movs	r3, #100	; 0x64
 8002b3e:	9300      	str	r3, [sp, #0]
 8002b40:	2301      	movs	r3, #1
 8002b42:	2100      	movs	r1, #0
 8002b44:	4870      	ldr	r0, [pc, #448]	; (8002d08 <lcd_init+0x1e64>)
 8002b46:	f004 fbc3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002b4a:	2001      	movs	r0, #1
 8002b4c:	f003 ffa0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002b50:	463a      	mov	r2, r7
 8002b52:	2364      	movs	r3, #100	; 0x64
 8002b54:	9300      	str	r3, [sp, #0]
 8002b56:	2301      	movs	r3, #1
 8002b58:	2100      	movs	r1, #0
 8002b5a:	486b      	ldr	r0, [pc, #428]	; (8002d08 <lcd_init+0x1e64>)
 8002b5c:	f004 fbb8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002b60:	2001      	movs	r0, #1
 8002b62:	f003 ff95 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002b66:	463a      	mov	r2, r7
 8002b68:	2364      	movs	r3, #100	; 0x64
 8002b6a:	9300      	str	r3, [sp, #0]
 8002b6c:	2301      	movs	r3, #1
 8002b6e:	2100      	movs	r1, #0
 8002b70:	4865      	ldr	r0, [pc, #404]	; (8002d08 <lcd_init+0x1e64>)
 8002b72:	f004 fbad 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002b76:	2001      	movs	r0, #1
 8002b78:	f003 ff8a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002b7c:	463a      	mov	r2, r7
 8002b7e:	2364      	movs	r3, #100	; 0x64
 8002b80:	9300      	str	r3, [sp, #0]
 8002b82:	2301      	movs	r3, #1
 8002b84:	2100      	movs	r1, #0
 8002b86:	4860      	ldr	r0, [pc, #384]	; (8002d08 <lcd_init+0x1e64>)
 8002b88:	f004 fba2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002b8c:	2001      	movs	r0, #1
 8002b8e:	f003 ff7f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002b92:	463a      	mov	r2, r7
 8002b94:	2364      	movs	r3, #100	; 0x64
 8002b96:	9300      	str	r3, [sp, #0]
 8002b98:	2301      	movs	r3, #1
 8002b9a:	2100      	movs	r1, #0
 8002b9c:	485a      	ldr	r0, [pc, #360]	; (8002d08 <lcd_init+0x1e64>)
 8002b9e:	f004 fb97 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ba2:	2001      	movs	r0, #1
 8002ba4:	f003 ff74 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ba8:	463a      	mov	r2, r7
 8002baa:	2364      	movs	r3, #100	; 0x64
 8002bac:	9300      	str	r3, [sp, #0]
 8002bae:	2301      	movs	r3, #1
 8002bb0:	2100      	movs	r1, #0
 8002bb2:	4855      	ldr	r0, [pc, #340]	; (8002d08 <lcd_init+0x1e64>)
 8002bb4:	f004 fb8c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002bb8:	2001      	movs	r0, #1
 8002bba:	f003 ff69 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002bbe:	463a      	mov	r2, r7
 8002bc0:	2364      	movs	r3, #100	; 0x64
 8002bc2:	9300      	str	r3, [sp, #0]
 8002bc4:	2301      	movs	r3, #1
 8002bc6:	2100      	movs	r1, #0
 8002bc8:	484f      	ldr	r0, [pc, #316]	; (8002d08 <lcd_init+0x1e64>)
 8002bca:	f004 fb81 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002bce:	2001      	movs	r0, #1
 8002bd0:	f003 ff5e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002bd4:	463a      	mov	r2, r7
 8002bd6:	2364      	movs	r3, #100	; 0x64
 8002bd8:	9300      	str	r3, [sp, #0]
 8002bda:	2301      	movs	r3, #1
 8002bdc:	2100      	movs	r1, #0
 8002bde:	484a      	ldr	r0, [pc, #296]	; (8002d08 <lcd_init+0x1e64>)
 8002be0:	f004 fb76 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002be4:	2001      	movs	r0, #1
 8002be6:	f003 ff53 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002bea:	463a      	mov	r2, r7
 8002bec:	2364      	movs	r3, #100	; 0x64
 8002bee:	9300      	str	r3, [sp, #0]
 8002bf0:	2301      	movs	r3, #1
 8002bf2:	2100      	movs	r1, #0
 8002bf4:	4844      	ldr	r0, [pc, #272]	; (8002d08 <lcd_init+0x1e64>)
 8002bf6:	f004 fb6b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002bfa:	2001      	movs	r0, #1
 8002bfc:	f003 ff48 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002c00:	463a      	mov	r2, r7
 8002c02:	2364      	movs	r3, #100	; 0x64
 8002c04:	9300      	str	r3, [sp, #0]
 8002c06:	2301      	movs	r3, #1
 8002c08:	2100      	movs	r1, #0
 8002c0a:	483f      	ldr	r0, [pc, #252]	; (8002d08 <lcd_init+0x1e64>)
 8002c0c:	f004 fb60 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002c10:	2001      	movs	r0, #1
 8002c12:	f003 ff3d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002c16:	463a      	mov	r2, r7
 8002c18:	2364      	movs	r3, #100	; 0x64
 8002c1a:	9300      	str	r3, [sp, #0]
 8002c1c:	2301      	movs	r3, #1
 8002c1e:	2100      	movs	r1, #0
 8002c20:	4839      	ldr	r0, [pc, #228]	; (8002d08 <lcd_init+0x1e64>)
 8002c22:	f004 fb55 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002c26:	2001      	movs	r0, #1
 8002c28:	f003 ff32 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002c2c:	463a      	mov	r2, r7
 8002c2e:	2364      	movs	r3, #100	; 0x64
 8002c30:	9300      	str	r3, [sp, #0]
 8002c32:	2301      	movs	r3, #1
 8002c34:	2100      	movs	r1, #0
 8002c36:	4834      	ldr	r0, [pc, #208]	; (8002d08 <lcd_init+0x1e64>)
 8002c38:	f004 fb4a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002c3c:	2001      	movs	r0, #1
 8002c3e:	f003 ff27 	bl	8006a90 <HAL_Delay>

	/*--------------------Seconde ligne----------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x02,1,space,1,100);
 8002c42:	2364      	movs	r3, #100	; 0x64
 8002c44:	9302      	str	r3, [sp, #8]
 8002c46:	2301      	movs	r3, #1
 8002c48:	9301      	str	r3, [sp, #4]
 8002c4a:	463b      	mov	r3, r7
 8002c4c:	9300      	str	r3, [sp, #0]
 8002c4e:	2301      	movs	r3, #1
 8002c50:	2202      	movs	r2, #2
 8002c52:	2100      	movs	r1, #0
 8002c54:	482c      	ldr	r0, [pc, #176]	; (8002d08 <lcd_init+0x1e64>)
 8002c56:	f004 fe5f 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8002c5a:	2001      	movs	r0, #1
 8002c5c:	f003 ff18 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002c60:	463a      	mov	r2, r7
 8002c62:	2364      	movs	r3, #100	; 0x64
 8002c64:	9300      	str	r3, [sp, #0]
 8002c66:	2301      	movs	r3, #1
 8002c68:	2100      	movs	r1, #0
 8002c6a:	4827      	ldr	r0, [pc, #156]	; (8002d08 <lcd_init+0x1e64>)
 8002c6c:	f004 fb30 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002c70:	2001      	movs	r0, #1
 8002c72:	f003 ff0d 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002c76:	463a      	mov	r2, r7
 8002c78:	2364      	movs	r3, #100	; 0x64
 8002c7a:	9300      	str	r3, [sp, #0]
 8002c7c:	2301      	movs	r3, #1
 8002c7e:	2100      	movs	r1, #0
 8002c80:	4821      	ldr	r0, [pc, #132]	; (8002d08 <lcd_init+0x1e64>)
 8002c82:	f004 fb25 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002c86:	2001      	movs	r0, #1
 8002c88:	f003 ff02 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002c8c:	463a      	mov	r2, r7
 8002c8e:	2364      	movs	r3, #100	; 0x64
 8002c90:	9300      	str	r3, [sp, #0]
 8002c92:	2301      	movs	r3, #1
 8002c94:	2100      	movs	r1, #0
 8002c96:	481c      	ldr	r0, [pc, #112]	; (8002d08 <lcd_init+0x1e64>)
 8002c98:	f004 fb1a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002c9c:	2001      	movs	r0, #1
 8002c9e:	f003 fef7 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ca2:	463a      	mov	r2, r7
 8002ca4:	2364      	movs	r3, #100	; 0x64
 8002ca6:	9300      	str	r3, [sp, #0]
 8002ca8:	2301      	movs	r3, #1
 8002caa:	2100      	movs	r1, #0
 8002cac:	4816      	ldr	r0, [pc, #88]	; (8002d08 <lcd_init+0x1e64>)
 8002cae:	f004 fb0f 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002cb2:	2001      	movs	r0, #1
 8002cb4:	f003 feec 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002cb8:	463a      	mov	r2, r7
 8002cba:	2364      	movs	r3, #100	; 0x64
 8002cbc:	9300      	str	r3, [sp, #0]
 8002cbe:	2301      	movs	r3, #1
 8002cc0:	2100      	movs	r1, #0
 8002cc2:	4811      	ldr	r0, [pc, #68]	; (8002d08 <lcd_init+0x1e64>)
 8002cc4:	f004 fb04 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002cc8:	2001      	movs	r0, #1
 8002cca:	f003 fee1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002cce:	463a      	mov	r2, r7
 8002cd0:	2364      	movs	r3, #100	; 0x64
 8002cd2:	9300      	str	r3, [sp, #0]
 8002cd4:	2301      	movs	r3, #1
 8002cd6:	2100      	movs	r1, #0
 8002cd8:	480b      	ldr	r0, [pc, #44]	; (8002d08 <lcd_init+0x1e64>)
 8002cda:	f004 faf9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002cde:	2001      	movs	r0, #1
 8002ce0:	f003 fed6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ce4:	463a      	mov	r2, r7
 8002ce6:	2364      	movs	r3, #100	; 0x64
 8002ce8:	9300      	str	r3, [sp, #0]
 8002cea:	2301      	movs	r3, #1
 8002cec:	2100      	movs	r1, #0
 8002cee:	4806      	ldr	r0, [pc, #24]	; (8002d08 <lcd_init+0x1e64>)
 8002cf0:	f004 faee 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002cf4:	2001      	movs	r0, #1
 8002cf6:	f003 fecb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002cfa:	463a      	mov	r2, r7
 8002cfc:	2364      	movs	r3, #100	; 0x64
 8002cfe:	9300      	str	r3, [sp, #0]
 8002d00:	2301      	movs	r3, #1
 8002d02:	2100      	movs	r1, #0
 8002d04:	e002      	b.n	8002d0c <lcd_init+0x1e68>
 8002d06:	bf00      	nop
 8002d08:	200000a4 	.word	0x200000a4
 8002d0c:	48d5      	ldr	r0, [pc, #852]	; (8003064 <lcd_init+0x21c0>)
 8002d0e:	f004 fadf 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002d12:	2001      	movs	r0, #1
 8002d14:	f003 febc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002d18:	463a      	mov	r2, r7
 8002d1a:	2364      	movs	r3, #100	; 0x64
 8002d1c:	9300      	str	r3, [sp, #0]
 8002d1e:	2301      	movs	r3, #1
 8002d20:	2100      	movs	r1, #0
 8002d22:	48d0      	ldr	r0, [pc, #832]	; (8003064 <lcd_init+0x21c0>)
 8002d24:	f004 fad4 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002d28:	2001      	movs	r0, #1
 8002d2a:	f003 feb1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002d2e:	463a      	mov	r2, r7
 8002d30:	2364      	movs	r3, #100	; 0x64
 8002d32:	9300      	str	r3, [sp, #0]
 8002d34:	2301      	movs	r3, #1
 8002d36:	2100      	movs	r1, #0
 8002d38:	48ca      	ldr	r0, [pc, #808]	; (8003064 <lcd_init+0x21c0>)
 8002d3a:	f004 fac9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002d3e:	2001      	movs	r0, #1
 8002d40:	f003 fea6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002d44:	463a      	mov	r2, r7
 8002d46:	2364      	movs	r3, #100	; 0x64
 8002d48:	9300      	str	r3, [sp, #0]
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	2100      	movs	r1, #0
 8002d4e:	48c5      	ldr	r0, [pc, #788]	; (8003064 <lcd_init+0x21c0>)
 8002d50:	f004 fabe 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002d54:	2001      	movs	r0, #1
 8002d56:	f003 fe9b 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002d5a:	463a      	mov	r2, r7
 8002d5c:	2364      	movs	r3, #100	; 0x64
 8002d5e:	9300      	str	r3, [sp, #0]
 8002d60:	2301      	movs	r3, #1
 8002d62:	2100      	movs	r1, #0
 8002d64:	48bf      	ldr	r0, [pc, #764]	; (8003064 <lcd_init+0x21c0>)
 8002d66:	f004 fab3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002d6a:	2001      	movs	r0, #1
 8002d6c:	f003 fe90 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002d70:	463a      	mov	r2, r7
 8002d72:	2364      	movs	r3, #100	; 0x64
 8002d74:	9300      	str	r3, [sp, #0]
 8002d76:	2301      	movs	r3, #1
 8002d78:	2100      	movs	r1, #0
 8002d7a:	48ba      	ldr	r0, [pc, #744]	; (8003064 <lcd_init+0x21c0>)
 8002d7c:	f004 faa8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002d80:	2001      	movs	r0, #1
 8002d82:	f003 fe85 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002d86:	463a      	mov	r2, r7
 8002d88:	2364      	movs	r3, #100	; 0x64
 8002d8a:	9300      	str	r3, [sp, #0]
 8002d8c:	2301      	movs	r3, #1
 8002d8e:	2100      	movs	r1, #0
 8002d90:	48b4      	ldr	r0, [pc, #720]	; (8003064 <lcd_init+0x21c0>)
 8002d92:	f004 fa9d 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002d96:	2001      	movs	r0, #1
 8002d98:	f003 fe7a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002d9c:	463a      	mov	r2, r7
 8002d9e:	2364      	movs	r3, #100	; 0x64
 8002da0:	9300      	str	r3, [sp, #0]
 8002da2:	2301      	movs	r3, #1
 8002da4:	2100      	movs	r1, #0
 8002da6:	48af      	ldr	r0, [pc, #700]	; (8003064 <lcd_init+0x21c0>)
 8002da8:	f004 fa92 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002dac:	2001      	movs	r0, #1
 8002dae:	f003 fe6f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002db2:	463a      	mov	r2, r7
 8002db4:	2364      	movs	r3, #100	; 0x64
 8002db6:	9300      	str	r3, [sp, #0]
 8002db8:	2301      	movs	r3, #1
 8002dba:	2100      	movs	r1, #0
 8002dbc:	48a9      	ldr	r0, [pc, #676]	; (8003064 <lcd_init+0x21c0>)
 8002dbe:	f004 fa87 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002dc2:	2001      	movs	r0, #1
 8002dc4:	f003 fe64 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002dc8:	463a      	mov	r2, r7
 8002dca:	2364      	movs	r3, #100	; 0x64
 8002dcc:	9300      	str	r3, [sp, #0]
 8002dce:	2301      	movs	r3, #1
 8002dd0:	2100      	movs	r1, #0
 8002dd2:	48a4      	ldr	r0, [pc, #656]	; (8003064 <lcd_init+0x21c0>)
 8002dd4:	f004 fa7c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002dd8:	2001      	movs	r0, #1
 8002dda:	f003 fe59 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002dde:	463a      	mov	r2, r7
 8002de0:	2364      	movs	r3, #100	; 0x64
 8002de2:	9300      	str	r3, [sp, #0]
 8002de4:	2301      	movs	r3, #1
 8002de6:	2100      	movs	r1, #0
 8002de8:	489e      	ldr	r0, [pc, #632]	; (8003064 <lcd_init+0x21c0>)
 8002dea:	f004 fa71 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002dee:	2001      	movs	r0, #1
 8002df0:	f003 fe4e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002df4:	463a      	mov	r2, r7
 8002df6:	2364      	movs	r3, #100	; 0x64
 8002df8:	9300      	str	r3, [sp, #0]
 8002dfa:	2301      	movs	r3, #1
 8002dfc:	2100      	movs	r1, #0
 8002dfe:	4899      	ldr	r0, [pc, #612]	; (8003064 <lcd_init+0x21c0>)
 8002e00:	f004 fa66 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002e04:	2001      	movs	r0, #1
 8002e06:	f003 fe43 	bl	8006a90 <HAL_Delay>

	/*--------------------Troisieme ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8002e0a:	2364      	movs	r3, #100	; 0x64
 8002e0c:	9302      	str	r3, [sp, #8]
 8002e0e:	2301      	movs	r3, #1
 8002e10:	9301      	str	r3, [sp, #4]
 8002e12:	463b      	mov	r3, r7
 8002e14:	9300      	str	r3, [sp, #0]
 8002e16:	2301      	movs	r3, #1
 8002e18:	2203      	movs	r2, #3
 8002e1a:	2100      	movs	r1, #0
 8002e1c:	4891      	ldr	r0, [pc, #580]	; (8003064 <lcd_init+0x21c0>)
 8002e1e:	f004 fd7b 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8002e22:	2001      	movs	r0, #1
 8002e24:	f003 fe34 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002e28:	463a      	mov	r2, r7
 8002e2a:	2364      	movs	r3, #100	; 0x64
 8002e2c:	9300      	str	r3, [sp, #0]
 8002e2e:	2301      	movs	r3, #1
 8002e30:	2100      	movs	r1, #0
 8002e32:	488c      	ldr	r0, [pc, #560]	; (8003064 <lcd_init+0x21c0>)
 8002e34:	f004 fa4c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002e38:	2001      	movs	r0, #1
 8002e3a:	f003 fe29 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002e3e:	463a      	mov	r2, r7
 8002e40:	2364      	movs	r3, #100	; 0x64
 8002e42:	9300      	str	r3, [sp, #0]
 8002e44:	2301      	movs	r3, #1
 8002e46:	2100      	movs	r1, #0
 8002e48:	4886      	ldr	r0, [pc, #536]	; (8003064 <lcd_init+0x21c0>)
 8002e4a:	f004 fa41 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002e4e:	2001      	movs	r0, #1
 8002e50:	f003 fe1e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002e54:	463a      	mov	r2, r7
 8002e56:	2364      	movs	r3, #100	; 0x64
 8002e58:	9300      	str	r3, [sp, #0]
 8002e5a:	2301      	movs	r3, #1
 8002e5c:	2100      	movs	r1, #0
 8002e5e:	4881      	ldr	r0, [pc, #516]	; (8003064 <lcd_init+0x21c0>)
 8002e60:	f004 fa36 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002e64:	2001      	movs	r0, #1
 8002e66:	f003 fe13 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002e6a:	463a      	mov	r2, r7
 8002e6c:	2364      	movs	r3, #100	; 0x64
 8002e6e:	9300      	str	r3, [sp, #0]
 8002e70:	2301      	movs	r3, #1
 8002e72:	2100      	movs	r1, #0
 8002e74:	487b      	ldr	r0, [pc, #492]	; (8003064 <lcd_init+0x21c0>)
 8002e76:	f004 fa2b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002e7a:	2001      	movs	r0, #1
 8002e7c:	f003 fe08 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002e80:	463a      	mov	r2, r7
 8002e82:	2364      	movs	r3, #100	; 0x64
 8002e84:	9300      	str	r3, [sp, #0]
 8002e86:	2301      	movs	r3, #1
 8002e88:	2100      	movs	r1, #0
 8002e8a:	4876      	ldr	r0, [pc, #472]	; (8003064 <lcd_init+0x21c0>)
 8002e8c:	f004 fa20 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002e90:	2001      	movs	r0, #1
 8002e92:	f003 fdfd 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002e96:	463a      	mov	r2, r7
 8002e98:	2364      	movs	r3, #100	; 0x64
 8002e9a:	9300      	str	r3, [sp, #0]
 8002e9c:	2301      	movs	r3, #1
 8002e9e:	2100      	movs	r1, #0
 8002ea0:	4870      	ldr	r0, [pc, #448]	; (8003064 <lcd_init+0x21c0>)
 8002ea2:	f004 fa15 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ea6:	2001      	movs	r0, #1
 8002ea8:	f003 fdf2 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002eac:	463a      	mov	r2, r7
 8002eae:	2364      	movs	r3, #100	; 0x64
 8002eb0:	9300      	str	r3, [sp, #0]
 8002eb2:	2301      	movs	r3, #1
 8002eb4:	2100      	movs	r1, #0
 8002eb6:	486b      	ldr	r0, [pc, #428]	; (8003064 <lcd_init+0x21c0>)
 8002eb8:	f004 fa0a 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ebc:	2001      	movs	r0, #1
 8002ebe:	f003 fde7 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ec2:	463a      	mov	r2, r7
 8002ec4:	2364      	movs	r3, #100	; 0x64
 8002ec6:	9300      	str	r3, [sp, #0]
 8002ec8:	2301      	movs	r3, #1
 8002eca:	2100      	movs	r1, #0
 8002ecc:	4865      	ldr	r0, [pc, #404]	; (8003064 <lcd_init+0x21c0>)
 8002ece:	f004 f9ff 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ed2:	2001      	movs	r0, #1
 8002ed4:	f003 fddc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ed8:	463a      	mov	r2, r7
 8002eda:	2364      	movs	r3, #100	; 0x64
 8002edc:	9300      	str	r3, [sp, #0]
 8002ede:	2301      	movs	r3, #1
 8002ee0:	2100      	movs	r1, #0
 8002ee2:	4860      	ldr	r0, [pc, #384]	; (8003064 <lcd_init+0x21c0>)
 8002ee4:	f004 f9f4 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ee8:	2001      	movs	r0, #1
 8002eea:	f003 fdd1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002eee:	463a      	mov	r2, r7
 8002ef0:	2364      	movs	r3, #100	; 0x64
 8002ef2:	9300      	str	r3, [sp, #0]
 8002ef4:	2301      	movs	r3, #1
 8002ef6:	2100      	movs	r1, #0
 8002ef8:	485a      	ldr	r0, [pc, #360]	; (8003064 <lcd_init+0x21c0>)
 8002efa:	f004 f9e9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002efe:	2001      	movs	r0, #1
 8002f00:	f003 fdc6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f04:	463a      	mov	r2, r7
 8002f06:	2364      	movs	r3, #100	; 0x64
 8002f08:	9300      	str	r3, [sp, #0]
 8002f0a:	2301      	movs	r3, #1
 8002f0c:	2100      	movs	r1, #0
 8002f0e:	4855      	ldr	r0, [pc, #340]	; (8003064 <lcd_init+0x21c0>)
 8002f10:	f004 f9de 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002f14:	2001      	movs	r0, #1
 8002f16:	f003 fdbb 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f1a:	463a      	mov	r2, r7
 8002f1c:	2364      	movs	r3, #100	; 0x64
 8002f1e:	9300      	str	r3, [sp, #0]
 8002f20:	2301      	movs	r3, #1
 8002f22:	2100      	movs	r1, #0
 8002f24:	484f      	ldr	r0, [pc, #316]	; (8003064 <lcd_init+0x21c0>)
 8002f26:	f004 f9d3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002f2a:	2001      	movs	r0, #1
 8002f2c:	f003 fdb0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f30:	463a      	mov	r2, r7
 8002f32:	2364      	movs	r3, #100	; 0x64
 8002f34:	9300      	str	r3, [sp, #0]
 8002f36:	2301      	movs	r3, #1
 8002f38:	2100      	movs	r1, #0
 8002f3a:	484a      	ldr	r0, [pc, #296]	; (8003064 <lcd_init+0x21c0>)
 8002f3c:	f004 f9c8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002f40:	2001      	movs	r0, #1
 8002f42:	f003 fda5 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f46:	463a      	mov	r2, r7
 8002f48:	2364      	movs	r3, #100	; 0x64
 8002f4a:	9300      	str	r3, [sp, #0]
 8002f4c:	2301      	movs	r3, #1
 8002f4e:	2100      	movs	r1, #0
 8002f50:	4844      	ldr	r0, [pc, #272]	; (8003064 <lcd_init+0x21c0>)
 8002f52:	f004 f9bd 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002f56:	2001      	movs	r0, #1
 8002f58:	f003 fd9a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f5c:	463a      	mov	r2, r7
 8002f5e:	2364      	movs	r3, #100	; 0x64
 8002f60:	9300      	str	r3, [sp, #0]
 8002f62:	2301      	movs	r3, #1
 8002f64:	2100      	movs	r1, #0
 8002f66:	483f      	ldr	r0, [pc, #252]	; (8003064 <lcd_init+0x21c0>)
 8002f68:	f004 f9b2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002f6c:	2001      	movs	r0, #1
 8002f6e:	f003 fd8f 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f72:	463a      	mov	r2, r7
 8002f74:	2364      	movs	r3, #100	; 0x64
 8002f76:	9300      	str	r3, [sp, #0]
 8002f78:	2301      	movs	r3, #1
 8002f7a:	2100      	movs	r1, #0
 8002f7c:	4839      	ldr	r0, [pc, #228]	; (8003064 <lcd_init+0x21c0>)
 8002f7e:	f004 f9a7 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002f82:	2001      	movs	r0, #1
 8002f84:	f003 fd84 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f88:	463a      	mov	r2, r7
 8002f8a:	2364      	movs	r3, #100	; 0x64
 8002f8c:	9300      	str	r3, [sp, #0]
 8002f8e:	2301      	movs	r3, #1
 8002f90:	2100      	movs	r1, #0
 8002f92:	4834      	ldr	r0, [pc, #208]	; (8003064 <lcd_init+0x21c0>)
 8002f94:	f004 f99c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002f98:	2001      	movs	r0, #1
 8002f9a:	f003 fd79 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002f9e:	463a      	mov	r2, r7
 8002fa0:	2364      	movs	r3, #100	; 0x64
 8002fa2:	9300      	str	r3, [sp, #0]
 8002fa4:	2301      	movs	r3, #1
 8002fa6:	2100      	movs	r1, #0
 8002fa8:	482e      	ldr	r0, [pc, #184]	; (8003064 <lcd_init+0x21c0>)
 8002faa:	f004 f991 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002fae:	2001      	movs	r0, #1
 8002fb0:	f003 fd6e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002fb4:	463a      	mov	r2, r7
 8002fb6:	2364      	movs	r3, #100	; 0x64
 8002fb8:	9300      	str	r3, [sp, #0]
 8002fba:	2301      	movs	r3, #1
 8002fbc:	2100      	movs	r1, #0
 8002fbe:	4829      	ldr	r0, [pc, #164]	; (8003064 <lcd_init+0x21c0>)
 8002fc0:	f004 f986 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002fc4:	2001      	movs	r0, #1
 8002fc6:	f003 fd63 	bl	8006a90 <HAL_Delay>

	/*--------------------Quatrieme ligne--------------------*/
    HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 8002fca:	2364      	movs	r3, #100	; 0x64
 8002fcc:	9302      	str	r3, [sp, #8]
 8002fce:	2301      	movs	r3, #1
 8002fd0:	9301      	str	r3, [sp, #4]
 8002fd2:	463b      	mov	r3, r7
 8002fd4:	9300      	str	r3, [sp, #0]
 8002fd6:	2301      	movs	r3, #1
 8002fd8:	2204      	movs	r2, #4
 8002fda:	2100      	movs	r1, #0
 8002fdc:	4821      	ldr	r0, [pc, #132]	; (8003064 <lcd_init+0x21c0>)
 8002fde:	f004 fc9b 	bl	8007918 <HAL_I2C_Mem_Write>
    HAL_Delay(1);
 8002fe2:	2001      	movs	r0, #1
 8002fe4:	f003 fd54 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002fe8:	463a      	mov	r2, r7
 8002fea:	2364      	movs	r3, #100	; 0x64
 8002fec:	9300      	str	r3, [sp, #0]
 8002fee:	2301      	movs	r3, #1
 8002ff0:	2100      	movs	r1, #0
 8002ff2:	481c      	ldr	r0, [pc, #112]	; (8003064 <lcd_init+0x21c0>)
 8002ff4:	f004 f96c 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8002ff8:	2001      	movs	r0, #1
 8002ffa:	f003 fd49 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8002ffe:	463a      	mov	r2, r7
 8003000:	2364      	movs	r3, #100	; 0x64
 8003002:	9300      	str	r3, [sp, #0]
 8003004:	2301      	movs	r3, #1
 8003006:	2100      	movs	r1, #0
 8003008:	4816      	ldr	r0, [pc, #88]	; (8003064 <lcd_init+0x21c0>)
 800300a:	f004 f961 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800300e:	2001      	movs	r0, #1
 8003010:	f003 fd3e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003014:	463a      	mov	r2, r7
 8003016:	2364      	movs	r3, #100	; 0x64
 8003018:	9300      	str	r3, [sp, #0]
 800301a:	2301      	movs	r3, #1
 800301c:	2100      	movs	r1, #0
 800301e:	4811      	ldr	r0, [pc, #68]	; (8003064 <lcd_init+0x21c0>)
 8003020:	f004 f956 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8003024:	2001      	movs	r0, #1
 8003026:	f003 fd33 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800302a:	463a      	mov	r2, r7
 800302c:	2364      	movs	r3, #100	; 0x64
 800302e:	9300      	str	r3, [sp, #0]
 8003030:	2301      	movs	r3, #1
 8003032:	2100      	movs	r1, #0
 8003034:	480b      	ldr	r0, [pc, #44]	; (8003064 <lcd_init+0x21c0>)
 8003036:	f004 f94b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800303a:	2001      	movs	r0, #1
 800303c:	f003 fd28 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003040:	463a      	mov	r2, r7
 8003042:	2364      	movs	r3, #100	; 0x64
 8003044:	9300      	str	r3, [sp, #0]
 8003046:	2301      	movs	r3, #1
 8003048:	2100      	movs	r1, #0
 800304a:	4806      	ldr	r0, [pc, #24]	; (8003064 <lcd_init+0x21c0>)
 800304c:	f004 f940 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8003050:	2001      	movs	r0, #1
 8003052:	f003 fd1d 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003056:	463a      	mov	r2, r7
 8003058:	2364      	movs	r3, #100	; 0x64
 800305a:	9300      	str	r3, [sp, #0]
 800305c:	2301      	movs	r3, #1
 800305e:	2100      	movs	r1, #0
 8003060:	e002      	b.n	8003068 <lcd_init+0x21c4>
 8003062:	bf00      	nop
 8003064:	200000a4 	.word	0x200000a4
 8003068:	484c      	ldr	r0, [pc, #304]	; (800319c <lcd_init+0x22f8>)
 800306a:	f004 f931 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800306e:	2001      	movs	r0, #1
 8003070:	f003 fd0e 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003074:	463a      	mov	r2, r7
 8003076:	2364      	movs	r3, #100	; 0x64
 8003078:	9300      	str	r3, [sp, #0]
 800307a:	2301      	movs	r3, #1
 800307c:	2100      	movs	r1, #0
 800307e:	4847      	ldr	r0, [pc, #284]	; (800319c <lcd_init+0x22f8>)
 8003080:	f004 f926 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8003084:	2001      	movs	r0, #1
 8003086:	f003 fd03 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800308a:	463a      	mov	r2, r7
 800308c:	2364      	movs	r3, #100	; 0x64
 800308e:	9300      	str	r3, [sp, #0]
 8003090:	2301      	movs	r3, #1
 8003092:	2100      	movs	r1, #0
 8003094:	4841      	ldr	r0, [pc, #260]	; (800319c <lcd_init+0x22f8>)
 8003096:	f004 f91b 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800309a:	2001      	movs	r0, #1
 800309c:	f003 fcf8 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80030a0:	463a      	mov	r2, r7
 80030a2:	2364      	movs	r3, #100	; 0x64
 80030a4:	9300      	str	r3, [sp, #0]
 80030a6:	2301      	movs	r3, #1
 80030a8:	2100      	movs	r1, #0
 80030aa:	483c      	ldr	r0, [pc, #240]	; (800319c <lcd_init+0x22f8>)
 80030ac:	f004 f910 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80030b0:	2001      	movs	r0, #1
 80030b2:	f003 fced 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80030b6:	463a      	mov	r2, r7
 80030b8:	2364      	movs	r3, #100	; 0x64
 80030ba:	9300      	str	r3, [sp, #0]
 80030bc:	2301      	movs	r3, #1
 80030be:	2100      	movs	r1, #0
 80030c0:	4836      	ldr	r0, [pc, #216]	; (800319c <lcd_init+0x22f8>)
 80030c2:	f004 f905 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80030c6:	2001      	movs	r0, #1
 80030c8:	f003 fce2 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80030cc:	463a      	mov	r2, r7
 80030ce:	2364      	movs	r3, #100	; 0x64
 80030d0:	9300      	str	r3, [sp, #0]
 80030d2:	2301      	movs	r3, #1
 80030d4:	2100      	movs	r1, #0
 80030d6:	4831      	ldr	r0, [pc, #196]	; (800319c <lcd_init+0x22f8>)
 80030d8:	f004 f8fa 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80030dc:	2001      	movs	r0, #1
 80030de:	f003 fcd7 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80030e2:	463a      	mov	r2, r7
 80030e4:	2364      	movs	r3, #100	; 0x64
 80030e6:	9300      	str	r3, [sp, #0]
 80030e8:	2301      	movs	r3, #1
 80030ea:	2100      	movs	r1, #0
 80030ec:	482b      	ldr	r0, [pc, #172]	; (800319c <lcd_init+0x22f8>)
 80030ee:	f004 f8ef 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 80030f2:	2001      	movs	r0, #1
 80030f4:	f003 fccc 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80030f8:	463a      	mov	r2, r7
 80030fa:	2364      	movs	r3, #100	; 0x64
 80030fc:	9300      	str	r3, [sp, #0]
 80030fe:	2301      	movs	r3, #1
 8003100:	2100      	movs	r1, #0
 8003102:	4826      	ldr	r0, [pc, #152]	; (800319c <lcd_init+0x22f8>)
 8003104:	f004 f8e4 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8003108:	2001      	movs	r0, #1
 800310a:	f003 fcc1 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800310e:	463a      	mov	r2, r7
 8003110:	2364      	movs	r3, #100	; 0x64
 8003112:	9300      	str	r3, [sp, #0]
 8003114:	2301      	movs	r3, #1
 8003116:	2100      	movs	r1, #0
 8003118:	4820      	ldr	r0, [pc, #128]	; (800319c <lcd_init+0x22f8>)
 800311a:	f004 f8d9 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800311e:	2001      	movs	r0, #1
 8003120:	f003 fcb6 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003124:	463a      	mov	r2, r7
 8003126:	2364      	movs	r3, #100	; 0x64
 8003128:	9300      	str	r3, [sp, #0]
 800312a:	2301      	movs	r3, #1
 800312c:	2100      	movs	r1, #0
 800312e:	481b      	ldr	r0, [pc, #108]	; (800319c <lcd_init+0x22f8>)
 8003130:	f004 f8ce 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8003134:	2001      	movs	r0, #1
 8003136:	f003 fcab 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800313a:	463a      	mov	r2, r7
 800313c:	2364      	movs	r3, #100	; 0x64
 800313e:	9300      	str	r3, [sp, #0]
 8003140:	2301      	movs	r3, #1
 8003142:	2100      	movs	r1, #0
 8003144:	4815      	ldr	r0, [pc, #84]	; (800319c <lcd_init+0x22f8>)
 8003146:	f004 f8c3 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800314a:	2001      	movs	r0, #1
 800314c:	f003 fca0 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003150:	463a      	mov	r2, r7
 8003152:	2364      	movs	r3, #100	; 0x64
 8003154:	9300      	str	r3, [sp, #0]
 8003156:	2301      	movs	r3, #1
 8003158:	2100      	movs	r1, #0
 800315a:	4810      	ldr	r0, [pc, #64]	; (800319c <lcd_init+0x22f8>)
 800315c:	f004 f8b8 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8003160:	2001      	movs	r0, #1
 8003162:	f003 fc95 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003166:	463a      	mov	r2, r7
 8003168:	2364      	movs	r3, #100	; 0x64
 800316a:	9300      	str	r3, [sp, #0]
 800316c:	2301      	movs	r3, #1
 800316e:	2100      	movs	r1, #0
 8003170:	480a      	ldr	r0, [pc, #40]	; (800319c <lcd_init+0x22f8>)
 8003172:	f004 f8ad 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8003176:	2001      	movs	r0, #1
 8003178:	f003 fc8a 	bl	8006a90 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800317c:	463a      	mov	r2, r7
 800317e:	2364      	movs	r3, #100	; 0x64
 8003180:	9300      	str	r3, [sp, #0]
 8003182:	2301      	movs	r3, #1
 8003184:	2100      	movs	r1, #0
 8003186:	4805      	ldr	r0, [pc, #20]	; (800319c <lcd_init+0x22f8>)
 8003188:	f004 f8a2 	bl	80072d0 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 800318c:	2001      	movs	r0, #1
 800318e:	f003 fc7f 	bl	8006a90 <HAL_Delay>

/*-----------------------------------------------FIN-----------------------------------------------*/

}
 8003192:	bf00      	nop
 8003194:	3708      	adds	r7, #8
 8003196:	46bd      	mov	sp, r7
 8003198:	bd80      	pop	{r7, pc}
 800319a:	bf00      	nop
 800319c:	200000a4 	.word	0x200000a4

080031a0 <lcd_affDistance>:
void lcd_affDistance(int distance)
{
 80031a0:	b590      	push	{r4, r7, lr}
 80031a2:	b08b      	sub	sp, #44	; 0x2c
 80031a4:	af04      	add	r7, sp, #16
 80031a6:	6078      	str	r0, [r7, #4]
	/*----Recuperation distance----*/
	uint8_t space[1]={0xFE};
 80031a8:	23fe      	movs	r3, #254	; 0xfe
 80031aa:	743b      	strb	r3, [r7, #16]
	char mot[4];
	itoa(distance,mot,10);
 80031ac:	f107 030c 	add.w	r3, r7, #12
 80031b0:	220a      	movs	r2, #10
 80031b2:	4619      	mov	r1, r3
 80031b4:	6878      	ldr	r0, [r7, #4]
 80031b6:	f007 f81b 	bl	800a1f0 <itoa>
	int n = log10(distance) + 1;
 80031ba:	6878      	ldr	r0, [r7, #4]
 80031bc:	f7fd f95e 	bl	800047c <__aeabi_i2d>
 80031c0:	4603      	mov	r3, r0
 80031c2:	460c      	mov	r4, r1
 80031c4:	ec44 3b10 	vmov	d0, r3, r4
 80031c8:	f007 f85a 	bl	800a280 <log10>
 80031cc:	ec51 0b10 	vmov	r0, r1, d0
 80031d0:	f04f 0200 	mov.w	r2, #0
 80031d4:	4b64      	ldr	r3, [pc, #400]	; (8003368 <lcd_affDistance+0x1c8>)
 80031d6:	f7fd f805 	bl	80001e4 <__adddf3>
 80031da:	4603      	mov	r3, r0
 80031dc:	460c      	mov	r4, r1
 80031de:	4618      	mov	r0, r3
 80031e0:	4621      	mov	r1, r4
 80031e2:	f7fd fc65 	bl	8000ab0 <__aeabi_d2iz>
 80031e6:	4603      	mov	r3, r0
 80031e8:	617b      	str	r3, [r7, #20]
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x01, 1, (uint8_t *)"Distance recue :",16,100);
 80031ea:	2364      	movs	r3, #100	; 0x64
 80031ec:	9302      	str	r3, [sp, #8]
 80031ee:	2310      	movs	r3, #16
 80031f0:	9301      	str	r3, [sp, #4]
 80031f2:	4b5e      	ldr	r3, [pc, #376]	; (800336c <lcd_affDistance+0x1cc>)
 80031f4:	9300      	str	r3, [sp, #0]
 80031f6:	2301      	movs	r3, #1
 80031f8:	2201      	movs	r2, #1
 80031fa:	2100      	movs	r1, #0
 80031fc:	485c      	ldr	r0, [pc, #368]	; (8003370 <lcd_affDistance+0x1d0>)
 80031fe:	f004 fb8b 	bl	8007918 <HAL_I2C_Mem_Write>

	HAL_Delay(1);
 8003202:	2001      	movs	r0, #1
 8003204:	f003 fc44 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x10, 1, (uint8_t *)mot,n,100);
 8003208:	697b      	ldr	r3, [r7, #20]
 800320a:	b29b      	uxth	r3, r3
 800320c:	2264      	movs	r2, #100	; 0x64
 800320e:	9202      	str	r2, [sp, #8]
 8003210:	9301      	str	r3, [sp, #4]
 8003212:	f107 030c 	add.w	r3, r7, #12
 8003216:	9300      	str	r3, [sp, #0]
 8003218:	2301      	movs	r3, #1
 800321a:	2210      	movs	r2, #16
 800321c:	2100      	movs	r1, #0
 800321e:	4854      	ldr	r0, [pc, #336]	; (8003370 <lcd_affDistance+0x1d0>)
 8003220:	f004 fb7a 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(10);
 8003224:	200a      	movs	r0, #10
 8003226:	f003 fc33 	bl	8006a90 <HAL_Delay>
	if(n == 1)
 800322a:	697b      	ldr	r3, [r7, #20]
 800322c:	2b01      	cmp	r3, #1
 800322e:	d140      	bne.n	80032b2 <lcd_affDistance+0x112>
	{
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x11 , 1, (uint8_t *)space,1,100);
 8003230:	2364      	movs	r3, #100	; 0x64
 8003232:	9302      	str	r3, [sp, #8]
 8003234:	2301      	movs	r3, #1
 8003236:	9301      	str	r3, [sp, #4]
 8003238:	f107 0310 	add.w	r3, r7, #16
 800323c:	9300      	str	r3, [sp, #0]
 800323e:	2301      	movs	r3, #1
 8003240:	2211      	movs	r2, #17
 8003242:	2100      	movs	r1, #0
 8003244:	484a      	ldr	r0, [pc, #296]	; (8003370 <lcd_affDistance+0x1d0>)
 8003246:	f004 fb67 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 800324a:	200a      	movs	r0, #10
 800324c:	f003 fc20 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x12 , 1, (uint8_t *)space,1,100);
 8003250:	2364      	movs	r3, #100	; 0x64
 8003252:	9302      	str	r3, [sp, #8]
 8003254:	2301      	movs	r3, #1
 8003256:	9301      	str	r3, [sp, #4]
 8003258:	f107 0310 	add.w	r3, r7, #16
 800325c:	9300      	str	r3, [sp, #0]
 800325e:	2301      	movs	r3, #1
 8003260:	2212      	movs	r2, #18
 8003262:	2100      	movs	r1, #0
 8003264:	4842      	ldr	r0, [pc, #264]	; (8003370 <lcd_affDistance+0x1d0>)
 8003266:	f004 fb57 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 800326a:	200a      	movs	r0, #10
 800326c:	f003 fc10 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x13 , 1, (uint8_t *)space,1,100);
 8003270:	2364      	movs	r3, #100	; 0x64
 8003272:	9302      	str	r3, [sp, #8]
 8003274:	2301      	movs	r3, #1
 8003276:	9301      	str	r3, [sp, #4]
 8003278:	f107 0310 	add.w	r3, r7, #16
 800327c:	9300      	str	r3, [sp, #0]
 800327e:	2301      	movs	r3, #1
 8003280:	2213      	movs	r2, #19
 8003282:	2100      	movs	r1, #0
 8003284:	483a      	ldr	r0, [pc, #232]	; (8003370 <lcd_affDistance+0x1d0>)
 8003286:	f004 fb47 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 800328a:	200a      	movs	r0, #10
 800328c:	f003 fc00 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x14 , 1, (uint8_t *)space,1,100);
 8003290:	2364      	movs	r3, #100	; 0x64
 8003292:	9302      	str	r3, [sp, #8]
 8003294:	2301      	movs	r3, #1
 8003296:	9301      	str	r3, [sp, #4]
 8003298:	f107 0310 	add.w	r3, r7, #16
 800329c:	9300      	str	r3, [sp, #0]
 800329e:	2301      	movs	r3, #1
 80032a0:	2214      	movs	r2, #20
 80032a2:	2100      	movs	r1, #0
 80032a4:	4832      	ldr	r0, [pc, #200]	; (8003370 <lcd_affDistance+0x1d0>)
 80032a6:	f004 fb37 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 80032aa:	200a      	movs	r0, #10
 80032ac:	f003 fbf0 	bl	8006a90 <HAL_Delay>
		HAL_Delay(10);
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x14 , 1, (uint8_t *)space,1,100);
		HAL_Delay(10);
	}

}
 80032b0:	e056      	b.n	8003360 <lcd_affDistance+0x1c0>
	else if(n == 2)
 80032b2:	697b      	ldr	r3, [r7, #20]
 80032b4:	2b02      	cmp	r3, #2
 80032b6:	d130      	bne.n	800331a <lcd_affDistance+0x17a>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x12 , 1, (uint8_t *)space,1,100);
 80032b8:	2364      	movs	r3, #100	; 0x64
 80032ba:	9302      	str	r3, [sp, #8]
 80032bc:	2301      	movs	r3, #1
 80032be:	9301      	str	r3, [sp, #4]
 80032c0:	f107 0310 	add.w	r3, r7, #16
 80032c4:	9300      	str	r3, [sp, #0]
 80032c6:	2301      	movs	r3, #1
 80032c8:	2212      	movs	r2, #18
 80032ca:	2100      	movs	r1, #0
 80032cc:	4828      	ldr	r0, [pc, #160]	; (8003370 <lcd_affDistance+0x1d0>)
 80032ce:	f004 fb23 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 80032d2:	200a      	movs	r0, #10
 80032d4:	f003 fbdc 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x13 , 1, (uint8_t *)space,1,100);
 80032d8:	2364      	movs	r3, #100	; 0x64
 80032da:	9302      	str	r3, [sp, #8]
 80032dc:	2301      	movs	r3, #1
 80032de:	9301      	str	r3, [sp, #4]
 80032e0:	f107 0310 	add.w	r3, r7, #16
 80032e4:	9300      	str	r3, [sp, #0]
 80032e6:	2301      	movs	r3, #1
 80032e8:	2213      	movs	r2, #19
 80032ea:	2100      	movs	r1, #0
 80032ec:	4820      	ldr	r0, [pc, #128]	; (8003370 <lcd_affDistance+0x1d0>)
 80032ee:	f004 fb13 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 80032f2:	200a      	movs	r0, #10
 80032f4:	f003 fbcc 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x14 , 1, (uint8_t *)space,1,100);
 80032f8:	2364      	movs	r3, #100	; 0x64
 80032fa:	9302      	str	r3, [sp, #8]
 80032fc:	2301      	movs	r3, #1
 80032fe:	9301      	str	r3, [sp, #4]
 8003300:	f107 0310 	add.w	r3, r7, #16
 8003304:	9300      	str	r3, [sp, #0]
 8003306:	2301      	movs	r3, #1
 8003308:	2214      	movs	r2, #20
 800330a:	2100      	movs	r1, #0
 800330c:	4818      	ldr	r0, [pc, #96]	; (8003370 <lcd_affDistance+0x1d0>)
 800330e:	f004 fb03 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 8003312:	200a      	movs	r0, #10
 8003314:	f003 fbbc 	bl	8006a90 <HAL_Delay>
}
 8003318:	e022      	b.n	8003360 <lcd_affDistance+0x1c0>
	else if(n == 3){
 800331a:	697b      	ldr	r3, [r7, #20]
 800331c:	2b03      	cmp	r3, #3
 800331e:	d11f      	bne.n	8003360 <lcd_affDistance+0x1c0>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x13 , 1, (uint8_t *)space,1,100);
 8003320:	2364      	movs	r3, #100	; 0x64
 8003322:	9302      	str	r3, [sp, #8]
 8003324:	2301      	movs	r3, #1
 8003326:	9301      	str	r3, [sp, #4]
 8003328:	f107 0310 	add.w	r3, r7, #16
 800332c:	9300      	str	r3, [sp, #0]
 800332e:	2301      	movs	r3, #1
 8003330:	2213      	movs	r2, #19
 8003332:	2100      	movs	r1, #0
 8003334:	480e      	ldr	r0, [pc, #56]	; (8003370 <lcd_affDistance+0x1d0>)
 8003336:	f004 faef 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 800333a:	200a      	movs	r0, #10
 800333c:	f003 fba8 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x14 , 1, (uint8_t *)space,1,100);
 8003340:	2364      	movs	r3, #100	; 0x64
 8003342:	9302      	str	r3, [sp, #8]
 8003344:	2301      	movs	r3, #1
 8003346:	9301      	str	r3, [sp, #4]
 8003348:	f107 0310 	add.w	r3, r7, #16
 800334c:	9300      	str	r3, [sp, #0]
 800334e:	2301      	movs	r3, #1
 8003350:	2214      	movs	r2, #20
 8003352:	2100      	movs	r1, #0
 8003354:	4806      	ldr	r0, [pc, #24]	; (8003370 <lcd_affDistance+0x1d0>)
 8003356:	f004 fadf 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(10);
 800335a:	200a      	movs	r0, #10
 800335c:	f003 fb98 	bl	8006a90 <HAL_Delay>
}
 8003360:	bf00      	nop
 8003362:	371c      	adds	r7, #28
 8003364:	46bd      	mov	sp, r7
 8003366:	bd90      	pop	{r4, r7, pc}
 8003368:	3ff00000 	.word	0x3ff00000
 800336c:	0800a828 	.word	0x0800a828
 8003370:	200000a4 	.word	0x200000a4

08003374 <lcd_interfacePrinc>:

void lcd_interfacePrinc(int tabDistance, int tabVitesse,int tpsActif)
{
 8003374:	b5b0      	push	{r4, r5, r7, lr}
 8003376:	b094      	sub	sp, #80	; 0x50
 8003378:	af04      	add	r7, sp, #16
 800337a:	60f8      	str	r0, [r7, #12]
 800337c:	60b9      	str	r1, [r7, #8]
 800337e:	607a      	str	r2, [r7, #4]
 8003380:	466b      	mov	r3, sp
 8003382:	461d      	mov	r5, r3
	/*				Cette fonction ne retourne rien et ne fait que de l'affichage			   */
	/*				Elle met cependant en veille l'écran au bout de 10s sans actions		   */
	/*-----------------------------------------------------------------------------------------*/

	/*-----BOUTON POUR CHANGER LA DISTANCE----*/
	clicBtnDistance();
 8003384:	f002 fc8a 	bl	8005c9c <clicBtnDistance>
	/*----FIN DE LA PARTIE CONCERNANT LE BOUTON POUSSOIR DE LA DISTANCE----*/

	/*-----BOUTON POUR CHANGER LA VITESSE----*/
	clicBtnVitesse();
 8003388:	f002 fcbc 	bl	8005d04 <clicBtnVitesse>
	/*----FIN DE LA PARTIE CONCERNANT LE BOUTON POUSSOIR DE LA VITESSE----*/

	/*----AFFICHAGE DISTANCE CHOISIE----*/
	char maDistance[4];
	itoa(tabDistance,maDistance,10);
 800338c:	f107 0314 	add.w	r3, r7, #20
 8003390:	220a      	movs	r2, #10
 8003392:	4619      	mov	r1, r3
 8003394:	68f8      	ldr	r0, [r7, #12]
 8003396:	f006 ff2b 	bl	800a1f0 <itoa>
	int tailleDist = log10(tabDistance) + 1;
 800339a:	68f8      	ldr	r0, [r7, #12]
 800339c:	f7fd f86e 	bl	800047c <__aeabi_i2d>
 80033a0:	4603      	mov	r3, r0
 80033a2:	460c      	mov	r4, r1
 80033a4:	ec44 3b10 	vmov	d0, r3, r4
 80033a8:	f006 ff6a 	bl	800a280 <log10>
 80033ac:	ec51 0b10 	vmov	r0, r1, d0
 80033b0:	f04f 0200 	mov.w	r2, #0
 80033b4:	4bad      	ldr	r3, [pc, #692]	; (800366c <lcd_interfacePrinc+0x2f8>)
 80033b6:	f7fc ff15 	bl	80001e4 <__adddf3>
 80033ba:	4603      	mov	r3, r0
 80033bc:	460c      	mov	r4, r1
 80033be:	4618      	mov	r0, r3
 80033c0:	4621      	mov	r1, r4
 80033c2:	f7fd fb75 	bl	8000ab0 <__aeabi_d2iz>
 80033c6:	4603      	mov	r3, r0
 80033c8:	63fb      	str	r3, [r7, #60]	; 0x3c

	/*----AFFICHAGE VALEUR CHOISIE----*/
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x01, 1, (uint8_t *)"Distance choisie :",18,100);
 80033ca:	2364      	movs	r3, #100	; 0x64
 80033cc:	9302      	str	r3, [sp, #8]
 80033ce:	2312      	movs	r3, #18
 80033d0:	9301      	str	r3, [sp, #4]
 80033d2:	4ba7      	ldr	r3, [pc, #668]	; (8003670 <lcd_interfacePrinc+0x2fc>)
 80033d4:	9300      	str	r3, [sp, #0]
 80033d6:	2301      	movs	r3, #1
 80033d8:	2201      	movs	r2, #1
 80033da:	2100      	movs	r1, #0
 80033dc:	48a5      	ldr	r0, [pc, #660]	; (8003674 <lcd_interfacePrinc+0x300>)
 80033de:	f004 fa9b 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 80033e2:	2001      	movs	r0, #1
 80033e4:	f003 fb54 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x10, 1, (uint8_t *)maDistance,tailleDist,100);
 80033e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80033ea:	b29b      	uxth	r3, r3
 80033ec:	2264      	movs	r2, #100	; 0x64
 80033ee:	9202      	str	r2, [sp, #8]
 80033f0:	9301      	str	r3, [sp, #4]
 80033f2:	f107 0314 	add.w	r3, r7, #20
 80033f6:	9300      	str	r3, [sp, #0]
 80033f8:	2301      	movs	r3, #1
 80033fa:	2210      	movs	r2, #16
 80033fc:	2100      	movs	r1, #0
 80033fe:	489d      	ldr	r0, [pc, #628]	; (8003674 <lcd_interfacePrinc+0x300>)
 8003400:	f004 fa8a 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 8003404:	2001      	movs	r0, #1
 8003406:	f003 fb43 	bl	8006a90 <HAL_Delay>
	/*----REMISE A 1 DE L'AFFICHAGE----*/
	if(buttonDistance == 7)
 800340a:	4b9b      	ldr	r3, [pc, #620]	; (8003678 <lcd_interfacePrinc+0x304>)
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	2b07      	cmp	r3, #7
 8003410:	d10c      	bne.n	800342c <lcd_interfacePrinc+0xb8>
	{
		buttonDistance = 1;
 8003412:	4b99      	ldr	r3, [pc, #612]	; (8003678 <lcd_interfacePrinc+0x304>)
 8003414:	2201      	movs	r2, #1
 8003416:	601a      	str	r2, [r3, #0]
		lcd_clear();
 8003418:	f7fd fd2a 	bl	8000e70 <lcd_clear>
		HAL_Delay(1);
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
		HAL_Delay(1);
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
		HAL_Delay(1);*/
		lcd_interfacePrinc(buttonDistance, buttonVitesse,tpsActif);
 800341c:	4b96      	ldr	r3, [pc, #600]	; (8003678 <lcd_interfacePrinc+0x304>)
 800341e:	6818      	ldr	r0, [r3, #0]
 8003420:	4b96      	ldr	r3, [pc, #600]	; (800367c <lcd_interfacePrinc+0x308>)
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	687a      	ldr	r2, [r7, #4]
 8003426:	4619      	mov	r1, r3
 8003428:	f7ff ffa4 	bl	8003374 <lcd_interfacePrinc>
	}

	/*----RECUPERATION VALEUR DU TABLEAU----*/
	int distanceChoisie = 0;
 800342c:	2300      	movs	r3, #0
 800342e:	63bb      	str	r3, [r7, #56]	; 0x38
	distanceChoisie = boutonDistance(buttonDistance);
 8003430:	4b91      	ldr	r3, [pc, #580]	; (8003678 <lcd_interfacePrinc+0x304>)
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	4618      	mov	r0, r3
 8003436:	f002 fbf5 	bl	8005c24 <boutonDistance>
 800343a:	63b8      	str	r0, [r7, #56]	; 0x38

	/*----CALCUL TAILLE ET CONVERSION EN STRING----*/
	int tailleDistChoisie =  log10(distanceChoisie) + 1;
 800343c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 800343e:	f7fd f81d 	bl	800047c <__aeabi_i2d>
 8003442:	4603      	mov	r3, r0
 8003444:	460c      	mov	r4, r1
 8003446:	ec44 3b10 	vmov	d0, r3, r4
 800344a:	f006 ff19 	bl	800a280 <log10>
 800344e:	ec51 0b10 	vmov	r0, r1, d0
 8003452:	f04f 0200 	mov.w	r2, #0
 8003456:	4b85      	ldr	r3, [pc, #532]	; (800366c <lcd_interfacePrinc+0x2f8>)
 8003458:	f7fc fec4 	bl	80001e4 <__adddf3>
 800345c:	4603      	mov	r3, r0
 800345e:	460c      	mov	r4, r1
 8003460:	4618      	mov	r0, r3
 8003462:	4621      	mov	r1, r4
 8003464:	f7fd fb24 	bl	8000ab0 <__aeabi_d2iz>
 8003468:	4603      	mov	r3, r0
 800346a:	637b      	str	r3, [r7, #52]	; 0x34
	char convValeur[tailleDistChoisie];
 800346c:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800346e:	1e43      	subs	r3, r0, #1
 8003470:	633b      	str	r3, [r7, #48]	; 0x30
 8003472:	4603      	mov	r3, r0
 8003474:	4619      	mov	r1, r3
 8003476:	f04f 0200 	mov.w	r2, #0
 800347a:	f04f 0300 	mov.w	r3, #0
 800347e:	f04f 0400 	mov.w	r4, #0
 8003482:	00d4      	lsls	r4, r2, #3
 8003484:	ea44 7451 	orr.w	r4, r4, r1, lsr #29
 8003488:	00cb      	lsls	r3, r1, #3
 800348a:	4603      	mov	r3, r0
 800348c:	4619      	mov	r1, r3
 800348e:	f04f 0200 	mov.w	r2, #0
 8003492:	f04f 0300 	mov.w	r3, #0
 8003496:	f04f 0400 	mov.w	r4, #0
 800349a:	00d4      	lsls	r4, r2, #3
 800349c:	ea44 7451 	orr.w	r4, r4, r1, lsr #29
 80034a0:	00cb      	lsls	r3, r1, #3
 80034a2:	4603      	mov	r3, r0
 80034a4:	3307      	adds	r3, #7
 80034a6:	08db      	lsrs	r3, r3, #3
 80034a8:	00db      	lsls	r3, r3, #3
 80034aa:	ebad 0d03 	sub.w	sp, sp, r3
 80034ae:	ab04      	add	r3, sp, #16
 80034b0:	3300      	adds	r3, #0
 80034b2:	62fb      	str	r3, [r7, #44]	; 0x2c
	itoa (distanceChoisie,convValeur,10);
 80034b4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80034b6:	220a      	movs	r2, #10
 80034b8:	4619      	mov	r1, r3
 80034ba:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80034bc:	f006 fe98 	bl	800a1f0 <itoa>

	/*----AFFICHAGE DE LA VALEUR RETOURNER----*/
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x02, 1, (uint8_t *)"--> ",4,100);
 80034c0:	2364      	movs	r3, #100	; 0x64
 80034c2:	9302      	str	r3, [sp, #8]
 80034c4:	2304      	movs	r3, #4
 80034c6:	9301      	str	r3, [sp, #4]
 80034c8:	4b6d      	ldr	r3, [pc, #436]	; (8003680 <lcd_interfacePrinc+0x30c>)
 80034ca:	9300      	str	r3, [sp, #0]
 80034cc:	2301      	movs	r3, #1
 80034ce:	2202      	movs	r2, #2
 80034d0:	2100      	movs	r1, #0
 80034d2:	4868      	ldr	r0, [pc, #416]	; (8003674 <lcd_interfacePrinc+0x300>)
 80034d4:	f004 fa20 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 80034d8:	2001      	movs	r0, #1
 80034da:	f003 fad9 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,(uint8_t *)convValeur,tailleDistChoisie,100);
 80034de:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80034e0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80034e2:	b299      	uxth	r1, r3
 80034e4:	2364      	movs	r3, #100	; 0x64
 80034e6:	9300      	str	r3, [sp, #0]
 80034e8:	460b      	mov	r3, r1
 80034ea:	2100      	movs	r1, #0
 80034ec:	4861      	ldr	r0, [pc, #388]	; (8003674 <lcd_interfacePrinc+0x300>)
 80034ee:	f003 feef 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80034f2:	2001      	movs	r0, #1
 80034f4:	f003 facc 	bl	8006a90 <HAL_Delay>
	/*------------------------------------------PARTIE VITESSE--------------------------------------------*/
	/*----------------------------------------------------------------------------------------------------*/

	/*----AFFICHAGE VITESSE CHOISIE----*/
	char maVitesse[4];
	itoa(tabVitesse,maVitesse,10);
 80034f8:	f107 0310 	add.w	r3, r7, #16
 80034fc:	220a      	movs	r2, #10
 80034fe:	4619      	mov	r1, r3
 8003500:	68b8      	ldr	r0, [r7, #8]
 8003502:	f006 fe75 	bl	800a1f0 <itoa>
	int tailleVit = log10(tabVitesse) + 1;
 8003506:	68b8      	ldr	r0, [r7, #8]
 8003508:	f7fc ffb8 	bl	800047c <__aeabi_i2d>
 800350c:	4603      	mov	r3, r0
 800350e:	460c      	mov	r4, r1
 8003510:	ec44 3b10 	vmov	d0, r3, r4
 8003514:	f006 feb4 	bl	800a280 <log10>
 8003518:	ec51 0b10 	vmov	r0, r1, d0
 800351c:	f04f 0200 	mov.w	r2, #0
 8003520:	4b52      	ldr	r3, [pc, #328]	; (800366c <lcd_interfacePrinc+0x2f8>)
 8003522:	f7fc fe5f 	bl	80001e4 <__adddf3>
 8003526:	4603      	mov	r3, r0
 8003528:	460c      	mov	r4, r1
 800352a:	4618      	mov	r0, r3
 800352c:	4621      	mov	r1, r4
 800352e:	f7fd fabf 	bl	8000ab0 <__aeabi_d2iz>
 8003532:	4603      	mov	r3, r0
 8003534:	62bb      	str	r3, [r7, #40]	; 0x28


	/*----AFFICHAGE VALEUR CHOISIE----*/
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x03, 1, (uint8_t *)"Vitesse choisie :",17,100);
 8003536:	2364      	movs	r3, #100	; 0x64
 8003538:	9302      	str	r3, [sp, #8]
 800353a:	2311      	movs	r3, #17
 800353c:	9301      	str	r3, [sp, #4]
 800353e:	4b51      	ldr	r3, [pc, #324]	; (8003684 <lcd_interfacePrinc+0x310>)
 8003540:	9300      	str	r3, [sp, #0]
 8003542:	2301      	movs	r3, #1
 8003544:	2203      	movs	r2, #3
 8003546:	2100      	movs	r1, #0
 8003548:	484a      	ldr	r0, [pc, #296]	; (8003674 <lcd_interfacePrinc+0x300>)
 800354a:	f004 f9e5 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 800354e:	2001      	movs	r0, #1
 8003550:	f003 fa9e 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x10, 1, (uint8_t *)maVitesse,tailleVit,100);
 8003554:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003556:	b29b      	uxth	r3, r3
 8003558:	2264      	movs	r2, #100	; 0x64
 800355a:	9202      	str	r2, [sp, #8]
 800355c:	9301      	str	r3, [sp, #4]
 800355e:	f107 0310 	add.w	r3, r7, #16
 8003562:	9300      	str	r3, [sp, #0]
 8003564:	2301      	movs	r3, #1
 8003566:	2210      	movs	r2, #16
 8003568:	2100      	movs	r1, #0
 800356a:	4842      	ldr	r0, [pc, #264]	; (8003674 <lcd_interfacePrinc+0x300>)
 800356c:	f004 f9d4 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 8003570:	2001      	movs	r0, #1
 8003572:	f003 fa8d 	bl	8006a90 <HAL_Delay>

	/*----RECUPERATION VALEUR DU TABLEAU----*/
	int vitesseChoisie = 0;
 8003576:	2300      	movs	r3, #0
 8003578:	627b      	str	r3, [r7, #36]	; 0x24
	vitesseChoisie = boutonVitesse(buttonVitesse);
 800357a:	4b40      	ldr	r3, [pc, #256]	; (800367c <lcd_interfacePrinc+0x308>)
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	4618      	mov	r0, r3
 8003580:	f002 fb6e 	bl	8005c60 <boutonVitesse>
 8003584:	6278      	str	r0, [r7, #36]	; 0x24

	/*----CALCUL TAILLE ET CONVERSION EN STRING----*/
	int tailleVitChoisie =  log10(vitesseChoisie) + 1;
 8003586:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003588:	f7fc ff78 	bl	800047c <__aeabi_i2d>
 800358c:	4603      	mov	r3, r0
 800358e:	460c      	mov	r4, r1
 8003590:	ec44 3b10 	vmov	d0, r3, r4
 8003594:	f006 fe74 	bl	800a280 <log10>
 8003598:	ec51 0b10 	vmov	r0, r1, d0
 800359c:	f04f 0200 	mov.w	r2, #0
 80035a0:	4b32      	ldr	r3, [pc, #200]	; (800366c <lcd_interfacePrinc+0x2f8>)
 80035a2:	f7fc fe1f 	bl	80001e4 <__adddf3>
 80035a6:	4603      	mov	r3, r0
 80035a8:	460c      	mov	r4, r1
 80035aa:	4618      	mov	r0, r3
 80035ac:	4621      	mov	r1, r4
 80035ae:	f7fd fa7f 	bl	8000ab0 <__aeabi_d2iz>
 80035b2:	4603      	mov	r3, r0
 80035b4:	623b      	str	r3, [r7, #32]
	char convVitValeur[tailleVitChoisie];
 80035b6:	6a38      	ldr	r0, [r7, #32]
 80035b8:	1e43      	subs	r3, r0, #1
 80035ba:	61fb      	str	r3, [r7, #28]
 80035bc:	4603      	mov	r3, r0
 80035be:	4619      	mov	r1, r3
 80035c0:	f04f 0200 	mov.w	r2, #0
 80035c4:	f04f 0300 	mov.w	r3, #0
 80035c8:	f04f 0400 	mov.w	r4, #0
 80035cc:	00d4      	lsls	r4, r2, #3
 80035ce:	ea44 7451 	orr.w	r4, r4, r1, lsr #29
 80035d2:	00cb      	lsls	r3, r1, #3
 80035d4:	4603      	mov	r3, r0
 80035d6:	4619      	mov	r1, r3
 80035d8:	f04f 0200 	mov.w	r2, #0
 80035dc:	f04f 0300 	mov.w	r3, #0
 80035e0:	f04f 0400 	mov.w	r4, #0
 80035e4:	00d4      	lsls	r4, r2, #3
 80035e6:	ea44 7451 	orr.w	r4, r4, r1, lsr #29
 80035ea:	00cb      	lsls	r3, r1, #3
 80035ec:	4603      	mov	r3, r0
 80035ee:	3307      	adds	r3, #7
 80035f0:	08db      	lsrs	r3, r3, #3
 80035f2:	00db      	lsls	r3, r3, #3
 80035f4:	ebad 0d03 	sub.w	sp, sp, r3
 80035f8:	ab04      	add	r3, sp, #16
 80035fa:	3300      	adds	r3, #0
 80035fc:	61bb      	str	r3, [r7, #24]
	itoa (vitesseChoisie,convVitValeur,10);
 80035fe:	69bb      	ldr	r3, [r7, #24]
 8003600:	220a      	movs	r2, #10
 8003602:	4619      	mov	r1, r3
 8003604:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003606:	f006 fdf3 	bl	800a1f0 <itoa>

	/*----AFFICHAGE DE LA VALEUR RETOURNER----*/
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x04, 1, (uint8_t *)"--> ",4,100);
 800360a:	2364      	movs	r3, #100	; 0x64
 800360c:	9302      	str	r3, [sp, #8]
 800360e:	2304      	movs	r3, #4
 8003610:	9301      	str	r3, [sp, #4]
 8003612:	4b1b      	ldr	r3, [pc, #108]	; (8003680 <lcd_interfacePrinc+0x30c>)
 8003614:	9300      	str	r3, [sp, #0]
 8003616:	2301      	movs	r3, #1
 8003618:	2204      	movs	r2, #4
 800361a:	2100      	movs	r1, #0
 800361c:	4815      	ldr	r0, [pc, #84]	; (8003674 <lcd_interfacePrinc+0x300>)
 800361e:	f004 f97b 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 8003622:	2001      	movs	r0, #1
 8003624:	f003 fa34 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,(uint8_t *)convVitValeur,tailleVitChoisie,100);
 8003628:	69ba      	ldr	r2, [r7, #24]
 800362a:	6a3b      	ldr	r3, [r7, #32]
 800362c:	b299      	uxth	r1, r3
 800362e:	2364      	movs	r3, #100	; 0x64
 8003630:	9300      	str	r3, [sp, #0]
 8003632:	460b      	mov	r3, r1
 8003634:	2100      	movs	r1, #0
 8003636:	480f      	ldr	r0, [pc, #60]	; (8003674 <lcd_interfacePrinc+0x300>)
 8003638:	f003 fe4a 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 800363c:	2001      	movs	r0, #1
 800363e:	f003 fa27 	bl	8006a90 <HAL_Delay>

	/*----REMISE A 1 DE L'AFFICHAGE----*/
	if(buttonVitesse == 7)
 8003642:	4b0e      	ldr	r3, [pc, #56]	; (800367c <lcd_interfacePrinc+0x308>)
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	2b07      	cmp	r3, #7
 8003648:	d10a      	bne.n	8003660 <lcd_interfacePrinc+0x2ec>
	{
		/*----SWITCH VERS TRANSITION POUR MODE AUTO----*/
		buttonValide = 0;
 800364a:	4b0f      	ldr	r3, [pc, #60]	; (8003688 <lcd_interfacePrinc+0x314>)
 800364c:	2200      	movs	r2, #0
 800364e:	601a      	str	r2, [r3, #0]
		lcd_clear();
 8003650:	f7fd fc0e 	bl	8000e70 <lcd_clear>
		buttonVitesse = 1;
 8003654:	4b09      	ldr	r3, [pc, #36]	; (800367c <lcd_interfacePrinc+0x308>)
 8003656:	2201      	movs	r2, #1
 8003658:	601a      	str	r2, [r3, #0]
		buttonInterface = 6;
 800365a:	4b0c      	ldr	r3, [pc, #48]	; (800368c <lcd_interfacePrinc+0x318>)
 800365c:	2206      	movs	r2, #6
 800365e:	601a      	str	r2, [r3, #0]
 8003660:	46ad      	mov	sp, r5

	}

}
 8003662:	bf00      	nop
 8003664:	3740      	adds	r7, #64	; 0x40
 8003666:	46bd      	mov	sp, r7
 8003668:	bdb0      	pop	{r4, r5, r7, pc}
 800366a:	bf00      	nop
 800366c:	3ff00000 	.word	0x3ff00000
 8003670:	0800a83c 	.word	0x0800a83c
 8003674:	200000a4 	.word	0x200000a4
 8003678:	2000015c 	.word	0x2000015c
 800367c:	200001a4 	.word	0x200001a4
 8003680:	0800a850 	.word	0x0800a850
 8003684:	0800a858 	.word	0x0800a858
 8003688:	2000014c 	.word	0x2000014c
 800368c:	20000150 	.word	0x20000150

08003690 <lcd_on>:

/* Fonction qui vas allumer l'ecran LCD */
void lcd_on(void)
{
 8003690:	b580      	push	{r7, lr}
 8003692:	b084      	sub	sp, #16
 8003694:	af02      	add	r7, sp, #8
	uint8_t cmdON[2]={0x1B, 0x42};
 8003696:	4b09      	ldr	r3, [pc, #36]	; (80036bc <lcd_on+0x2c>)
 8003698:	881b      	ldrh	r3, [r3, #0]
 800369a:	80bb      	strh	r3, [r7, #4]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdON,2,100);
 800369c:	1d3a      	adds	r2, r7, #4
 800369e:	2364      	movs	r3, #100	; 0x64
 80036a0:	9300      	str	r3, [sp, #0]
 80036a2:	2302      	movs	r3, #2
 80036a4:	2100      	movs	r1, #0
 80036a6:	4806      	ldr	r0, [pc, #24]	; (80036c0 <lcd_on+0x30>)
 80036a8:	f003 fe12 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80036ac:	2001      	movs	r0, #1
 80036ae:	f003 f9ef 	bl	8006a90 <HAL_Delay>
}
 80036b2:	bf00      	nop
 80036b4:	3708      	adds	r7, #8
 80036b6:	46bd      	mov	sp, r7
 80036b8:	bd80      	pop	{r7, pc}
 80036ba:	bf00      	nop
 80036bc:	0800a86c 	.word	0x0800a86c
 80036c0:	200000a4 	.word	0x200000a4

080036c4 <lcd_off>:

/*Fonction qui vas eteindre l'ecran LCD */
void lcd_off(void)
{
 80036c4:	b580      	push	{r7, lr}
 80036c6:	b084      	sub	sp, #16
 80036c8:	af02      	add	r7, sp, #8
	uint8_t cmdOFF[2]={0x1B, 0x62};
 80036ca:	4b09      	ldr	r3, [pc, #36]	; (80036f0 <lcd_off+0x2c>)
 80036cc:	881b      	ldrh	r3, [r3, #0]
 80036ce:	80bb      	strh	r3, [r7, #4]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdOFF,2,100);
 80036d0:	1d3a      	adds	r2, r7, #4
 80036d2:	2364      	movs	r3, #100	; 0x64
 80036d4:	9300      	str	r3, [sp, #0]
 80036d6:	2302      	movs	r3, #2
 80036d8:	2100      	movs	r1, #0
 80036da:	4806      	ldr	r0, [pc, #24]	; (80036f4 <lcd_off+0x30>)
 80036dc:	f003 fdf8 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80036e0:	2001      	movs	r0, #1
 80036e2:	f003 f9d5 	bl	8006a90 <HAL_Delay>
}
 80036e6:	bf00      	nop
 80036e8:	3708      	adds	r7, #8
 80036ea:	46bd      	mov	sp, r7
 80036ec:	bd80      	pop	{r7, pc}
 80036ee:	bf00      	nop
 80036f0:	0800a870 	.word	0x0800a870
 80036f4:	200000a4 	.word	0x200000a4

080036f8 <lcd_maVoiture>:

/* Fonction pour faire une voiture sur le LCD */
void lcd_maVoiture(void)
{
 80036f8:	b580      	push	{r7, lr}
 80036fa:	b0ae      	sub	sp, #184	; 0xb8
 80036fc:	af04      	add	r7, sp, #16
	/*----CARACTERE SPECIAUX UTILE----*/
	uint8_t space[1]={0xFE};
 80036fe:	23fe      	movs	r3, #254	; 0xfe
 8003700:	f887 30a0 	strb.w	r3, [r7, #160]	; 0xa0

	/*-----PIXEL 1-----*/
	uint8_t cmdPix1[13]={0x1B, 0x44,0x08, 0x00, 0x00, 0x00, 0x0F, 0x10, 0x12, 0x10, 0x12};
 8003704:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8003708:	2200      	movs	r2, #0
 800370a:	601a      	str	r2, [r3, #0]
 800370c:	605a      	str	r2, [r3, #4]
 800370e:	609a      	str	r2, [r3, #8]
 8003710:	731a      	strb	r2, [r3, #12]
 8003712:	231b      	movs	r3, #27
 8003714:	f887 3090 	strb.w	r3, [r7, #144]	; 0x90
 8003718:	2344      	movs	r3, #68	; 0x44
 800371a:	f887 3091 	strb.w	r3, [r7, #145]	; 0x91
 800371e:	2308      	movs	r3, #8
 8003720:	f887 3092 	strb.w	r3, [r7, #146]	; 0x92
 8003724:	230f      	movs	r3, #15
 8003726:	f887 3096 	strb.w	r3, [r7, #150]	; 0x96
 800372a:	2310      	movs	r3, #16
 800372c:	f887 3097 	strb.w	r3, [r7, #151]	; 0x97
 8003730:	2312      	movs	r3, #18
 8003732:	f887 3098 	strb.w	r3, [r7, #152]	; 0x98
 8003736:	2310      	movs	r3, #16
 8003738:	f887 3099 	strb.w	r3, [r7, #153]	; 0x99
 800373c:	2312      	movs	r3, #18
 800373e:	f887 309a 	strb.w	r3, [r7, #154]	; 0x9a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix1,13,100);
 8003742:	f107 0290 	add.w	r2, r7, #144	; 0x90
 8003746:	2364      	movs	r3, #100	; 0x64
 8003748:	9300      	str	r3, [sp, #0]
 800374a:	230d      	movs	r3, #13
 800374c:	2100      	movs	r1, #0
 800374e:	48aa      	ldr	r0, [pc, #680]	; (80039f8 <lcd_maVoiture+0x300>)
 8003750:	f003 fdbe 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8003754:	2001      	movs	r0, #1
 8003756:	f003 f99b 	bl	8006a90 <HAL_Delay>
	/*-----PIXEL 2-----*/
	uint8_t cmdPix2[13]={0x1B, 0x44, 0x09, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x1E, 0x00, 0x1E};
 800375a:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800375e:	2200      	movs	r2, #0
 8003760:	601a      	str	r2, [r3, #0]
 8003762:	605a      	str	r2, [r3, #4]
 8003764:	609a      	str	r2, [r3, #8]
 8003766:	731a      	strb	r2, [r3, #12]
 8003768:	231b      	movs	r3, #27
 800376a:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
 800376e:	2344      	movs	r3, #68	; 0x44
 8003770:	f887 3081 	strb.w	r3, [r7, #129]	; 0x81
 8003774:	2309      	movs	r3, #9
 8003776:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800377a:	231f      	movs	r3, #31
 800377c:	f887 3086 	strb.w	r3, [r7, #134]	; 0x86
 8003780:	231e      	movs	r3, #30
 8003782:	f887 3088 	strb.w	r3, [r7, #136]	; 0x88
 8003786:	231e      	movs	r3, #30
 8003788:	f887 308a 	strb.w	r3, [r7, #138]	; 0x8a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix2,13,100);
 800378c:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8003790:	2364      	movs	r3, #100	; 0x64
 8003792:	9300      	str	r3, [sp, #0]
 8003794:	230d      	movs	r3, #13
 8003796:	2100      	movs	r1, #0
 8003798:	4897      	ldr	r0, [pc, #604]	; (80039f8 <lcd_maVoiture+0x300>)
 800379a:	f003 fd99 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 800379e:	2001      	movs	r0, #1
 80037a0:	f003 f976 	bl	8006a90 <HAL_Delay>
	/*-----PIXEL 3-----*/
	uint8_t cmdPix3[13]={0x1B, 0x44, 0x0A, 0x00, 0x00, 0x00, 0x10, 0x18, 0x1F, 0x18, 0x18};
 80037a4:	f107 0370 	add.w	r3, r7, #112	; 0x70
 80037a8:	2200      	movs	r2, #0
 80037aa:	601a      	str	r2, [r3, #0]
 80037ac:	605a      	str	r2, [r3, #4]
 80037ae:	609a      	str	r2, [r3, #8]
 80037b0:	731a      	strb	r2, [r3, #12]
 80037b2:	231b      	movs	r3, #27
 80037b4:	f887 3070 	strb.w	r3, [r7, #112]	; 0x70
 80037b8:	2344      	movs	r3, #68	; 0x44
 80037ba:	f887 3071 	strb.w	r3, [r7, #113]	; 0x71
 80037be:	230a      	movs	r3, #10
 80037c0:	f887 3072 	strb.w	r3, [r7, #114]	; 0x72
 80037c4:	2310      	movs	r3, #16
 80037c6:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 80037ca:	2318      	movs	r3, #24
 80037cc:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 80037d0:	231f      	movs	r3, #31
 80037d2:	f887 3078 	strb.w	r3, [r7, #120]	; 0x78
 80037d6:	2318      	movs	r3, #24
 80037d8:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 80037dc:	2318      	movs	r3, #24
 80037de:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix3,13,100);
 80037e2:	f107 0270 	add.w	r2, r7, #112	; 0x70
 80037e6:	2364      	movs	r3, #100	; 0x64
 80037e8:	9300      	str	r3, [sp, #0]
 80037ea:	230d      	movs	r3, #13
 80037ec:	2100      	movs	r1, #0
 80037ee:	4882      	ldr	r0, [pc, #520]	; (80039f8 <lcd_maVoiture+0x300>)
 80037f0:	f003 fd6e 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80037f4:	2001      	movs	r0, #1
 80037f6:	f003 f94b 	bl	8006a90 <HAL_Delay>
	/*-----PIXEL 4-----*/
	uint8_t cmdPix4[13]={0x1B, 0x44, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x08};
 80037fa:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80037fe:	2200      	movs	r2, #0
 8003800:	601a      	str	r2, [r3, #0]
 8003802:	605a      	str	r2, [r3, #4]
 8003804:	609a      	str	r2, [r3, #8]
 8003806:	731a      	strb	r2, [r3, #12]
 8003808:	231b      	movs	r3, #27
 800380a:	f887 3060 	strb.w	r3, [r7, #96]	; 0x60
 800380e:	2344      	movs	r3, #68	; 0x44
 8003810:	f887 3061 	strb.w	r3, [r7, #97]	; 0x61
 8003814:	230b      	movs	r3, #11
 8003816:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800381a:	2310      	movs	r3, #16
 800381c:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
 8003820:	2318      	movs	r3, #24
 8003822:	f887 3069 	strb.w	r3, [r7, #105]	; 0x69
 8003826:	2308      	movs	r3, #8
 8003828:	f887 306a 	strb.w	r3, [r7, #106]	; 0x6a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix4,13,100);
 800382c:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8003830:	2364      	movs	r3, #100	; 0x64
 8003832:	9300      	str	r3, [sp, #0]
 8003834:	230d      	movs	r3, #13
 8003836:	2100      	movs	r1, #0
 8003838:	486f      	ldr	r0, [pc, #444]	; (80039f8 <lcd_maVoiture+0x300>)
 800383a:	f003 fd49 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 800383e:	2001      	movs	r0, #1
 8003840:	f003 f926 	bl	8006a90 <HAL_Delay>
	/*-----PIXEL 5-----*/
	uint8_t cmdPix5[13]={0x1B, 0x44, 0x0C, 0x10, 0x17, 0x17, 0x10, 0x17, 0x1D, 0x1F, 0x0F};
 8003844:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003848:	2200      	movs	r2, #0
 800384a:	601a      	str	r2, [r3, #0]
 800384c:	605a      	str	r2, [r3, #4]
 800384e:	609a      	str	r2, [r3, #8]
 8003850:	731a      	strb	r2, [r3, #12]
 8003852:	231b      	movs	r3, #27
 8003854:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 8003858:	2344      	movs	r3, #68	; 0x44
 800385a:	f887 3051 	strb.w	r3, [r7, #81]	; 0x51
 800385e:	230c      	movs	r3, #12
 8003860:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
 8003864:	2310      	movs	r3, #16
 8003866:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 800386a:	2317      	movs	r3, #23
 800386c:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 8003870:	2317      	movs	r3, #23
 8003872:	f887 3055 	strb.w	r3, [r7, #85]	; 0x55
 8003876:	2310      	movs	r3, #16
 8003878:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 800387c:	2317      	movs	r3, #23
 800387e:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 8003882:	231d      	movs	r3, #29
 8003884:	f887 3058 	strb.w	r3, [r7, #88]	; 0x58
 8003888:	231f      	movs	r3, #31
 800388a:	f887 3059 	strb.w	r3, [r7, #89]	; 0x59
 800388e:	230f      	movs	r3, #15
 8003890:	f887 305a 	strb.w	r3, [r7, #90]	; 0x5a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix5,13,100);
 8003894:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003898:	2364      	movs	r3, #100	; 0x64
 800389a:	9300      	str	r3, [sp, #0]
 800389c:	230d      	movs	r3, #13
 800389e:	2100      	movs	r1, #0
 80038a0:	4855      	ldr	r0, [pc, #340]	; (80039f8 <lcd_maVoiture+0x300>)
 80038a2:	f003 fd15 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80038a6:	2001      	movs	r0, #1
 80038a8:	f003 f8f2 	bl	8006a90 <HAL_Delay>
	/*-----PIXEL 6-----*/
	uint8_t cmdPix6[13]={0x1B, 0x44, 0x0D, 0x00, 0x1B, 0x1B, 0x00, 0x00, 0x1F, 0x1F, 0x1F};
 80038ac:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80038b0:	2200      	movs	r2, #0
 80038b2:	601a      	str	r2, [r3, #0]
 80038b4:	605a      	str	r2, [r3, #4]
 80038b6:	609a      	str	r2, [r3, #8]
 80038b8:	731a      	strb	r2, [r3, #12]
 80038ba:	231b      	movs	r3, #27
 80038bc:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 80038c0:	2344      	movs	r3, #68	; 0x44
 80038c2:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 80038c6:	230d      	movs	r3, #13
 80038c8:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 80038cc:	231b      	movs	r3, #27
 80038ce:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 80038d2:	231b      	movs	r3, #27
 80038d4:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 80038d8:	231f      	movs	r3, #31
 80038da:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
 80038de:	231f      	movs	r3, #31
 80038e0:	f887 3049 	strb.w	r3, [r7, #73]	; 0x49
 80038e4:	231f      	movs	r3, #31
 80038e6:	f887 304a 	strb.w	r3, [r7, #74]	; 0x4a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix6,13,100);
 80038ea:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80038ee:	2364      	movs	r3, #100	; 0x64
 80038f0:	9300      	str	r3, [sp, #0]
 80038f2:	230d      	movs	r3, #13
 80038f4:	2100      	movs	r1, #0
 80038f6:	4840      	ldr	r0, [pc, #256]	; (80039f8 <lcd_maVoiture+0x300>)
 80038f8:	f003 fcea 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80038fc:	2001      	movs	r0, #1
 80038fe:	f003 f8c7 	bl	8006a90 <HAL_Delay>
	/*-----PIXEL 7-----*/
	uint8_t cmdPix7[13]={0x1B, 0x44, 0x0E, 0x18, 0x08, 0x10, 0x00, 0x0E, 0x1B, 0x1F, 0x1F};
 8003902:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8003906:	2200      	movs	r2, #0
 8003908:	601a      	str	r2, [r3, #0]
 800390a:	605a      	str	r2, [r3, #4]
 800390c:	609a      	str	r2, [r3, #8]
 800390e:	731a      	strb	r2, [r3, #12]
 8003910:	231b      	movs	r3, #27
 8003912:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
 8003916:	2344      	movs	r3, #68	; 0x44
 8003918:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 800391c:	230e      	movs	r3, #14
 800391e:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
 8003922:	2318      	movs	r3, #24
 8003924:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003928:	2308      	movs	r3, #8
 800392a:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 800392e:	2310      	movs	r3, #16
 8003930:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 8003934:	230e      	movs	r3, #14
 8003936:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800393a:	231b      	movs	r3, #27
 800393c:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8003940:	231f      	movs	r3, #31
 8003942:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 8003946:	231f      	movs	r3, #31
 8003948:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix7,13,100);
 800394c:	f107 0230 	add.w	r2, r7, #48	; 0x30
 8003950:	2364      	movs	r3, #100	; 0x64
 8003952:	9300      	str	r3, [sp, #0]
 8003954:	230d      	movs	r3, #13
 8003956:	2100      	movs	r1, #0
 8003958:	4827      	ldr	r0, [pc, #156]	; (80039f8 <lcd_maVoiture+0x300>)
 800395a:	f003 fcb9 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 800395e:	2001      	movs	r0, #1
 8003960:	f003 f896 	bl	8006a90 <HAL_Delay>
	/*-----PIXEL 8-----*/
	uint8_t cmdPix8[13]={0x1B, 0x44, 0x0F, 0x08, 0x18, 0x08, 0x08, 0x18, 0x18, 0x18, 0x10};
 8003964:	f107 0320 	add.w	r3, r7, #32
 8003968:	2200      	movs	r2, #0
 800396a:	601a      	str	r2, [r3, #0]
 800396c:	605a      	str	r2, [r3, #4]
 800396e:	609a      	str	r2, [r3, #8]
 8003970:	731a      	strb	r2, [r3, #12]
 8003972:	231b      	movs	r3, #27
 8003974:	f887 3020 	strb.w	r3, [r7, #32]
 8003978:	2344      	movs	r3, #68	; 0x44
 800397a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 800397e:	230f      	movs	r3, #15
 8003980:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8003984:	2308      	movs	r3, #8
 8003986:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800398a:	2318      	movs	r3, #24
 800398c:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8003990:	2308      	movs	r3, #8
 8003992:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8003996:	2308      	movs	r3, #8
 8003998:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 800399c:	2318      	movs	r3, #24
 800399e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80039a2:	2318      	movs	r3, #24
 80039a4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80039a8:	2318      	movs	r3, #24
 80039aa:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80039ae:	2310      	movs	r3, #16
 80039b0:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPix8,13,100);
 80039b4:	f107 0220 	add.w	r2, r7, #32
 80039b8:	2364      	movs	r3, #100	; 0x64
 80039ba:	9300      	str	r3, [sp, #0]
 80039bc:	230d      	movs	r3, #13
 80039be:	2100      	movs	r1, #0
 80039c0:	480d      	ldr	r0, [pc, #52]	; (80039f8 <lcd_maVoiture+0x300>)
 80039c2:	f003 fc85 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80039c6:	2001      	movs	r0, #1
 80039c8:	f003 f862 	bl	8006a90 <HAL_Delay>

	/*----PIXELS QUE J'AI FAIT----*/
	uint8_t pix1[1]={0x08};
 80039cc:	2308      	movs	r3, #8
 80039ce:	773b      	strb	r3, [r7, #28]
	uint8_t pix2[1]={0x09};
 80039d0:	2309      	movs	r3, #9
 80039d2:	763b      	strb	r3, [r7, #24]
	uint8_t pix3[1]={0x0A};
 80039d4:	230a      	movs	r3, #10
 80039d6:	753b      	strb	r3, [r7, #20]
	uint8_t pix4[1]={0x0B};
 80039d8:	230b      	movs	r3, #11
 80039da:	743b      	strb	r3, [r7, #16]
	uint8_t pix5[1]={0x0C};
 80039dc:	230c      	movs	r3, #12
 80039de:	733b      	strb	r3, [r7, #12]
	uint8_t pix6[1]={0x0D};
 80039e0:	230d      	movs	r3, #13
 80039e2:	723b      	strb	r3, [r7, #8]
	uint8_t pix7[1]={0x0E};
 80039e4:	230e      	movs	r3, #14
 80039e6:	713b      	strb	r3, [r7, #4]
	uint8_t pix8[1]={0x0F};
 80039e8:	230f      	movs	r3, #15
 80039ea:	703b      	strb	r3, [r7, #0]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
	HAL_Delay(1);
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix8,1,100);
	HAL_Delay(1);
	*/
	for(int i = 0; i<2; i++)
 80039ec:	2300      	movs	r3, #0
 80039ee:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80039f2:	f001 be40 	b.w	8005676 <lcd_maVoiture+0x1f7e>
 80039f6:	bf00      	nop
 80039f8:	200000a4 	.word	0x200000a4
	{
		/*----ARRIVE SMOOTH DE LA VOITURE----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,pix1,1,100);
 80039fc:	2364      	movs	r3, #100	; 0x64
 80039fe:	9302      	str	r3, [sp, #8]
 8003a00:	2301      	movs	r3, #1
 8003a02:	9301      	str	r3, [sp, #4]
 8003a04:	f107 031c 	add.w	r3, r7, #28
 8003a08:	9300      	str	r3, [sp, #0]
 8003a0a:	2301      	movs	r3, #1
 8003a0c:	2203      	movs	r2, #3
 8003a0e:	2100      	movs	r1, #0
 8003a10:	48d4      	ldr	r0, [pc, #848]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003a12:	f003 ff81 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003a16:	2001      	movs	r0, #1
 8003a18:	f003 f83a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,pix5,1,100);
 8003a1c:	2364      	movs	r3, #100	; 0x64
 8003a1e:	9302      	str	r3, [sp, #8]
 8003a20:	2301      	movs	r3, #1
 8003a22:	9301      	str	r3, [sp, #4]
 8003a24:	f107 030c 	add.w	r3, r7, #12
 8003a28:	9300      	str	r3, [sp, #0]
 8003a2a:	2301      	movs	r3, #1
 8003a2c:	2204      	movs	r2, #4
 8003a2e:	2100      	movs	r1, #0
 8003a30:	48cc      	ldr	r0, [pc, #816]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003a32:	f003 ff71 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(100);
 8003a36:	2064      	movs	r0, #100	; 0x64
 8003a38:	f003 f82a 	bl	8006a90 <HAL_Delay>
		/*------------------------------------------------*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,pix1,1,100);
 8003a3c:	2364      	movs	r3, #100	; 0x64
 8003a3e:	9302      	str	r3, [sp, #8]
 8003a40:	2301      	movs	r3, #1
 8003a42:	9301      	str	r3, [sp, #4]
 8003a44:	f107 031c 	add.w	r3, r7, #28
 8003a48:	9300      	str	r3, [sp, #0]
 8003a4a:	2301      	movs	r3, #1
 8003a4c:	2203      	movs	r2, #3
 8003a4e:	2100      	movs	r1, #0
 8003a50:	48c4      	ldr	r0, [pc, #784]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003a52:	f003 ff61 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003a56:	2001      	movs	r0, #1
 8003a58:	f003 f81a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 8003a5c:	f107 0218 	add.w	r2, r7, #24
 8003a60:	2364      	movs	r3, #100	; 0x64
 8003a62:	9300      	str	r3, [sp, #0]
 8003a64:	2301      	movs	r3, #1
 8003a66:	2100      	movs	r1, #0
 8003a68:	48be      	ldr	r0, [pc, #760]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003a6a:	f003 fc31 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003a6e:	2001      	movs	r0, #1
 8003a70:	f003 f80e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,pix5,1,100);
 8003a74:	2364      	movs	r3, #100	; 0x64
 8003a76:	9302      	str	r3, [sp, #8]
 8003a78:	2301      	movs	r3, #1
 8003a7a:	9301      	str	r3, [sp, #4]
 8003a7c:	f107 030c 	add.w	r3, r7, #12
 8003a80:	9300      	str	r3, [sp, #0]
 8003a82:	2301      	movs	r3, #1
 8003a84:	2204      	movs	r2, #4
 8003a86:	2100      	movs	r1, #0
 8003a88:	48b6      	ldr	r0, [pc, #728]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003a8a:	f003 ff45 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003a8e:	2001      	movs	r0, #1
 8003a90:	f002 fffe 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8003a94:	f107 0208 	add.w	r2, r7, #8
 8003a98:	2364      	movs	r3, #100	; 0x64
 8003a9a:	9300      	str	r3, [sp, #0]
 8003a9c:	2301      	movs	r3, #1
 8003a9e:	2100      	movs	r1, #0
 8003aa0:	48b0      	ldr	r0, [pc, #704]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003aa2:	f003 fc15 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 8003aa6:	2064      	movs	r0, #100	; 0x64
 8003aa8:	f002 fff2 	bl	8006a90 <HAL_Delay>
		/*------------------------------------------------*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,pix1,1,100);
 8003aac:	2364      	movs	r3, #100	; 0x64
 8003aae:	9302      	str	r3, [sp, #8]
 8003ab0:	2301      	movs	r3, #1
 8003ab2:	9301      	str	r3, [sp, #4]
 8003ab4:	f107 031c 	add.w	r3, r7, #28
 8003ab8:	9300      	str	r3, [sp, #0]
 8003aba:	2301      	movs	r3, #1
 8003abc:	2203      	movs	r2, #3
 8003abe:	2100      	movs	r1, #0
 8003ac0:	48a8      	ldr	r0, [pc, #672]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003ac2:	f003 ff29 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003ac6:	2001      	movs	r0, #1
 8003ac8:	f002 ffe2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 8003acc:	f107 0218 	add.w	r2, r7, #24
 8003ad0:	2364      	movs	r3, #100	; 0x64
 8003ad2:	9300      	str	r3, [sp, #0]
 8003ad4:	2301      	movs	r3, #1
 8003ad6:	2100      	movs	r1, #0
 8003ad8:	48a2      	ldr	r0, [pc, #648]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003ada:	f003 fbf9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003ade:	2001      	movs	r0, #1
 8003ae0:	f002 ffd6 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix3,1,100);
 8003ae4:	f107 0214 	add.w	r2, r7, #20
 8003ae8:	2364      	movs	r3, #100	; 0x64
 8003aea:	9300      	str	r3, [sp, #0]
 8003aec:	2301      	movs	r3, #1
 8003aee:	2100      	movs	r1, #0
 8003af0:	489c      	ldr	r0, [pc, #624]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003af2:	f003 fbed 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003af6:	2001      	movs	r0, #1
 8003af8:	f002 ffca 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,pix5,1,100);
 8003afc:	2364      	movs	r3, #100	; 0x64
 8003afe:	9302      	str	r3, [sp, #8]
 8003b00:	2301      	movs	r3, #1
 8003b02:	9301      	str	r3, [sp, #4]
 8003b04:	f107 030c 	add.w	r3, r7, #12
 8003b08:	9300      	str	r3, [sp, #0]
 8003b0a:	2301      	movs	r3, #1
 8003b0c:	2204      	movs	r2, #4
 8003b0e:	2100      	movs	r1, #0
 8003b10:	4894      	ldr	r0, [pc, #592]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003b12:	f003 ff01 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003b16:	2001      	movs	r0, #1
 8003b18:	f002 ffba 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8003b1c:	f107 0208 	add.w	r2, r7, #8
 8003b20:	2364      	movs	r3, #100	; 0x64
 8003b22:	9300      	str	r3, [sp, #0]
 8003b24:	2301      	movs	r3, #1
 8003b26:	2100      	movs	r1, #0
 8003b28:	488e      	ldr	r0, [pc, #568]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003b2a:	f003 fbd1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003b2e:	2001      	movs	r0, #1
 8003b30:	f002 ffae 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
 8003b34:	1d3a      	adds	r2, r7, #4
 8003b36:	2364      	movs	r3, #100	; 0x64
 8003b38:	9300      	str	r3, [sp, #0]
 8003b3a:	2301      	movs	r3, #1
 8003b3c:	2100      	movs	r1, #0
 8003b3e:	4889      	ldr	r0, [pc, #548]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003b40:	f003 fbc6 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 8003b44:	2064      	movs	r0, #100	; 0x64
 8003b46:	f002 ffa3 	bl	8006a90 <HAL_Delay>
		/*------------------------------------------------*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,pix1,1,100);
 8003b4a:	2364      	movs	r3, #100	; 0x64
 8003b4c:	9302      	str	r3, [sp, #8]
 8003b4e:	2301      	movs	r3, #1
 8003b50:	9301      	str	r3, [sp, #4]
 8003b52:	f107 031c 	add.w	r3, r7, #28
 8003b56:	9300      	str	r3, [sp, #0]
 8003b58:	2301      	movs	r3, #1
 8003b5a:	2203      	movs	r2, #3
 8003b5c:	2100      	movs	r1, #0
 8003b5e:	4881      	ldr	r0, [pc, #516]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003b60:	f003 feda 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003b64:	2001      	movs	r0, #1
 8003b66:	f002 ff93 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 8003b6a:	f107 0218 	add.w	r2, r7, #24
 8003b6e:	2364      	movs	r3, #100	; 0x64
 8003b70:	9300      	str	r3, [sp, #0]
 8003b72:	2301      	movs	r3, #1
 8003b74:	2100      	movs	r1, #0
 8003b76:	487b      	ldr	r0, [pc, #492]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003b78:	f003 fbaa 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003b7c:	2001      	movs	r0, #1
 8003b7e:	f002 ff87 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix3,1,100);
 8003b82:	f107 0214 	add.w	r2, r7, #20
 8003b86:	2364      	movs	r3, #100	; 0x64
 8003b88:	9300      	str	r3, [sp, #0]
 8003b8a:	2301      	movs	r3, #1
 8003b8c:	2100      	movs	r1, #0
 8003b8e:	4875      	ldr	r0, [pc, #468]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003b90:	f003 fb9e 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003b94:	2001      	movs	r0, #1
 8003b96:	f002 ff7b 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix4,1,100);
 8003b9a:	f107 0210 	add.w	r2, r7, #16
 8003b9e:	2364      	movs	r3, #100	; 0x64
 8003ba0:	9300      	str	r3, [sp, #0]
 8003ba2:	2301      	movs	r3, #1
 8003ba4:	2100      	movs	r1, #0
 8003ba6:	486f      	ldr	r0, [pc, #444]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003ba8:	f003 fb92 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003bac:	2001      	movs	r0, #1
 8003bae:	f002 ff6f 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,pix5,1,100);
 8003bb2:	2364      	movs	r3, #100	; 0x64
 8003bb4:	9302      	str	r3, [sp, #8]
 8003bb6:	2301      	movs	r3, #1
 8003bb8:	9301      	str	r3, [sp, #4]
 8003bba:	f107 030c 	add.w	r3, r7, #12
 8003bbe:	9300      	str	r3, [sp, #0]
 8003bc0:	2301      	movs	r3, #1
 8003bc2:	2204      	movs	r2, #4
 8003bc4:	2100      	movs	r1, #0
 8003bc6:	4867      	ldr	r0, [pc, #412]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003bc8:	f003 fea6 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003bcc:	2001      	movs	r0, #1
 8003bce:	f002 ff5f 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8003bd2:	f107 0208 	add.w	r2, r7, #8
 8003bd6:	2364      	movs	r3, #100	; 0x64
 8003bd8:	9300      	str	r3, [sp, #0]
 8003bda:	2301      	movs	r3, #1
 8003bdc:	2100      	movs	r1, #0
 8003bde:	4861      	ldr	r0, [pc, #388]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003be0:	f003 fb76 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003be4:	2001      	movs	r0, #1
 8003be6:	f002 ff53 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
 8003bea:	1d3a      	adds	r2, r7, #4
 8003bec:	2364      	movs	r3, #100	; 0x64
 8003bee:	9300      	str	r3, [sp, #0]
 8003bf0:	2301      	movs	r3, #1
 8003bf2:	2100      	movs	r1, #0
 8003bf4:	485b      	ldr	r0, [pc, #364]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003bf6:	f003 fb6b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003bfa:	2001      	movs	r0, #1
 8003bfc:	f002 ff48 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix8,1,100);
 8003c00:	463a      	mov	r2, r7
 8003c02:	2364      	movs	r3, #100	; 0x64
 8003c04:	9300      	str	r3, [sp, #0]
 8003c06:	2301      	movs	r3, #1
 8003c08:	2100      	movs	r1, #0
 8003c0a:	4856      	ldr	r0, [pc, #344]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003c0c:	f003 fb60 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 8003c10:	2064      	movs	r0, #100	; 0x64
 8003c12:	f002 ff3d 	bl	8006a90 <HAL_Delay>

		/*----ON VAS MAINTENANT FAIRE AVANCER 1 FOIS LA VOITURE----*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8003c16:	2364      	movs	r3, #100	; 0x64
 8003c18:	9302      	str	r3, [sp, #8]
 8003c1a:	2301      	movs	r3, #1
 8003c1c:	9301      	str	r3, [sp, #4]
 8003c1e:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8003c22:	9300      	str	r3, [sp, #0]
 8003c24:	2301      	movs	r3, #1
 8003c26:	2203      	movs	r2, #3
 8003c28:	2100      	movs	r1, #0
 8003c2a:	484e      	ldr	r0, [pc, #312]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003c2c:	f003 fe74 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003c30:	2001      	movs	r0, #1
 8003c32:	f002 ff2d 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003c36:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003c3a:	2364      	movs	r3, #100	; 0x64
 8003c3c:	9300      	str	r3, [sp, #0]
 8003c3e:	2301      	movs	r3, #1
 8003c40:	2100      	movs	r1, #0
 8003c42:	4848      	ldr	r0, [pc, #288]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003c44:	f003 fb44 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003c48:	2001      	movs	r0, #1
 8003c4a:	f002 ff21 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003c4e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003c52:	2364      	movs	r3, #100	; 0x64
 8003c54:	9300      	str	r3, [sp, #0]
 8003c56:	2301      	movs	r3, #1
 8003c58:	2100      	movs	r1, #0
 8003c5a:	4842      	ldr	r0, [pc, #264]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003c5c:	f003 fb38 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003c60:	2001      	movs	r0, #1
 8003c62:	f002 ff15 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003c66:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003c6a:	2364      	movs	r3, #100	; 0x64
 8003c6c:	9300      	str	r3, [sp, #0]
 8003c6e:	2301      	movs	r3, #1
 8003c70:	2100      	movs	r1, #0
 8003c72:	483c      	ldr	r0, [pc, #240]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003c74:	f003 fb2c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003c78:	2001      	movs	r0, #1
 8003c7a:	f002 ff09 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix1,1,100);
 8003c7e:	f107 021c 	add.w	r2, r7, #28
 8003c82:	2364      	movs	r3, #100	; 0x64
 8003c84:	9300      	str	r3, [sp, #0]
 8003c86:	2301      	movs	r3, #1
 8003c88:	2100      	movs	r1, #0
 8003c8a:	4836      	ldr	r0, [pc, #216]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003c8c:	f003 fb20 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003c90:	2001      	movs	r0, #1
 8003c92:	f002 fefd 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 8003c96:	f107 0218 	add.w	r2, r7, #24
 8003c9a:	2364      	movs	r3, #100	; 0x64
 8003c9c:	9300      	str	r3, [sp, #0]
 8003c9e:	2301      	movs	r3, #1
 8003ca0:	2100      	movs	r1, #0
 8003ca2:	4830      	ldr	r0, [pc, #192]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003ca4:	f003 fb14 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003ca8:	2001      	movs	r0, #1
 8003caa:	f002 fef1 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix3,1,100);
 8003cae:	f107 0214 	add.w	r2, r7, #20
 8003cb2:	2364      	movs	r3, #100	; 0x64
 8003cb4:	9300      	str	r3, [sp, #0]
 8003cb6:	2301      	movs	r3, #1
 8003cb8:	2100      	movs	r1, #0
 8003cba:	482a      	ldr	r0, [pc, #168]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003cbc:	f003 fb08 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003cc0:	2001      	movs	r0, #1
 8003cc2:	f002 fee5 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix4,1,100);
 8003cc6:	f107 0210 	add.w	r2, r7, #16
 8003cca:	2364      	movs	r3, #100	; 0x64
 8003ccc:	9300      	str	r3, [sp, #0]
 8003cce:	2301      	movs	r3, #1
 8003cd0:	2100      	movs	r1, #0
 8003cd2:	4824      	ldr	r0, [pc, #144]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003cd4:	f003 fafc 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003cd8:	2001      	movs	r0, #1
 8003cda:	f002 fed9 	bl	8006a90 <HAL_Delay>

		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 8003cde:	2364      	movs	r3, #100	; 0x64
 8003ce0:	9302      	str	r3, [sp, #8]
 8003ce2:	2301      	movs	r3, #1
 8003ce4:	9301      	str	r3, [sp, #4]
 8003ce6:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8003cea:	9300      	str	r3, [sp, #0]
 8003cec:	2301      	movs	r3, #1
 8003cee:	2204      	movs	r2, #4
 8003cf0:	2100      	movs	r1, #0
 8003cf2:	481c      	ldr	r0, [pc, #112]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003cf4:	f003 fe10 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003cf8:	2001      	movs	r0, #1
 8003cfa:	f002 fec9 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003cfe:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003d02:	2364      	movs	r3, #100	; 0x64
 8003d04:	9300      	str	r3, [sp, #0]
 8003d06:	2301      	movs	r3, #1
 8003d08:	2100      	movs	r1, #0
 8003d0a:	4816      	ldr	r0, [pc, #88]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003d0c:	f003 fae0 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003d10:	2001      	movs	r0, #1
 8003d12:	f002 febd 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003d16:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003d1a:	2364      	movs	r3, #100	; 0x64
 8003d1c:	9300      	str	r3, [sp, #0]
 8003d1e:	2301      	movs	r3, #1
 8003d20:	2100      	movs	r1, #0
 8003d22:	4810      	ldr	r0, [pc, #64]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003d24:	f003 fad4 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003d28:	2001      	movs	r0, #1
 8003d2a:	f002 feb1 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003d2e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003d32:	2364      	movs	r3, #100	; 0x64
 8003d34:	9300      	str	r3, [sp, #0]
 8003d36:	2301      	movs	r3, #1
 8003d38:	2100      	movs	r1, #0
 8003d3a:	480a      	ldr	r0, [pc, #40]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003d3c:	f003 fac8 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003d40:	2001      	movs	r0, #1
 8003d42:	f002 fea5 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix5,1,100);
 8003d46:	f107 020c 	add.w	r2, r7, #12
 8003d4a:	2364      	movs	r3, #100	; 0x64
 8003d4c:	9300      	str	r3, [sp, #0]
 8003d4e:	2301      	movs	r3, #1
 8003d50:	2100      	movs	r1, #0
 8003d52:	4804      	ldr	r0, [pc, #16]	; (8003d64 <lcd_maVoiture+0x66c>)
 8003d54:	f003 fabc 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003d58:	2001      	movs	r0, #1
 8003d5a:	f002 fe99 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8003d5e:	f107 0208 	add.w	r2, r7, #8
 8003d62:	e001      	b.n	8003d68 <lcd_maVoiture+0x670>
 8003d64:	200000a4 	.word	0x200000a4
 8003d68:	2364      	movs	r3, #100	; 0x64
 8003d6a:	9300      	str	r3, [sp, #0]
 8003d6c:	2301      	movs	r3, #1
 8003d6e:	2100      	movs	r1, #0
 8003d70:	48d6      	ldr	r0, [pc, #856]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003d72:	f003 faad 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003d76:	2001      	movs	r0, #1
 8003d78:	f002 fe8a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
 8003d7c:	1d3a      	adds	r2, r7, #4
 8003d7e:	2364      	movs	r3, #100	; 0x64
 8003d80:	9300      	str	r3, [sp, #0]
 8003d82:	2301      	movs	r3, #1
 8003d84:	2100      	movs	r1, #0
 8003d86:	48d1      	ldr	r0, [pc, #836]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003d88:	f003 faa2 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003d8c:	2001      	movs	r0, #1
 8003d8e:	f002 fe7f 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix8,1,100);
 8003d92:	463a      	mov	r2, r7
 8003d94:	2364      	movs	r3, #100	; 0x64
 8003d96:	9300      	str	r3, [sp, #0]
 8003d98:	2301      	movs	r3, #1
 8003d9a:	2100      	movs	r1, #0
 8003d9c:	48cb      	ldr	r0, [pc, #812]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003d9e:	f003 fa97 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 8003da2:	2064      	movs	r0, #100	; 0x64
 8003da4:	f002 fe74 	bl	8006a90 <HAL_Delay>

		/*----ON VAS MAINTENANT FAIRE AVANCER 2 FOIS LA VOITURE----*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8003da8:	2364      	movs	r3, #100	; 0x64
 8003daa:	9302      	str	r3, [sp, #8]
 8003dac:	2301      	movs	r3, #1
 8003dae:	9301      	str	r3, [sp, #4]
 8003db0:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8003db4:	9300      	str	r3, [sp, #0]
 8003db6:	2301      	movs	r3, #1
 8003db8:	2203      	movs	r2, #3
 8003dba:	2100      	movs	r1, #0
 8003dbc:	48c3      	ldr	r0, [pc, #780]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003dbe:	f003 fdab 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003dc2:	2001      	movs	r0, #1
 8003dc4:	f002 fe64 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003dc8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003dcc:	2364      	movs	r3, #100	; 0x64
 8003dce:	9300      	str	r3, [sp, #0]
 8003dd0:	2301      	movs	r3, #1
 8003dd2:	2100      	movs	r1, #0
 8003dd4:	48bd      	ldr	r0, [pc, #756]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003dd6:	f003 fa7b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003dda:	2001      	movs	r0, #1
 8003ddc:	f002 fe58 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003de0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003de4:	2364      	movs	r3, #100	; 0x64
 8003de6:	9300      	str	r3, [sp, #0]
 8003de8:	2301      	movs	r3, #1
 8003dea:	2100      	movs	r1, #0
 8003dec:	48b7      	ldr	r0, [pc, #732]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003dee:	f003 fa6f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003df2:	2001      	movs	r0, #1
 8003df4:	f002 fe4c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003df8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003dfc:	2364      	movs	r3, #100	; 0x64
 8003dfe:	9300      	str	r3, [sp, #0]
 8003e00:	2301      	movs	r3, #1
 8003e02:	2100      	movs	r1, #0
 8003e04:	48b1      	ldr	r0, [pc, #708]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003e06:	f003 fa63 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003e0a:	2001      	movs	r0, #1
 8003e0c:	f002 fe40 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003e10:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003e14:	2364      	movs	r3, #100	; 0x64
 8003e16:	9300      	str	r3, [sp, #0]
 8003e18:	2301      	movs	r3, #1
 8003e1a:	2100      	movs	r1, #0
 8003e1c:	48ab      	ldr	r0, [pc, #684]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003e1e:	f003 fa57 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003e22:	2001      	movs	r0, #1
 8003e24:	f002 fe34 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003e28:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003e2c:	2364      	movs	r3, #100	; 0x64
 8003e2e:	9300      	str	r3, [sp, #0]
 8003e30:	2301      	movs	r3, #1
 8003e32:	2100      	movs	r1, #0
 8003e34:	48a5      	ldr	r0, [pc, #660]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003e36:	f003 fa4b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003e3a:	2001      	movs	r0, #1
 8003e3c:	f002 fe28 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003e40:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003e44:	2364      	movs	r3, #100	; 0x64
 8003e46:	9300      	str	r3, [sp, #0]
 8003e48:	2301      	movs	r3, #1
 8003e4a:	2100      	movs	r1, #0
 8003e4c:	489f      	ldr	r0, [pc, #636]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003e4e:	f003 fa3f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003e52:	2001      	movs	r0, #1
 8003e54:	f002 fe1c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003e58:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003e5c:	2364      	movs	r3, #100	; 0x64
 8003e5e:	9300      	str	r3, [sp, #0]
 8003e60:	2301      	movs	r3, #1
 8003e62:	2100      	movs	r1, #0
 8003e64:	4899      	ldr	r0, [pc, #612]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003e66:	f003 fa33 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003e6a:	2001      	movs	r0, #1
 8003e6c:	f002 fe10 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix1,1,100);
 8003e70:	f107 021c 	add.w	r2, r7, #28
 8003e74:	2364      	movs	r3, #100	; 0x64
 8003e76:	9300      	str	r3, [sp, #0]
 8003e78:	2301      	movs	r3, #1
 8003e7a:	2100      	movs	r1, #0
 8003e7c:	4893      	ldr	r0, [pc, #588]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003e7e:	f003 fa27 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003e82:	2001      	movs	r0, #1
 8003e84:	f002 fe04 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 8003e88:	f107 0218 	add.w	r2, r7, #24
 8003e8c:	2364      	movs	r3, #100	; 0x64
 8003e8e:	9300      	str	r3, [sp, #0]
 8003e90:	2301      	movs	r3, #1
 8003e92:	2100      	movs	r1, #0
 8003e94:	488d      	ldr	r0, [pc, #564]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003e96:	f003 fa1b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003e9a:	2001      	movs	r0, #1
 8003e9c:	f002 fdf8 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix3,1,100);
 8003ea0:	f107 0214 	add.w	r2, r7, #20
 8003ea4:	2364      	movs	r3, #100	; 0x64
 8003ea6:	9300      	str	r3, [sp, #0]
 8003ea8:	2301      	movs	r3, #1
 8003eaa:	2100      	movs	r1, #0
 8003eac:	4887      	ldr	r0, [pc, #540]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003eae:	f003 fa0f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003eb2:	2001      	movs	r0, #1
 8003eb4:	f002 fdec 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix4,1,100);
 8003eb8:	f107 0210 	add.w	r2, r7, #16
 8003ebc:	2364      	movs	r3, #100	; 0x64
 8003ebe:	9300      	str	r3, [sp, #0]
 8003ec0:	2301      	movs	r3, #1
 8003ec2:	2100      	movs	r1, #0
 8003ec4:	4881      	ldr	r0, [pc, #516]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003ec6:	f003 fa03 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003eca:	2001      	movs	r0, #1
 8003ecc:	f002 fde0 	bl	8006a90 <HAL_Delay>

		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 8003ed0:	2364      	movs	r3, #100	; 0x64
 8003ed2:	9302      	str	r3, [sp, #8]
 8003ed4:	2301      	movs	r3, #1
 8003ed6:	9301      	str	r3, [sp, #4]
 8003ed8:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8003edc:	9300      	str	r3, [sp, #0]
 8003ede:	2301      	movs	r3, #1
 8003ee0:	2204      	movs	r2, #4
 8003ee2:	2100      	movs	r1, #0
 8003ee4:	4879      	ldr	r0, [pc, #484]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003ee6:	f003 fd17 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8003eea:	2001      	movs	r0, #1
 8003eec:	f002 fdd0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003ef0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003ef4:	2364      	movs	r3, #100	; 0x64
 8003ef6:	9300      	str	r3, [sp, #0]
 8003ef8:	2301      	movs	r3, #1
 8003efa:	2100      	movs	r1, #0
 8003efc:	4873      	ldr	r0, [pc, #460]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003efe:	f003 f9e7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003f02:	2001      	movs	r0, #1
 8003f04:	f002 fdc4 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003f08:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003f0c:	2364      	movs	r3, #100	; 0x64
 8003f0e:	9300      	str	r3, [sp, #0]
 8003f10:	2301      	movs	r3, #1
 8003f12:	2100      	movs	r1, #0
 8003f14:	486d      	ldr	r0, [pc, #436]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003f16:	f003 f9db 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003f1a:	2001      	movs	r0, #1
 8003f1c:	f002 fdb8 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003f20:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003f24:	2364      	movs	r3, #100	; 0x64
 8003f26:	9300      	str	r3, [sp, #0]
 8003f28:	2301      	movs	r3, #1
 8003f2a:	2100      	movs	r1, #0
 8003f2c:	4867      	ldr	r0, [pc, #412]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003f2e:	f003 f9cf 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003f32:	2001      	movs	r0, #1
 8003f34:	f002 fdac 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003f38:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003f3c:	2364      	movs	r3, #100	; 0x64
 8003f3e:	9300      	str	r3, [sp, #0]
 8003f40:	2301      	movs	r3, #1
 8003f42:	2100      	movs	r1, #0
 8003f44:	4861      	ldr	r0, [pc, #388]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003f46:	f003 f9c3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003f4a:	2001      	movs	r0, #1
 8003f4c:	f002 fda0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003f50:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003f54:	2364      	movs	r3, #100	; 0x64
 8003f56:	9300      	str	r3, [sp, #0]
 8003f58:	2301      	movs	r3, #1
 8003f5a:	2100      	movs	r1, #0
 8003f5c:	485b      	ldr	r0, [pc, #364]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003f5e:	f003 f9b7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003f62:	2001      	movs	r0, #1
 8003f64:	f002 fd94 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003f68:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003f6c:	2364      	movs	r3, #100	; 0x64
 8003f6e:	9300      	str	r3, [sp, #0]
 8003f70:	2301      	movs	r3, #1
 8003f72:	2100      	movs	r1, #0
 8003f74:	4855      	ldr	r0, [pc, #340]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003f76:	f003 f9ab 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003f7a:	2001      	movs	r0, #1
 8003f7c:	f002 fd88 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8003f80:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8003f84:	2364      	movs	r3, #100	; 0x64
 8003f86:	9300      	str	r3, [sp, #0]
 8003f88:	2301      	movs	r3, #1
 8003f8a:	2100      	movs	r1, #0
 8003f8c:	484f      	ldr	r0, [pc, #316]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003f8e:	f003 f99f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003f92:	2001      	movs	r0, #1
 8003f94:	f002 fd7c 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix5,1,100);
 8003f98:	f107 020c 	add.w	r2, r7, #12
 8003f9c:	2364      	movs	r3, #100	; 0x64
 8003f9e:	9300      	str	r3, [sp, #0]
 8003fa0:	2301      	movs	r3, #1
 8003fa2:	2100      	movs	r1, #0
 8003fa4:	4849      	ldr	r0, [pc, #292]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003fa6:	f003 f993 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003faa:	2001      	movs	r0, #1
 8003fac:	f002 fd70 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8003fb0:	f107 0208 	add.w	r2, r7, #8
 8003fb4:	2364      	movs	r3, #100	; 0x64
 8003fb6:	9300      	str	r3, [sp, #0]
 8003fb8:	2301      	movs	r3, #1
 8003fba:	2100      	movs	r1, #0
 8003fbc:	4843      	ldr	r0, [pc, #268]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003fbe:	f003 f987 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003fc2:	2001      	movs	r0, #1
 8003fc4:	f002 fd64 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
 8003fc8:	1d3a      	adds	r2, r7, #4
 8003fca:	2364      	movs	r3, #100	; 0x64
 8003fcc:	9300      	str	r3, [sp, #0]
 8003fce:	2301      	movs	r3, #1
 8003fd0:	2100      	movs	r1, #0
 8003fd2:	483e      	ldr	r0, [pc, #248]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003fd4:	f003 f97c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8003fd8:	2001      	movs	r0, #1
 8003fda:	f002 fd59 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix8,1,100);
 8003fde:	463a      	mov	r2, r7
 8003fe0:	2364      	movs	r3, #100	; 0x64
 8003fe2:	9300      	str	r3, [sp, #0]
 8003fe4:	2301      	movs	r3, #1
 8003fe6:	2100      	movs	r1, #0
 8003fe8:	4838      	ldr	r0, [pc, #224]	; (80040cc <lcd_maVoiture+0x9d4>)
 8003fea:	f003 f971 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(2000);
 8003fee:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8003ff2:	f002 fd4d 	bl	8006a90 <HAL_Delay>

		/*----ON VAS MAINTENANT FAIRE AVANCER 3 FOIS LA VOITURE----*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8003ff6:	2364      	movs	r3, #100	; 0x64
 8003ff8:	9302      	str	r3, [sp, #8]
 8003ffa:	2301      	movs	r3, #1
 8003ffc:	9301      	str	r3, [sp, #4]
 8003ffe:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8004002:	9300      	str	r3, [sp, #0]
 8004004:	2301      	movs	r3, #1
 8004006:	2203      	movs	r2, #3
 8004008:	2100      	movs	r1, #0
 800400a:	4830      	ldr	r0, [pc, #192]	; (80040cc <lcd_maVoiture+0x9d4>)
 800400c:	f003 fc84 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8004010:	2001      	movs	r0, #1
 8004012:	f002 fd3d 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004016:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800401a:	2364      	movs	r3, #100	; 0x64
 800401c:	9300      	str	r3, [sp, #0]
 800401e:	2301      	movs	r3, #1
 8004020:	2100      	movs	r1, #0
 8004022:	482a      	ldr	r0, [pc, #168]	; (80040cc <lcd_maVoiture+0x9d4>)
 8004024:	f003 f954 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004028:	2001      	movs	r0, #1
 800402a:	f002 fd31 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800402e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004032:	2364      	movs	r3, #100	; 0x64
 8004034:	9300      	str	r3, [sp, #0]
 8004036:	2301      	movs	r3, #1
 8004038:	2100      	movs	r1, #0
 800403a:	4824      	ldr	r0, [pc, #144]	; (80040cc <lcd_maVoiture+0x9d4>)
 800403c:	f003 f948 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004040:	2001      	movs	r0, #1
 8004042:	f002 fd25 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004046:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800404a:	2364      	movs	r3, #100	; 0x64
 800404c:	9300      	str	r3, [sp, #0]
 800404e:	2301      	movs	r3, #1
 8004050:	2100      	movs	r1, #0
 8004052:	481e      	ldr	r0, [pc, #120]	; (80040cc <lcd_maVoiture+0x9d4>)
 8004054:	f003 f93c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004058:	2001      	movs	r0, #1
 800405a:	f002 fd19 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800405e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004062:	2364      	movs	r3, #100	; 0x64
 8004064:	9300      	str	r3, [sp, #0]
 8004066:	2301      	movs	r3, #1
 8004068:	2100      	movs	r1, #0
 800406a:	4818      	ldr	r0, [pc, #96]	; (80040cc <lcd_maVoiture+0x9d4>)
 800406c:	f003 f930 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004070:	2001      	movs	r0, #1
 8004072:	f002 fd0d 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004076:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800407a:	2364      	movs	r3, #100	; 0x64
 800407c:	9300      	str	r3, [sp, #0]
 800407e:	2301      	movs	r3, #1
 8004080:	2100      	movs	r1, #0
 8004082:	4812      	ldr	r0, [pc, #72]	; (80040cc <lcd_maVoiture+0x9d4>)
 8004084:	f003 f924 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004088:	2001      	movs	r0, #1
 800408a:	f002 fd01 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800408e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004092:	2364      	movs	r3, #100	; 0x64
 8004094:	9300      	str	r3, [sp, #0]
 8004096:	2301      	movs	r3, #1
 8004098:	2100      	movs	r1, #0
 800409a:	480c      	ldr	r0, [pc, #48]	; (80040cc <lcd_maVoiture+0x9d4>)
 800409c:	f003 f918 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80040a0:	2001      	movs	r0, #1
 80040a2:	f002 fcf5 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80040a6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80040aa:	2364      	movs	r3, #100	; 0x64
 80040ac:	9300      	str	r3, [sp, #0]
 80040ae:	2301      	movs	r3, #1
 80040b0:	2100      	movs	r1, #0
 80040b2:	4806      	ldr	r0, [pc, #24]	; (80040cc <lcd_maVoiture+0x9d4>)
 80040b4:	f003 f90c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80040b8:	2001      	movs	r0, #1
 80040ba:	f002 fce9 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80040be:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80040c2:	2364      	movs	r3, #100	; 0x64
 80040c4:	9300      	str	r3, [sp, #0]
 80040c6:	2301      	movs	r3, #1
 80040c8:	2100      	movs	r1, #0
 80040ca:	e001      	b.n	80040d0 <lcd_maVoiture+0x9d8>
 80040cc:	200000a4 	.word	0x200000a4
 80040d0:	48d8      	ldr	r0, [pc, #864]	; (8004434 <lcd_maVoiture+0xd3c>)
 80040d2:	f003 f8fd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80040d6:	2001      	movs	r0, #1
 80040d8:	f002 fcda 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80040dc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80040e0:	2364      	movs	r3, #100	; 0x64
 80040e2:	9300      	str	r3, [sp, #0]
 80040e4:	2301      	movs	r3, #1
 80040e6:	2100      	movs	r1, #0
 80040e8:	48d2      	ldr	r0, [pc, #840]	; (8004434 <lcd_maVoiture+0xd3c>)
 80040ea:	f003 f8f1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80040ee:	2001      	movs	r0, #1
 80040f0:	f002 fcce 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80040f4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80040f8:	2364      	movs	r3, #100	; 0x64
 80040fa:	9300      	str	r3, [sp, #0]
 80040fc:	2301      	movs	r3, #1
 80040fe:	2100      	movs	r1, #0
 8004100:	48cc      	ldr	r0, [pc, #816]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004102:	f003 f8e5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004106:	2001      	movs	r0, #1
 8004108:	f002 fcc2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800410c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004110:	2364      	movs	r3, #100	; 0x64
 8004112:	9300      	str	r3, [sp, #0]
 8004114:	2301      	movs	r3, #1
 8004116:	2100      	movs	r1, #0
 8004118:	48c6      	ldr	r0, [pc, #792]	; (8004434 <lcd_maVoiture+0xd3c>)
 800411a:	f003 f8d9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800411e:	2001      	movs	r0, #1
 8004120:	f002 fcb6 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix1,1,100);
 8004124:	f107 021c 	add.w	r2, r7, #28
 8004128:	2364      	movs	r3, #100	; 0x64
 800412a:	9300      	str	r3, [sp, #0]
 800412c:	2301      	movs	r3, #1
 800412e:	2100      	movs	r1, #0
 8004130:	48c0      	ldr	r0, [pc, #768]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004132:	f003 f8cd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004136:	2001      	movs	r0, #1
 8004138:	f002 fcaa 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 800413c:	f107 0218 	add.w	r2, r7, #24
 8004140:	2364      	movs	r3, #100	; 0x64
 8004142:	9300      	str	r3, [sp, #0]
 8004144:	2301      	movs	r3, #1
 8004146:	2100      	movs	r1, #0
 8004148:	48ba      	ldr	r0, [pc, #744]	; (8004434 <lcd_maVoiture+0xd3c>)
 800414a:	f003 f8c1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800414e:	2001      	movs	r0, #1
 8004150:	f002 fc9e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix3,1,100);
 8004154:	f107 0214 	add.w	r2, r7, #20
 8004158:	2364      	movs	r3, #100	; 0x64
 800415a:	9300      	str	r3, [sp, #0]
 800415c:	2301      	movs	r3, #1
 800415e:	2100      	movs	r1, #0
 8004160:	48b4      	ldr	r0, [pc, #720]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004162:	f003 f8b5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004166:	2001      	movs	r0, #1
 8004168:	f002 fc92 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix4,1,100);
 800416c:	f107 0210 	add.w	r2, r7, #16
 8004170:	2364      	movs	r3, #100	; 0x64
 8004172:	9300      	str	r3, [sp, #0]
 8004174:	2301      	movs	r3, #1
 8004176:	2100      	movs	r1, #0
 8004178:	48ae      	ldr	r0, [pc, #696]	; (8004434 <lcd_maVoiture+0xd3c>)
 800417a:	f003 f8a9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800417e:	2001      	movs	r0, #1
 8004180:	f002 fc86 	bl	8006a90 <HAL_Delay>

		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 8004184:	2364      	movs	r3, #100	; 0x64
 8004186:	9302      	str	r3, [sp, #8]
 8004188:	2301      	movs	r3, #1
 800418a:	9301      	str	r3, [sp, #4]
 800418c:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8004190:	9300      	str	r3, [sp, #0]
 8004192:	2301      	movs	r3, #1
 8004194:	2204      	movs	r2, #4
 8004196:	2100      	movs	r1, #0
 8004198:	48a6      	ldr	r0, [pc, #664]	; (8004434 <lcd_maVoiture+0xd3c>)
 800419a:	f003 fbbd 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 800419e:	2001      	movs	r0, #1
 80041a0:	f002 fc76 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80041a4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80041a8:	2364      	movs	r3, #100	; 0x64
 80041aa:	9300      	str	r3, [sp, #0]
 80041ac:	2301      	movs	r3, #1
 80041ae:	2100      	movs	r1, #0
 80041b0:	48a0      	ldr	r0, [pc, #640]	; (8004434 <lcd_maVoiture+0xd3c>)
 80041b2:	f003 f88d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80041b6:	2001      	movs	r0, #1
 80041b8:	f002 fc6a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80041bc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80041c0:	2364      	movs	r3, #100	; 0x64
 80041c2:	9300      	str	r3, [sp, #0]
 80041c4:	2301      	movs	r3, #1
 80041c6:	2100      	movs	r1, #0
 80041c8:	489a      	ldr	r0, [pc, #616]	; (8004434 <lcd_maVoiture+0xd3c>)
 80041ca:	f003 f881 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80041ce:	2001      	movs	r0, #1
 80041d0:	f002 fc5e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80041d4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80041d8:	2364      	movs	r3, #100	; 0x64
 80041da:	9300      	str	r3, [sp, #0]
 80041dc:	2301      	movs	r3, #1
 80041de:	2100      	movs	r1, #0
 80041e0:	4894      	ldr	r0, [pc, #592]	; (8004434 <lcd_maVoiture+0xd3c>)
 80041e2:	f003 f875 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80041e6:	2001      	movs	r0, #1
 80041e8:	f002 fc52 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80041ec:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80041f0:	2364      	movs	r3, #100	; 0x64
 80041f2:	9300      	str	r3, [sp, #0]
 80041f4:	2301      	movs	r3, #1
 80041f6:	2100      	movs	r1, #0
 80041f8:	488e      	ldr	r0, [pc, #568]	; (8004434 <lcd_maVoiture+0xd3c>)
 80041fa:	f003 f869 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80041fe:	2001      	movs	r0, #1
 8004200:	f002 fc46 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004204:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004208:	2364      	movs	r3, #100	; 0x64
 800420a:	9300      	str	r3, [sp, #0]
 800420c:	2301      	movs	r3, #1
 800420e:	2100      	movs	r1, #0
 8004210:	4888      	ldr	r0, [pc, #544]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004212:	f003 f85d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004216:	2001      	movs	r0, #1
 8004218:	f002 fc3a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800421c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004220:	2364      	movs	r3, #100	; 0x64
 8004222:	9300      	str	r3, [sp, #0]
 8004224:	2301      	movs	r3, #1
 8004226:	2100      	movs	r1, #0
 8004228:	4882      	ldr	r0, [pc, #520]	; (8004434 <lcd_maVoiture+0xd3c>)
 800422a:	f003 f851 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800422e:	2001      	movs	r0, #1
 8004230:	f002 fc2e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004234:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004238:	2364      	movs	r3, #100	; 0x64
 800423a:	9300      	str	r3, [sp, #0]
 800423c:	2301      	movs	r3, #1
 800423e:	2100      	movs	r1, #0
 8004240:	487c      	ldr	r0, [pc, #496]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004242:	f003 f845 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004246:	2001      	movs	r0, #1
 8004248:	f002 fc22 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800424c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004250:	2364      	movs	r3, #100	; 0x64
 8004252:	9300      	str	r3, [sp, #0]
 8004254:	2301      	movs	r3, #1
 8004256:	2100      	movs	r1, #0
 8004258:	4876      	ldr	r0, [pc, #472]	; (8004434 <lcd_maVoiture+0xd3c>)
 800425a:	f003 f839 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800425e:	2001      	movs	r0, #1
 8004260:	f002 fc16 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004264:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004268:	2364      	movs	r3, #100	; 0x64
 800426a:	9300      	str	r3, [sp, #0]
 800426c:	2301      	movs	r3, #1
 800426e:	2100      	movs	r1, #0
 8004270:	4870      	ldr	r0, [pc, #448]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004272:	f003 f82d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004276:	2001      	movs	r0, #1
 8004278:	f002 fc0a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800427c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004280:	2364      	movs	r3, #100	; 0x64
 8004282:	9300      	str	r3, [sp, #0]
 8004284:	2301      	movs	r3, #1
 8004286:	2100      	movs	r1, #0
 8004288:	486a      	ldr	r0, [pc, #424]	; (8004434 <lcd_maVoiture+0xd3c>)
 800428a:	f003 f821 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800428e:	2001      	movs	r0, #1
 8004290:	f002 fbfe 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004294:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004298:	2364      	movs	r3, #100	; 0x64
 800429a:	9300      	str	r3, [sp, #0]
 800429c:	2301      	movs	r3, #1
 800429e:	2100      	movs	r1, #0
 80042a0:	4864      	ldr	r0, [pc, #400]	; (8004434 <lcd_maVoiture+0xd3c>)
 80042a2:	f003 f815 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80042a6:	2001      	movs	r0, #1
 80042a8:	f002 fbf2 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix5,1,100);
 80042ac:	f107 020c 	add.w	r2, r7, #12
 80042b0:	2364      	movs	r3, #100	; 0x64
 80042b2:	9300      	str	r3, [sp, #0]
 80042b4:	2301      	movs	r3, #1
 80042b6:	2100      	movs	r1, #0
 80042b8:	485e      	ldr	r0, [pc, #376]	; (8004434 <lcd_maVoiture+0xd3c>)
 80042ba:	f003 f809 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80042be:	2001      	movs	r0, #1
 80042c0:	f002 fbe6 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 80042c4:	f107 0208 	add.w	r2, r7, #8
 80042c8:	2364      	movs	r3, #100	; 0x64
 80042ca:	9300      	str	r3, [sp, #0]
 80042cc:	2301      	movs	r3, #1
 80042ce:	2100      	movs	r1, #0
 80042d0:	4858      	ldr	r0, [pc, #352]	; (8004434 <lcd_maVoiture+0xd3c>)
 80042d2:	f002 fffd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80042d6:	2001      	movs	r0, #1
 80042d8:	f002 fbda 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
 80042dc:	1d3a      	adds	r2, r7, #4
 80042de:	2364      	movs	r3, #100	; 0x64
 80042e0:	9300      	str	r3, [sp, #0]
 80042e2:	2301      	movs	r3, #1
 80042e4:	2100      	movs	r1, #0
 80042e6:	4853      	ldr	r0, [pc, #332]	; (8004434 <lcd_maVoiture+0xd3c>)
 80042e8:	f002 fff2 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80042ec:	2001      	movs	r0, #1
 80042ee:	f002 fbcf 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix8,1,100);
 80042f2:	463a      	mov	r2, r7
 80042f4:	2364      	movs	r3, #100	; 0x64
 80042f6:	9300      	str	r3, [sp, #0]
 80042f8:	2301      	movs	r3, #1
 80042fa:	2100      	movs	r1, #0
 80042fc:	484d      	ldr	r0, [pc, #308]	; (8004434 <lcd_maVoiture+0xd3c>)
 80042fe:	f002 ffe7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 8004302:	2064      	movs	r0, #100	; 0x64
 8004304:	f002 fbc4 	bl	8006a90 <HAL_Delay>

		/*----ON VAS MAINTENANT FAIRE AVANCER 4 FOIS LA VOITURE----*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8004308:	2364      	movs	r3, #100	; 0x64
 800430a:	9302      	str	r3, [sp, #8]
 800430c:	2301      	movs	r3, #1
 800430e:	9301      	str	r3, [sp, #4]
 8004310:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8004314:	9300      	str	r3, [sp, #0]
 8004316:	2301      	movs	r3, #1
 8004318:	2203      	movs	r2, #3
 800431a:	2100      	movs	r1, #0
 800431c:	4845      	ldr	r0, [pc, #276]	; (8004434 <lcd_maVoiture+0xd3c>)
 800431e:	f003 fafb 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8004322:	2001      	movs	r0, #1
 8004324:	f002 fbb4 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004328:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800432c:	2364      	movs	r3, #100	; 0x64
 800432e:	9300      	str	r3, [sp, #0]
 8004330:	2301      	movs	r3, #1
 8004332:	2100      	movs	r1, #0
 8004334:	483f      	ldr	r0, [pc, #252]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004336:	f002 ffcb 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800433a:	2001      	movs	r0, #1
 800433c:	f002 fba8 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004340:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004344:	2364      	movs	r3, #100	; 0x64
 8004346:	9300      	str	r3, [sp, #0]
 8004348:	2301      	movs	r3, #1
 800434a:	2100      	movs	r1, #0
 800434c:	4839      	ldr	r0, [pc, #228]	; (8004434 <lcd_maVoiture+0xd3c>)
 800434e:	f002 ffbf 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004352:	2001      	movs	r0, #1
 8004354:	f002 fb9c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004358:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800435c:	2364      	movs	r3, #100	; 0x64
 800435e:	9300      	str	r3, [sp, #0]
 8004360:	2301      	movs	r3, #1
 8004362:	2100      	movs	r1, #0
 8004364:	4833      	ldr	r0, [pc, #204]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004366:	f002 ffb3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800436a:	2001      	movs	r0, #1
 800436c:	f002 fb90 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004370:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004374:	2364      	movs	r3, #100	; 0x64
 8004376:	9300      	str	r3, [sp, #0]
 8004378:	2301      	movs	r3, #1
 800437a:	2100      	movs	r1, #0
 800437c:	482d      	ldr	r0, [pc, #180]	; (8004434 <lcd_maVoiture+0xd3c>)
 800437e:	f002 ffa7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004382:	2001      	movs	r0, #1
 8004384:	f002 fb84 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004388:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800438c:	2364      	movs	r3, #100	; 0x64
 800438e:	9300      	str	r3, [sp, #0]
 8004390:	2301      	movs	r3, #1
 8004392:	2100      	movs	r1, #0
 8004394:	4827      	ldr	r0, [pc, #156]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004396:	f002 ff9b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800439a:	2001      	movs	r0, #1
 800439c:	f002 fb78 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80043a0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80043a4:	2364      	movs	r3, #100	; 0x64
 80043a6:	9300      	str	r3, [sp, #0]
 80043a8:	2301      	movs	r3, #1
 80043aa:	2100      	movs	r1, #0
 80043ac:	4821      	ldr	r0, [pc, #132]	; (8004434 <lcd_maVoiture+0xd3c>)
 80043ae:	f002 ff8f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80043b2:	2001      	movs	r0, #1
 80043b4:	f002 fb6c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80043b8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80043bc:	2364      	movs	r3, #100	; 0x64
 80043be:	9300      	str	r3, [sp, #0]
 80043c0:	2301      	movs	r3, #1
 80043c2:	2100      	movs	r1, #0
 80043c4:	481b      	ldr	r0, [pc, #108]	; (8004434 <lcd_maVoiture+0xd3c>)
 80043c6:	f002 ff83 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80043ca:	2001      	movs	r0, #1
 80043cc:	f002 fb60 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80043d0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80043d4:	2364      	movs	r3, #100	; 0x64
 80043d6:	9300      	str	r3, [sp, #0]
 80043d8:	2301      	movs	r3, #1
 80043da:	2100      	movs	r1, #0
 80043dc:	4815      	ldr	r0, [pc, #84]	; (8004434 <lcd_maVoiture+0xd3c>)
 80043de:	f002 ff77 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80043e2:	2001      	movs	r0, #1
 80043e4:	f002 fb54 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80043e8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80043ec:	2364      	movs	r3, #100	; 0x64
 80043ee:	9300      	str	r3, [sp, #0]
 80043f0:	2301      	movs	r3, #1
 80043f2:	2100      	movs	r1, #0
 80043f4:	480f      	ldr	r0, [pc, #60]	; (8004434 <lcd_maVoiture+0xd3c>)
 80043f6:	f002 ff6b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80043fa:	2001      	movs	r0, #1
 80043fc:	f002 fb48 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004400:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004404:	2364      	movs	r3, #100	; 0x64
 8004406:	9300      	str	r3, [sp, #0]
 8004408:	2301      	movs	r3, #1
 800440a:	2100      	movs	r1, #0
 800440c:	4809      	ldr	r0, [pc, #36]	; (8004434 <lcd_maVoiture+0xd3c>)
 800440e:	f002 ff5f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004412:	2001      	movs	r0, #1
 8004414:	f002 fb3c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004418:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800441c:	2364      	movs	r3, #100	; 0x64
 800441e:	9300      	str	r3, [sp, #0]
 8004420:	2301      	movs	r3, #1
 8004422:	2100      	movs	r1, #0
 8004424:	4803      	ldr	r0, [pc, #12]	; (8004434 <lcd_maVoiture+0xd3c>)
 8004426:	f002 ff53 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800442a:	2001      	movs	r0, #1
 800442c:	f002 fb30 	bl	8006a90 <HAL_Delay>
 8004430:	e002      	b.n	8004438 <lcd_maVoiture+0xd40>
 8004432:	bf00      	nop
 8004434:	200000a4 	.word	0x200000a4

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004438:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800443c:	2364      	movs	r3, #100	; 0x64
 800443e:	9300      	str	r3, [sp, #0]
 8004440:	2301      	movs	r3, #1
 8004442:	2100      	movs	r1, #0
 8004444:	48d8      	ldr	r0, [pc, #864]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004446:	f002 ff43 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800444a:	2001      	movs	r0, #1
 800444c:	f002 fb20 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004450:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004454:	2364      	movs	r3, #100	; 0x64
 8004456:	9300      	str	r3, [sp, #0]
 8004458:	2301      	movs	r3, #1
 800445a:	2100      	movs	r1, #0
 800445c:	48d2      	ldr	r0, [pc, #840]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800445e:	f002 ff37 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004462:	2001      	movs	r0, #1
 8004464:	f002 fb14 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004468:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800446c:	2364      	movs	r3, #100	; 0x64
 800446e:	9300      	str	r3, [sp, #0]
 8004470:	2301      	movs	r3, #1
 8004472:	2100      	movs	r1, #0
 8004474:	48cc      	ldr	r0, [pc, #816]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004476:	f002 ff2b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800447a:	2001      	movs	r0, #1
 800447c:	f002 fb08 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004480:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004484:	2364      	movs	r3, #100	; 0x64
 8004486:	9300      	str	r3, [sp, #0]
 8004488:	2301      	movs	r3, #1
 800448a:	2100      	movs	r1, #0
 800448c:	48c6      	ldr	r0, [pc, #792]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800448e:	f002 ff1f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004492:	2001      	movs	r0, #1
 8004494:	f002 fafc 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix1,1,100);
 8004498:	f107 021c 	add.w	r2, r7, #28
 800449c:	2364      	movs	r3, #100	; 0x64
 800449e:	9300      	str	r3, [sp, #0]
 80044a0:	2301      	movs	r3, #1
 80044a2:	2100      	movs	r1, #0
 80044a4:	48c0      	ldr	r0, [pc, #768]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80044a6:	f002 ff13 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80044aa:	2001      	movs	r0, #1
 80044ac:	f002 faf0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 80044b0:	f107 0218 	add.w	r2, r7, #24
 80044b4:	2364      	movs	r3, #100	; 0x64
 80044b6:	9300      	str	r3, [sp, #0]
 80044b8:	2301      	movs	r3, #1
 80044ba:	2100      	movs	r1, #0
 80044bc:	48ba      	ldr	r0, [pc, #744]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80044be:	f002 ff07 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80044c2:	2001      	movs	r0, #1
 80044c4:	f002 fae4 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix3,1,100);
 80044c8:	f107 0214 	add.w	r2, r7, #20
 80044cc:	2364      	movs	r3, #100	; 0x64
 80044ce:	9300      	str	r3, [sp, #0]
 80044d0:	2301      	movs	r3, #1
 80044d2:	2100      	movs	r1, #0
 80044d4:	48b4      	ldr	r0, [pc, #720]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80044d6:	f002 fefb 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80044da:	2001      	movs	r0, #1
 80044dc:	f002 fad8 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix4,1,100);
 80044e0:	f107 0210 	add.w	r2, r7, #16
 80044e4:	2364      	movs	r3, #100	; 0x64
 80044e6:	9300      	str	r3, [sp, #0]
 80044e8:	2301      	movs	r3, #1
 80044ea:	2100      	movs	r1, #0
 80044ec:	48ae      	ldr	r0, [pc, #696]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80044ee:	f002 feef 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80044f2:	2001      	movs	r0, #1
 80044f4:	f002 facc 	bl	8006a90 <HAL_Delay>

		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 80044f8:	2364      	movs	r3, #100	; 0x64
 80044fa:	9302      	str	r3, [sp, #8]
 80044fc:	2301      	movs	r3, #1
 80044fe:	9301      	str	r3, [sp, #4]
 8004500:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8004504:	9300      	str	r3, [sp, #0]
 8004506:	2301      	movs	r3, #1
 8004508:	2204      	movs	r2, #4
 800450a:	2100      	movs	r1, #0
 800450c:	48a6      	ldr	r0, [pc, #664]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800450e:	f003 fa03 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8004512:	2001      	movs	r0, #1
 8004514:	f002 fabc 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004518:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800451c:	2364      	movs	r3, #100	; 0x64
 800451e:	9300      	str	r3, [sp, #0]
 8004520:	2301      	movs	r3, #1
 8004522:	2100      	movs	r1, #0
 8004524:	48a0      	ldr	r0, [pc, #640]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004526:	f002 fed3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800452a:	2001      	movs	r0, #1
 800452c:	f002 fab0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004530:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004534:	2364      	movs	r3, #100	; 0x64
 8004536:	9300      	str	r3, [sp, #0]
 8004538:	2301      	movs	r3, #1
 800453a:	2100      	movs	r1, #0
 800453c:	489a      	ldr	r0, [pc, #616]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800453e:	f002 fec7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004542:	2001      	movs	r0, #1
 8004544:	f002 faa4 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004548:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800454c:	2364      	movs	r3, #100	; 0x64
 800454e:	9300      	str	r3, [sp, #0]
 8004550:	2301      	movs	r3, #1
 8004552:	2100      	movs	r1, #0
 8004554:	4894      	ldr	r0, [pc, #592]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004556:	f002 febb 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800455a:	2001      	movs	r0, #1
 800455c:	f002 fa98 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004560:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004564:	2364      	movs	r3, #100	; 0x64
 8004566:	9300      	str	r3, [sp, #0]
 8004568:	2301      	movs	r3, #1
 800456a:	2100      	movs	r1, #0
 800456c:	488e      	ldr	r0, [pc, #568]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800456e:	f002 feaf 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004572:	2001      	movs	r0, #1
 8004574:	f002 fa8c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004578:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800457c:	2364      	movs	r3, #100	; 0x64
 800457e:	9300      	str	r3, [sp, #0]
 8004580:	2301      	movs	r3, #1
 8004582:	2100      	movs	r1, #0
 8004584:	4888      	ldr	r0, [pc, #544]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004586:	f002 fea3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800458a:	2001      	movs	r0, #1
 800458c:	f002 fa80 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004590:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004594:	2364      	movs	r3, #100	; 0x64
 8004596:	9300      	str	r3, [sp, #0]
 8004598:	2301      	movs	r3, #1
 800459a:	2100      	movs	r1, #0
 800459c:	4882      	ldr	r0, [pc, #520]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800459e:	f002 fe97 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80045a2:	2001      	movs	r0, #1
 80045a4:	f002 fa74 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80045a8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80045ac:	2364      	movs	r3, #100	; 0x64
 80045ae:	9300      	str	r3, [sp, #0]
 80045b0:	2301      	movs	r3, #1
 80045b2:	2100      	movs	r1, #0
 80045b4:	487c      	ldr	r0, [pc, #496]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80045b6:	f002 fe8b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80045ba:	2001      	movs	r0, #1
 80045bc:	f002 fa68 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80045c0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80045c4:	2364      	movs	r3, #100	; 0x64
 80045c6:	9300      	str	r3, [sp, #0]
 80045c8:	2301      	movs	r3, #1
 80045ca:	2100      	movs	r1, #0
 80045cc:	4876      	ldr	r0, [pc, #472]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80045ce:	f002 fe7f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80045d2:	2001      	movs	r0, #1
 80045d4:	f002 fa5c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80045d8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80045dc:	2364      	movs	r3, #100	; 0x64
 80045de:	9300      	str	r3, [sp, #0]
 80045e0:	2301      	movs	r3, #1
 80045e2:	2100      	movs	r1, #0
 80045e4:	4870      	ldr	r0, [pc, #448]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80045e6:	f002 fe73 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80045ea:	2001      	movs	r0, #1
 80045ec:	f002 fa50 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80045f0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80045f4:	2364      	movs	r3, #100	; 0x64
 80045f6:	9300      	str	r3, [sp, #0]
 80045f8:	2301      	movs	r3, #1
 80045fa:	2100      	movs	r1, #0
 80045fc:	486a      	ldr	r0, [pc, #424]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80045fe:	f002 fe67 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004602:	2001      	movs	r0, #1
 8004604:	f002 fa44 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004608:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800460c:	2364      	movs	r3, #100	; 0x64
 800460e:	9300      	str	r3, [sp, #0]
 8004610:	2301      	movs	r3, #1
 8004612:	2100      	movs	r1, #0
 8004614:	4864      	ldr	r0, [pc, #400]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004616:	f002 fe5b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800461a:	2001      	movs	r0, #1
 800461c:	f002 fa38 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004620:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004624:	2364      	movs	r3, #100	; 0x64
 8004626:	9300      	str	r3, [sp, #0]
 8004628:	2301      	movs	r3, #1
 800462a:	2100      	movs	r1, #0
 800462c:	485e      	ldr	r0, [pc, #376]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800462e:	f002 fe4f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004632:	2001      	movs	r0, #1
 8004634:	f002 fa2c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004638:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800463c:	2364      	movs	r3, #100	; 0x64
 800463e:	9300      	str	r3, [sp, #0]
 8004640:	2301      	movs	r3, #1
 8004642:	2100      	movs	r1, #0
 8004644:	4858      	ldr	r0, [pc, #352]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004646:	f002 fe43 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800464a:	2001      	movs	r0, #1
 800464c:	f002 fa20 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004650:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004654:	2364      	movs	r3, #100	; 0x64
 8004656:	9300      	str	r3, [sp, #0]
 8004658:	2301      	movs	r3, #1
 800465a:	2100      	movs	r1, #0
 800465c:	4852      	ldr	r0, [pc, #328]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800465e:	f002 fe37 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004662:	2001      	movs	r0, #1
 8004664:	f002 fa14 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004668:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800466c:	2364      	movs	r3, #100	; 0x64
 800466e:	9300      	str	r3, [sp, #0]
 8004670:	2301      	movs	r3, #1
 8004672:	2100      	movs	r1, #0
 8004674:	484c      	ldr	r0, [pc, #304]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004676:	f002 fe2b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800467a:	2001      	movs	r0, #1
 800467c:	f002 fa08 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix5,1,100);
 8004680:	f107 020c 	add.w	r2, r7, #12
 8004684:	2364      	movs	r3, #100	; 0x64
 8004686:	9300      	str	r3, [sp, #0]
 8004688:	2301      	movs	r3, #1
 800468a:	2100      	movs	r1, #0
 800468c:	4846      	ldr	r0, [pc, #280]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800468e:	f002 fe1f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004692:	2001      	movs	r0, #1
 8004694:	f002 f9fc 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8004698:	f107 0208 	add.w	r2, r7, #8
 800469c:	2364      	movs	r3, #100	; 0x64
 800469e:	9300      	str	r3, [sp, #0]
 80046a0:	2301      	movs	r3, #1
 80046a2:	2100      	movs	r1, #0
 80046a4:	4840      	ldr	r0, [pc, #256]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80046a6:	f002 fe13 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80046aa:	2001      	movs	r0, #1
 80046ac:	f002 f9f0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
 80046b0:	1d3a      	adds	r2, r7, #4
 80046b2:	2364      	movs	r3, #100	; 0x64
 80046b4:	9300      	str	r3, [sp, #0]
 80046b6:	2301      	movs	r3, #1
 80046b8:	2100      	movs	r1, #0
 80046ba:	483b      	ldr	r0, [pc, #236]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80046bc:	f002 fe08 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80046c0:	2001      	movs	r0, #1
 80046c2:	f002 f9e5 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix8,1,100);
 80046c6:	463a      	mov	r2, r7
 80046c8:	2364      	movs	r3, #100	; 0x64
 80046ca:	9300      	str	r3, [sp, #0]
 80046cc:	2301      	movs	r3, #1
 80046ce:	2100      	movs	r1, #0
 80046d0:	4835      	ldr	r0, [pc, #212]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80046d2:	f002 fdfd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 80046d6:	2064      	movs	r0, #100	; 0x64
 80046d8:	f002 f9da 	bl	8006a90 <HAL_Delay>

		/*----DEPART SMOOTH DE LA VOITURE----*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 80046dc:	2364      	movs	r3, #100	; 0x64
 80046de:	9302      	str	r3, [sp, #8]
 80046e0:	2301      	movs	r3, #1
 80046e2:	9301      	str	r3, [sp, #4]
 80046e4:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80046e8:	9300      	str	r3, [sp, #0]
 80046ea:	2301      	movs	r3, #1
 80046ec:	2203      	movs	r2, #3
 80046ee:	2100      	movs	r1, #0
 80046f0:	482d      	ldr	r0, [pc, #180]	; (80047a8 <lcd_maVoiture+0x10b0>)
 80046f2:	f003 f911 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 80046f6:	2001      	movs	r0, #1
 80046f8:	f002 f9ca 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80046fc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004700:	2364      	movs	r3, #100	; 0x64
 8004702:	9300      	str	r3, [sp, #0]
 8004704:	2301      	movs	r3, #1
 8004706:	2100      	movs	r1, #0
 8004708:	4827      	ldr	r0, [pc, #156]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800470a:	f002 fde1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800470e:	2001      	movs	r0, #1
 8004710:	f002 f9be 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004714:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004718:	2364      	movs	r3, #100	; 0x64
 800471a:	9300      	str	r3, [sp, #0]
 800471c:	2301      	movs	r3, #1
 800471e:	2100      	movs	r1, #0
 8004720:	4821      	ldr	r0, [pc, #132]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004722:	f002 fdd5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004726:	2001      	movs	r0, #1
 8004728:	f002 f9b2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800472c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004730:	2364      	movs	r3, #100	; 0x64
 8004732:	9300      	str	r3, [sp, #0]
 8004734:	2301      	movs	r3, #1
 8004736:	2100      	movs	r1, #0
 8004738:	481b      	ldr	r0, [pc, #108]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800473a:	f002 fdc9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800473e:	2001      	movs	r0, #1
 8004740:	f002 f9a6 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004744:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004748:	2364      	movs	r3, #100	; 0x64
 800474a:	9300      	str	r3, [sp, #0]
 800474c:	2301      	movs	r3, #1
 800474e:	2100      	movs	r1, #0
 8004750:	4815      	ldr	r0, [pc, #84]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004752:	f002 fdbd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004756:	2001      	movs	r0, #1
 8004758:	f002 f99a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800475c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004760:	2364      	movs	r3, #100	; 0x64
 8004762:	9300      	str	r3, [sp, #0]
 8004764:	2301      	movs	r3, #1
 8004766:	2100      	movs	r1, #0
 8004768:	480f      	ldr	r0, [pc, #60]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800476a:	f002 fdb1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800476e:	2001      	movs	r0, #1
 8004770:	f002 f98e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004774:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004778:	2364      	movs	r3, #100	; 0x64
 800477a:	9300      	str	r3, [sp, #0]
 800477c:	2301      	movs	r3, #1
 800477e:	2100      	movs	r1, #0
 8004780:	4809      	ldr	r0, [pc, #36]	; (80047a8 <lcd_maVoiture+0x10b0>)
 8004782:	f002 fda5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004786:	2001      	movs	r0, #1
 8004788:	f002 f982 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800478c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004790:	2364      	movs	r3, #100	; 0x64
 8004792:	9300      	str	r3, [sp, #0]
 8004794:	2301      	movs	r3, #1
 8004796:	2100      	movs	r1, #0
 8004798:	4803      	ldr	r0, [pc, #12]	; (80047a8 <lcd_maVoiture+0x10b0>)
 800479a:	f002 fd99 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800479e:	2001      	movs	r0, #1
 80047a0:	f002 f976 	bl	8006a90 <HAL_Delay>
 80047a4:	e002      	b.n	80047ac <lcd_maVoiture+0x10b4>
 80047a6:	bf00      	nop
 80047a8:	200000a4 	.word	0x200000a4

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80047ac:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80047b0:	2364      	movs	r3, #100	; 0x64
 80047b2:	9300      	str	r3, [sp, #0]
 80047b4:	2301      	movs	r3, #1
 80047b6:	2100      	movs	r1, #0
 80047b8:	48d8      	ldr	r0, [pc, #864]	; (8004b1c <lcd_maVoiture+0x1424>)
 80047ba:	f002 fd89 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80047be:	2001      	movs	r0, #1
 80047c0:	f002 f966 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80047c4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80047c8:	2364      	movs	r3, #100	; 0x64
 80047ca:	9300      	str	r3, [sp, #0]
 80047cc:	2301      	movs	r3, #1
 80047ce:	2100      	movs	r1, #0
 80047d0:	48d2      	ldr	r0, [pc, #840]	; (8004b1c <lcd_maVoiture+0x1424>)
 80047d2:	f002 fd7d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80047d6:	2001      	movs	r0, #1
 80047d8:	f002 f95a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80047dc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80047e0:	2364      	movs	r3, #100	; 0x64
 80047e2:	9300      	str	r3, [sp, #0]
 80047e4:	2301      	movs	r3, #1
 80047e6:	2100      	movs	r1, #0
 80047e8:	48cc      	ldr	r0, [pc, #816]	; (8004b1c <lcd_maVoiture+0x1424>)
 80047ea:	f002 fd71 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80047ee:	2001      	movs	r0, #1
 80047f0:	f002 f94e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80047f4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80047f8:	2364      	movs	r3, #100	; 0x64
 80047fa:	9300      	str	r3, [sp, #0]
 80047fc:	2301      	movs	r3, #1
 80047fe:	2100      	movs	r1, #0
 8004800:	48c6      	ldr	r0, [pc, #792]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004802:	f002 fd65 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004806:	2001      	movs	r0, #1
 8004808:	f002 f942 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800480c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004810:	2364      	movs	r3, #100	; 0x64
 8004812:	9300      	str	r3, [sp, #0]
 8004814:	2301      	movs	r3, #1
 8004816:	2100      	movs	r1, #0
 8004818:	48c0      	ldr	r0, [pc, #768]	; (8004b1c <lcd_maVoiture+0x1424>)
 800481a:	f002 fd59 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800481e:	2001      	movs	r0, #1
 8004820:	f002 f936 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004824:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004828:	2364      	movs	r3, #100	; 0x64
 800482a:	9300      	str	r3, [sp, #0]
 800482c:	2301      	movs	r3, #1
 800482e:	2100      	movs	r1, #0
 8004830:	48ba      	ldr	r0, [pc, #744]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004832:	f002 fd4d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004836:	2001      	movs	r0, #1
 8004838:	f002 f92a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800483c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004840:	2364      	movs	r3, #100	; 0x64
 8004842:	9300      	str	r3, [sp, #0]
 8004844:	2301      	movs	r3, #1
 8004846:	2100      	movs	r1, #0
 8004848:	48b4      	ldr	r0, [pc, #720]	; (8004b1c <lcd_maVoiture+0x1424>)
 800484a:	f002 fd41 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800484e:	2001      	movs	r0, #1
 8004850:	f002 f91e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004854:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004858:	2364      	movs	r3, #100	; 0x64
 800485a:	9300      	str	r3, [sp, #0]
 800485c:	2301      	movs	r3, #1
 800485e:	2100      	movs	r1, #0
 8004860:	48ae      	ldr	r0, [pc, #696]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004862:	f002 fd35 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004866:	2001      	movs	r0, #1
 8004868:	f002 f912 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800486c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004870:	2364      	movs	r3, #100	; 0x64
 8004872:	9300      	str	r3, [sp, #0]
 8004874:	2301      	movs	r3, #1
 8004876:	2100      	movs	r1, #0
 8004878:	48a8      	ldr	r0, [pc, #672]	; (8004b1c <lcd_maVoiture+0x1424>)
 800487a:	f002 fd29 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800487e:	2001      	movs	r0, #1
 8004880:	f002 f906 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix1,1,100);
 8004884:	f107 021c 	add.w	r2, r7, #28
 8004888:	2364      	movs	r3, #100	; 0x64
 800488a:	9300      	str	r3, [sp, #0]
 800488c:	2301      	movs	r3, #1
 800488e:	2100      	movs	r1, #0
 8004890:	48a2      	ldr	r0, [pc, #648]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004892:	f002 fd1d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004896:	2001      	movs	r0, #1
 8004898:	f002 f8fa 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 800489c:	f107 0218 	add.w	r2, r7, #24
 80048a0:	2364      	movs	r3, #100	; 0x64
 80048a2:	9300      	str	r3, [sp, #0]
 80048a4:	2301      	movs	r3, #1
 80048a6:	2100      	movs	r1, #0
 80048a8:	489c      	ldr	r0, [pc, #624]	; (8004b1c <lcd_maVoiture+0x1424>)
 80048aa:	f002 fd11 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80048ae:	2001      	movs	r0, #1
 80048b0:	f002 f8ee 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix3,1,100);
 80048b4:	f107 0214 	add.w	r2, r7, #20
 80048b8:	2364      	movs	r3, #100	; 0x64
 80048ba:	9300      	str	r3, [sp, #0]
 80048bc:	2301      	movs	r3, #1
 80048be:	2100      	movs	r1, #0
 80048c0:	4896      	ldr	r0, [pc, #600]	; (8004b1c <lcd_maVoiture+0x1424>)
 80048c2:	f002 fd05 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80048c6:	2001      	movs	r0, #1
 80048c8:	f002 f8e2 	bl	8006a90 <HAL_Delay>

		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 80048cc:	2364      	movs	r3, #100	; 0x64
 80048ce:	9302      	str	r3, [sp, #8]
 80048d0:	2301      	movs	r3, #1
 80048d2:	9301      	str	r3, [sp, #4]
 80048d4:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80048d8:	9300      	str	r3, [sp, #0]
 80048da:	2301      	movs	r3, #1
 80048dc:	2204      	movs	r2, #4
 80048de:	2100      	movs	r1, #0
 80048e0:	488e      	ldr	r0, [pc, #568]	; (8004b1c <lcd_maVoiture+0x1424>)
 80048e2:	f003 f819 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 80048e6:	2001      	movs	r0, #1
 80048e8:	f002 f8d2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80048ec:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80048f0:	2364      	movs	r3, #100	; 0x64
 80048f2:	9300      	str	r3, [sp, #0]
 80048f4:	2301      	movs	r3, #1
 80048f6:	2100      	movs	r1, #0
 80048f8:	4888      	ldr	r0, [pc, #544]	; (8004b1c <lcd_maVoiture+0x1424>)
 80048fa:	f002 fce9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80048fe:	2001      	movs	r0, #1
 8004900:	f002 f8c6 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004904:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004908:	2364      	movs	r3, #100	; 0x64
 800490a:	9300      	str	r3, [sp, #0]
 800490c:	2301      	movs	r3, #1
 800490e:	2100      	movs	r1, #0
 8004910:	4882      	ldr	r0, [pc, #520]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004912:	f002 fcdd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004916:	2001      	movs	r0, #1
 8004918:	f002 f8ba 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800491c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004920:	2364      	movs	r3, #100	; 0x64
 8004922:	9300      	str	r3, [sp, #0]
 8004924:	2301      	movs	r3, #1
 8004926:	2100      	movs	r1, #0
 8004928:	487c      	ldr	r0, [pc, #496]	; (8004b1c <lcd_maVoiture+0x1424>)
 800492a:	f002 fcd1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800492e:	2001      	movs	r0, #1
 8004930:	f002 f8ae 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004934:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004938:	2364      	movs	r3, #100	; 0x64
 800493a:	9300      	str	r3, [sp, #0]
 800493c:	2301      	movs	r3, #1
 800493e:	2100      	movs	r1, #0
 8004940:	4876      	ldr	r0, [pc, #472]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004942:	f002 fcc5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004946:	2001      	movs	r0, #1
 8004948:	f002 f8a2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800494c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004950:	2364      	movs	r3, #100	; 0x64
 8004952:	9300      	str	r3, [sp, #0]
 8004954:	2301      	movs	r3, #1
 8004956:	2100      	movs	r1, #0
 8004958:	4870      	ldr	r0, [pc, #448]	; (8004b1c <lcd_maVoiture+0x1424>)
 800495a:	f002 fcb9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800495e:	2001      	movs	r0, #1
 8004960:	f002 f896 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004964:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004968:	2364      	movs	r3, #100	; 0x64
 800496a:	9300      	str	r3, [sp, #0]
 800496c:	2301      	movs	r3, #1
 800496e:	2100      	movs	r1, #0
 8004970:	486a      	ldr	r0, [pc, #424]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004972:	f002 fcad 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004976:	2001      	movs	r0, #1
 8004978:	f002 f88a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800497c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004980:	2364      	movs	r3, #100	; 0x64
 8004982:	9300      	str	r3, [sp, #0]
 8004984:	2301      	movs	r3, #1
 8004986:	2100      	movs	r1, #0
 8004988:	4864      	ldr	r0, [pc, #400]	; (8004b1c <lcd_maVoiture+0x1424>)
 800498a:	f002 fca1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800498e:	2001      	movs	r0, #1
 8004990:	f002 f87e 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004994:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004998:	2364      	movs	r3, #100	; 0x64
 800499a:	9300      	str	r3, [sp, #0]
 800499c:	2301      	movs	r3, #1
 800499e:	2100      	movs	r1, #0
 80049a0:	485e      	ldr	r0, [pc, #376]	; (8004b1c <lcd_maVoiture+0x1424>)
 80049a2:	f002 fc95 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80049a6:	2001      	movs	r0, #1
 80049a8:	f002 f872 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80049ac:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80049b0:	2364      	movs	r3, #100	; 0x64
 80049b2:	9300      	str	r3, [sp, #0]
 80049b4:	2301      	movs	r3, #1
 80049b6:	2100      	movs	r1, #0
 80049b8:	4858      	ldr	r0, [pc, #352]	; (8004b1c <lcd_maVoiture+0x1424>)
 80049ba:	f002 fc89 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80049be:	2001      	movs	r0, #1
 80049c0:	f002 f866 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80049c4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80049c8:	2364      	movs	r3, #100	; 0x64
 80049ca:	9300      	str	r3, [sp, #0]
 80049cc:	2301      	movs	r3, #1
 80049ce:	2100      	movs	r1, #0
 80049d0:	4852      	ldr	r0, [pc, #328]	; (8004b1c <lcd_maVoiture+0x1424>)
 80049d2:	f002 fc7d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80049d6:	2001      	movs	r0, #1
 80049d8:	f002 f85a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80049dc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80049e0:	2364      	movs	r3, #100	; 0x64
 80049e2:	9300      	str	r3, [sp, #0]
 80049e4:	2301      	movs	r3, #1
 80049e6:	2100      	movs	r1, #0
 80049e8:	484c      	ldr	r0, [pc, #304]	; (8004b1c <lcd_maVoiture+0x1424>)
 80049ea:	f002 fc71 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80049ee:	2001      	movs	r0, #1
 80049f0:	f002 f84e 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80049f4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80049f8:	2364      	movs	r3, #100	; 0x64
 80049fa:	9300      	str	r3, [sp, #0]
 80049fc:	2301      	movs	r3, #1
 80049fe:	2100      	movs	r1, #0
 8004a00:	4846      	ldr	r0, [pc, #280]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004a02:	f002 fc65 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004a06:	2001      	movs	r0, #1
 8004a08:	f002 f842 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004a0c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004a10:	2364      	movs	r3, #100	; 0x64
 8004a12:	9300      	str	r3, [sp, #0]
 8004a14:	2301      	movs	r3, #1
 8004a16:	2100      	movs	r1, #0
 8004a18:	4840      	ldr	r0, [pc, #256]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004a1a:	f002 fc59 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004a1e:	2001      	movs	r0, #1
 8004a20:	f002 f836 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004a24:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004a28:	2364      	movs	r3, #100	; 0x64
 8004a2a:	9300      	str	r3, [sp, #0]
 8004a2c:	2301      	movs	r3, #1
 8004a2e:	2100      	movs	r1, #0
 8004a30:	483a      	ldr	r0, [pc, #232]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004a32:	f002 fc4d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004a36:	2001      	movs	r0, #1
 8004a38:	f002 f82a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004a3c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004a40:	2364      	movs	r3, #100	; 0x64
 8004a42:	9300      	str	r3, [sp, #0]
 8004a44:	2301      	movs	r3, #1
 8004a46:	2100      	movs	r1, #0
 8004a48:	4834      	ldr	r0, [pc, #208]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004a4a:	f002 fc41 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004a4e:	2001      	movs	r0, #1
 8004a50:	f002 f81e 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004a54:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004a58:	2364      	movs	r3, #100	; 0x64
 8004a5a:	9300      	str	r3, [sp, #0]
 8004a5c:	2301      	movs	r3, #1
 8004a5e:	2100      	movs	r1, #0
 8004a60:	482e      	ldr	r0, [pc, #184]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004a62:	f002 fc35 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004a66:	2001      	movs	r0, #1
 8004a68:	f002 f812 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix5,1,100);
 8004a6c:	f107 020c 	add.w	r2, r7, #12
 8004a70:	2364      	movs	r3, #100	; 0x64
 8004a72:	9300      	str	r3, [sp, #0]
 8004a74:	2301      	movs	r3, #1
 8004a76:	2100      	movs	r1, #0
 8004a78:	4828      	ldr	r0, [pc, #160]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004a7a:	f002 fc29 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004a7e:	2001      	movs	r0, #1
 8004a80:	f002 f806 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8004a84:	f107 0208 	add.w	r2, r7, #8
 8004a88:	2364      	movs	r3, #100	; 0x64
 8004a8a:	9300      	str	r3, [sp, #0]
 8004a8c:	2301      	movs	r3, #1
 8004a8e:	2100      	movs	r1, #0
 8004a90:	4822      	ldr	r0, [pc, #136]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004a92:	f002 fc1d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004a96:	2001      	movs	r0, #1
 8004a98:	f001 fffa 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix7,1,100);
 8004a9c:	1d3a      	adds	r2, r7, #4
 8004a9e:	2364      	movs	r3, #100	; 0x64
 8004aa0:	9300      	str	r3, [sp, #0]
 8004aa2:	2301      	movs	r3, #1
 8004aa4:	2100      	movs	r1, #0
 8004aa6:	481d      	ldr	r0, [pc, #116]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004aa8:	f002 fc12 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 8004aac:	2064      	movs	r0, #100	; 0x64
 8004aae:	f001 ffef 	bl	8006a90 <HAL_Delay>
		/*------------------------------------------------*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8004ab2:	2364      	movs	r3, #100	; 0x64
 8004ab4:	9302      	str	r3, [sp, #8]
 8004ab6:	2301      	movs	r3, #1
 8004ab8:	9301      	str	r3, [sp, #4]
 8004aba:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8004abe:	9300      	str	r3, [sp, #0]
 8004ac0:	2301      	movs	r3, #1
 8004ac2:	2203      	movs	r2, #3
 8004ac4:	2100      	movs	r1, #0
 8004ac6:	4815      	ldr	r0, [pc, #84]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004ac8:	f002 ff26 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8004acc:	2001      	movs	r0, #1
 8004ace:	f001 ffdf 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004ad2:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004ad6:	2364      	movs	r3, #100	; 0x64
 8004ad8:	9300      	str	r3, [sp, #0]
 8004ada:	2301      	movs	r3, #1
 8004adc:	2100      	movs	r1, #0
 8004ade:	480f      	ldr	r0, [pc, #60]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004ae0:	f002 fbf6 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004ae4:	2001      	movs	r0, #1
 8004ae6:	f001 ffd3 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004aea:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004aee:	2364      	movs	r3, #100	; 0x64
 8004af0:	9300      	str	r3, [sp, #0]
 8004af2:	2301      	movs	r3, #1
 8004af4:	2100      	movs	r1, #0
 8004af6:	4809      	ldr	r0, [pc, #36]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004af8:	f002 fbea 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004afc:	2001      	movs	r0, #1
 8004afe:	f001 ffc7 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004b02:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004b06:	2364      	movs	r3, #100	; 0x64
 8004b08:	9300      	str	r3, [sp, #0]
 8004b0a:	2301      	movs	r3, #1
 8004b0c:	2100      	movs	r1, #0
 8004b0e:	4803      	ldr	r0, [pc, #12]	; (8004b1c <lcd_maVoiture+0x1424>)
 8004b10:	f002 fbde 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004b14:	2001      	movs	r0, #1
 8004b16:	f001 ffbb 	bl	8006a90 <HAL_Delay>
 8004b1a:	e001      	b.n	8004b20 <lcd_maVoiture+0x1428>
 8004b1c:	200000a4 	.word	0x200000a4

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004b20:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004b24:	2364      	movs	r3, #100	; 0x64
 8004b26:	9300      	str	r3, [sp, #0]
 8004b28:	2301      	movs	r3, #1
 8004b2a:	2100      	movs	r1, #0
 8004b2c:	48d8      	ldr	r0, [pc, #864]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004b2e:	f002 fbcf 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004b32:	2001      	movs	r0, #1
 8004b34:	f001 ffac 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004b38:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004b3c:	2364      	movs	r3, #100	; 0x64
 8004b3e:	9300      	str	r3, [sp, #0]
 8004b40:	2301      	movs	r3, #1
 8004b42:	2100      	movs	r1, #0
 8004b44:	48d2      	ldr	r0, [pc, #840]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004b46:	f002 fbc3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004b4a:	2001      	movs	r0, #1
 8004b4c:	f001 ffa0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004b50:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004b54:	2364      	movs	r3, #100	; 0x64
 8004b56:	9300      	str	r3, [sp, #0]
 8004b58:	2301      	movs	r3, #1
 8004b5a:	2100      	movs	r1, #0
 8004b5c:	48cc      	ldr	r0, [pc, #816]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004b5e:	f002 fbb7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004b62:	2001      	movs	r0, #1
 8004b64:	f001 ff94 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004b68:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004b6c:	2364      	movs	r3, #100	; 0x64
 8004b6e:	9300      	str	r3, [sp, #0]
 8004b70:	2301      	movs	r3, #1
 8004b72:	2100      	movs	r1, #0
 8004b74:	48c6      	ldr	r0, [pc, #792]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004b76:	f002 fbab 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004b7a:	2001      	movs	r0, #1
 8004b7c:	f001 ff88 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004b80:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004b84:	2364      	movs	r3, #100	; 0x64
 8004b86:	9300      	str	r3, [sp, #0]
 8004b88:	2301      	movs	r3, #1
 8004b8a:	2100      	movs	r1, #0
 8004b8c:	48c0      	ldr	r0, [pc, #768]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004b8e:	f002 fb9f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004b92:	2001      	movs	r0, #1
 8004b94:	f001 ff7c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004b98:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004b9c:	2364      	movs	r3, #100	; 0x64
 8004b9e:	9300      	str	r3, [sp, #0]
 8004ba0:	2301      	movs	r3, #1
 8004ba2:	2100      	movs	r1, #0
 8004ba4:	48ba      	ldr	r0, [pc, #744]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004ba6:	f002 fb93 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004baa:	2001      	movs	r0, #1
 8004bac:	f001 ff70 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004bb0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004bb4:	2364      	movs	r3, #100	; 0x64
 8004bb6:	9300      	str	r3, [sp, #0]
 8004bb8:	2301      	movs	r3, #1
 8004bba:	2100      	movs	r1, #0
 8004bbc:	48b4      	ldr	r0, [pc, #720]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004bbe:	f002 fb87 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004bc2:	2001      	movs	r0, #1
 8004bc4:	f001 ff64 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004bc8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004bcc:	2364      	movs	r3, #100	; 0x64
 8004bce:	9300      	str	r3, [sp, #0]
 8004bd0:	2301      	movs	r3, #1
 8004bd2:	2100      	movs	r1, #0
 8004bd4:	48ae      	ldr	r0, [pc, #696]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004bd6:	f002 fb7b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004bda:	2001      	movs	r0, #1
 8004bdc:	f001 ff58 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004be0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004be4:	2364      	movs	r3, #100	; 0x64
 8004be6:	9300      	str	r3, [sp, #0]
 8004be8:	2301      	movs	r3, #1
 8004bea:	2100      	movs	r1, #0
 8004bec:	48a8      	ldr	r0, [pc, #672]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004bee:	f002 fb6f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004bf2:	2001      	movs	r0, #1
 8004bf4:	f001 ff4c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004bf8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004bfc:	2364      	movs	r3, #100	; 0x64
 8004bfe:	9300      	str	r3, [sp, #0]
 8004c00:	2301      	movs	r3, #1
 8004c02:	2100      	movs	r1, #0
 8004c04:	48a2      	ldr	r0, [pc, #648]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004c06:	f002 fb63 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004c0a:	2001      	movs	r0, #1
 8004c0c:	f001 ff40 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004c10:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004c14:	2364      	movs	r3, #100	; 0x64
 8004c16:	9300      	str	r3, [sp, #0]
 8004c18:	2301      	movs	r3, #1
 8004c1a:	2100      	movs	r1, #0
 8004c1c:	489c      	ldr	r0, [pc, #624]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004c1e:	f002 fb57 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004c22:	2001      	movs	r0, #1
 8004c24:	f001 ff34 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004c28:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004c2c:	2364      	movs	r3, #100	; 0x64
 8004c2e:	9300      	str	r3, [sp, #0]
 8004c30:	2301      	movs	r3, #1
 8004c32:	2100      	movs	r1, #0
 8004c34:	4896      	ldr	r0, [pc, #600]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004c36:	f002 fb4b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004c3a:	2001      	movs	r0, #1
 8004c3c:	f001 ff28 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004c40:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004c44:	2364      	movs	r3, #100	; 0x64
 8004c46:	9300      	str	r3, [sp, #0]
 8004c48:	2301      	movs	r3, #1
 8004c4a:	2100      	movs	r1, #0
 8004c4c:	4890      	ldr	r0, [pc, #576]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004c4e:	f002 fb3f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004c52:	2001      	movs	r0, #1
 8004c54:	f001 ff1c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004c58:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004c5c:	2364      	movs	r3, #100	; 0x64
 8004c5e:	9300      	str	r3, [sp, #0]
 8004c60:	2301      	movs	r3, #1
 8004c62:	2100      	movs	r1, #0
 8004c64:	488a      	ldr	r0, [pc, #552]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004c66:	f002 fb33 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004c6a:	2001      	movs	r0, #1
 8004c6c:	f001 ff10 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix1,1,100);
 8004c70:	f107 021c 	add.w	r2, r7, #28
 8004c74:	2364      	movs	r3, #100	; 0x64
 8004c76:	9300      	str	r3, [sp, #0]
 8004c78:	2301      	movs	r3, #1
 8004c7a:	2100      	movs	r1, #0
 8004c7c:	4884      	ldr	r0, [pc, #528]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004c7e:	f002 fb27 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004c82:	2001      	movs	r0, #1
 8004c84:	f001 ff04 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix2,1,100);
 8004c88:	f107 0218 	add.w	r2, r7, #24
 8004c8c:	2364      	movs	r3, #100	; 0x64
 8004c8e:	9300      	str	r3, [sp, #0]
 8004c90:	2301      	movs	r3, #1
 8004c92:	2100      	movs	r1, #0
 8004c94:	487e      	ldr	r0, [pc, #504]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004c96:	f002 fb1b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004c9a:	2001      	movs	r0, #1
 8004c9c:	f001 fef8 	bl	8006a90 <HAL_Delay>


		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 8004ca0:	2364      	movs	r3, #100	; 0x64
 8004ca2:	9302      	str	r3, [sp, #8]
 8004ca4:	2301      	movs	r3, #1
 8004ca6:	9301      	str	r3, [sp, #4]
 8004ca8:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8004cac:	9300      	str	r3, [sp, #0]
 8004cae:	2301      	movs	r3, #1
 8004cb0:	2204      	movs	r2, #4
 8004cb2:	2100      	movs	r1, #0
 8004cb4:	4876      	ldr	r0, [pc, #472]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004cb6:	f002 fe2f 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8004cba:	2001      	movs	r0, #1
 8004cbc:	f001 fee8 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004cc0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004cc4:	2364      	movs	r3, #100	; 0x64
 8004cc6:	9300      	str	r3, [sp, #0]
 8004cc8:	2301      	movs	r3, #1
 8004cca:	2100      	movs	r1, #0
 8004ccc:	4870      	ldr	r0, [pc, #448]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004cce:	f002 faff 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004cd2:	2001      	movs	r0, #1
 8004cd4:	f001 fedc 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004cd8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004cdc:	2364      	movs	r3, #100	; 0x64
 8004cde:	9300      	str	r3, [sp, #0]
 8004ce0:	2301      	movs	r3, #1
 8004ce2:	2100      	movs	r1, #0
 8004ce4:	486a      	ldr	r0, [pc, #424]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004ce6:	f002 faf3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004cea:	2001      	movs	r0, #1
 8004cec:	f001 fed0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004cf0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004cf4:	2364      	movs	r3, #100	; 0x64
 8004cf6:	9300      	str	r3, [sp, #0]
 8004cf8:	2301      	movs	r3, #1
 8004cfa:	2100      	movs	r1, #0
 8004cfc:	4864      	ldr	r0, [pc, #400]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004cfe:	f002 fae7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004d02:	2001      	movs	r0, #1
 8004d04:	f001 fec4 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004d08:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004d0c:	2364      	movs	r3, #100	; 0x64
 8004d0e:	9300      	str	r3, [sp, #0]
 8004d10:	2301      	movs	r3, #1
 8004d12:	2100      	movs	r1, #0
 8004d14:	485e      	ldr	r0, [pc, #376]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004d16:	f002 fadb 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004d1a:	2001      	movs	r0, #1
 8004d1c:	f001 feb8 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004d20:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004d24:	2364      	movs	r3, #100	; 0x64
 8004d26:	9300      	str	r3, [sp, #0]
 8004d28:	2301      	movs	r3, #1
 8004d2a:	2100      	movs	r1, #0
 8004d2c:	4858      	ldr	r0, [pc, #352]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004d2e:	f002 facf 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004d32:	2001      	movs	r0, #1
 8004d34:	f001 feac 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004d38:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004d3c:	2364      	movs	r3, #100	; 0x64
 8004d3e:	9300      	str	r3, [sp, #0]
 8004d40:	2301      	movs	r3, #1
 8004d42:	2100      	movs	r1, #0
 8004d44:	4852      	ldr	r0, [pc, #328]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004d46:	f002 fac3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004d4a:	2001      	movs	r0, #1
 8004d4c:	f001 fea0 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004d50:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004d54:	2364      	movs	r3, #100	; 0x64
 8004d56:	9300      	str	r3, [sp, #0]
 8004d58:	2301      	movs	r3, #1
 8004d5a:	2100      	movs	r1, #0
 8004d5c:	484c      	ldr	r0, [pc, #304]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004d5e:	f002 fab7 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004d62:	2001      	movs	r0, #1
 8004d64:	f001 fe94 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004d68:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004d6c:	2364      	movs	r3, #100	; 0x64
 8004d6e:	9300      	str	r3, [sp, #0]
 8004d70:	2301      	movs	r3, #1
 8004d72:	2100      	movs	r1, #0
 8004d74:	4846      	ldr	r0, [pc, #280]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004d76:	f002 faab 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004d7a:	2001      	movs	r0, #1
 8004d7c:	f001 fe88 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004d80:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004d84:	2364      	movs	r3, #100	; 0x64
 8004d86:	9300      	str	r3, [sp, #0]
 8004d88:	2301      	movs	r3, #1
 8004d8a:	2100      	movs	r1, #0
 8004d8c:	4840      	ldr	r0, [pc, #256]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004d8e:	f002 fa9f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004d92:	2001      	movs	r0, #1
 8004d94:	f001 fe7c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004d98:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004d9c:	2364      	movs	r3, #100	; 0x64
 8004d9e:	9300      	str	r3, [sp, #0]
 8004da0:	2301      	movs	r3, #1
 8004da2:	2100      	movs	r1, #0
 8004da4:	483a      	ldr	r0, [pc, #232]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004da6:	f002 fa93 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004daa:	2001      	movs	r0, #1
 8004dac:	f001 fe70 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004db0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004db4:	2364      	movs	r3, #100	; 0x64
 8004db6:	9300      	str	r3, [sp, #0]
 8004db8:	2301      	movs	r3, #1
 8004dba:	2100      	movs	r1, #0
 8004dbc:	4834      	ldr	r0, [pc, #208]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004dbe:	f002 fa87 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004dc2:	2001      	movs	r0, #1
 8004dc4:	f001 fe64 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004dc8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004dcc:	2364      	movs	r3, #100	; 0x64
 8004dce:	9300      	str	r3, [sp, #0]
 8004dd0:	2301      	movs	r3, #1
 8004dd2:	2100      	movs	r1, #0
 8004dd4:	482e      	ldr	r0, [pc, #184]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004dd6:	f002 fa7b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004dda:	2001      	movs	r0, #1
 8004ddc:	f001 fe58 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004de0:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004de4:	2364      	movs	r3, #100	; 0x64
 8004de6:	9300      	str	r3, [sp, #0]
 8004de8:	2301      	movs	r3, #1
 8004dea:	2100      	movs	r1, #0
 8004dec:	4828      	ldr	r0, [pc, #160]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004dee:	f002 fa6f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004df2:	2001      	movs	r0, #1
 8004df4:	f001 fe4c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004df8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004dfc:	2364      	movs	r3, #100	; 0x64
 8004dfe:	9300      	str	r3, [sp, #0]
 8004e00:	2301      	movs	r3, #1
 8004e02:	2100      	movs	r1, #0
 8004e04:	4822      	ldr	r0, [pc, #136]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004e06:	f002 fa63 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004e0a:	2001      	movs	r0, #1
 8004e0c:	f001 fe40 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004e10:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004e14:	2364      	movs	r3, #100	; 0x64
 8004e16:	9300      	str	r3, [sp, #0]
 8004e18:	2301      	movs	r3, #1
 8004e1a:	2100      	movs	r1, #0
 8004e1c:	481c      	ldr	r0, [pc, #112]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004e1e:	f002 fa57 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004e22:	2001      	movs	r0, #1
 8004e24:	f001 fe34 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004e28:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004e2c:	2364      	movs	r3, #100	; 0x64
 8004e2e:	9300      	str	r3, [sp, #0]
 8004e30:	2301      	movs	r3, #1
 8004e32:	2100      	movs	r1, #0
 8004e34:	4816      	ldr	r0, [pc, #88]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004e36:	f002 fa4b 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004e3a:	2001      	movs	r0, #1
 8004e3c:	f001 fe28 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004e40:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004e44:	2364      	movs	r3, #100	; 0x64
 8004e46:	9300      	str	r3, [sp, #0]
 8004e48:	2301      	movs	r3, #1
 8004e4a:	2100      	movs	r1, #0
 8004e4c:	4810      	ldr	r0, [pc, #64]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004e4e:	f002 fa3f 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004e52:	2001      	movs	r0, #1
 8004e54:	f001 fe1c 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix5,1,100);
 8004e58:	f107 020c 	add.w	r2, r7, #12
 8004e5c:	2364      	movs	r3, #100	; 0x64
 8004e5e:	9300      	str	r3, [sp, #0]
 8004e60:	2301      	movs	r3, #1
 8004e62:	2100      	movs	r1, #0
 8004e64:	480a      	ldr	r0, [pc, #40]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004e66:	f002 fa33 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004e6a:	2001      	movs	r0, #1
 8004e6c:	f001 fe10 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix6,1,100);
 8004e70:	f107 0208 	add.w	r2, r7, #8
 8004e74:	2364      	movs	r3, #100	; 0x64
 8004e76:	9300      	str	r3, [sp, #0]
 8004e78:	2301      	movs	r3, #1
 8004e7a:	2100      	movs	r1, #0
 8004e7c:	4804      	ldr	r0, [pc, #16]	; (8004e90 <lcd_maVoiture+0x1798>)
 8004e7e:	f002 fa27 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(100);
 8004e82:	2064      	movs	r0, #100	; 0x64
 8004e84:	f001 fe04 	bl	8006a90 <HAL_Delay>
		/*------------------------------------------------*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 8004e88:	2364      	movs	r3, #100	; 0x64
 8004e8a:	9302      	str	r3, [sp, #8]
 8004e8c:	2301      	movs	r3, #1
 8004e8e:	e001      	b.n	8004e94 <lcd_maVoiture+0x179c>
 8004e90:	200000a4 	.word	0x200000a4
 8004e94:	9301      	str	r3, [sp, #4]
 8004e96:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8004e9a:	9300      	str	r3, [sp, #0]
 8004e9c:	2301      	movs	r3, #1
 8004e9e:	2203      	movs	r2, #3
 8004ea0:	2100      	movs	r1, #0
 8004ea2:	48d9      	ldr	r0, [pc, #868]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004ea4:	f002 fd38 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8004ea8:	2001      	movs	r0, #1
 8004eaa:	f001 fdf1 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004eae:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004eb2:	2364      	movs	r3, #100	; 0x64
 8004eb4:	9300      	str	r3, [sp, #0]
 8004eb6:	2301      	movs	r3, #1
 8004eb8:	2100      	movs	r1, #0
 8004eba:	48d3      	ldr	r0, [pc, #844]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004ebc:	f002 fa08 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004ec0:	2001      	movs	r0, #1
 8004ec2:	f001 fde5 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004ec6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004eca:	2364      	movs	r3, #100	; 0x64
 8004ecc:	9300      	str	r3, [sp, #0]
 8004ece:	2301      	movs	r3, #1
 8004ed0:	2100      	movs	r1, #0
 8004ed2:	48cd      	ldr	r0, [pc, #820]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004ed4:	f002 f9fc 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004ed8:	2001      	movs	r0, #1
 8004eda:	f001 fdd9 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004ede:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004ee2:	2364      	movs	r3, #100	; 0x64
 8004ee4:	9300      	str	r3, [sp, #0]
 8004ee6:	2301      	movs	r3, #1
 8004ee8:	2100      	movs	r1, #0
 8004eea:	48c7      	ldr	r0, [pc, #796]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004eec:	f002 f9f0 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004ef0:	2001      	movs	r0, #1
 8004ef2:	f001 fdcd 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004ef6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004efa:	2364      	movs	r3, #100	; 0x64
 8004efc:	9300      	str	r3, [sp, #0]
 8004efe:	2301      	movs	r3, #1
 8004f00:	2100      	movs	r1, #0
 8004f02:	48c1      	ldr	r0, [pc, #772]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004f04:	f002 f9e4 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004f08:	2001      	movs	r0, #1
 8004f0a:	f001 fdc1 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004f0e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004f12:	2364      	movs	r3, #100	; 0x64
 8004f14:	9300      	str	r3, [sp, #0]
 8004f16:	2301      	movs	r3, #1
 8004f18:	2100      	movs	r1, #0
 8004f1a:	48bb      	ldr	r0, [pc, #748]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004f1c:	f002 f9d8 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004f20:	2001      	movs	r0, #1
 8004f22:	f001 fdb5 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004f26:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004f2a:	2364      	movs	r3, #100	; 0x64
 8004f2c:	9300      	str	r3, [sp, #0]
 8004f2e:	2301      	movs	r3, #1
 8004f30:	2100      	movs	r1, #0
 8004f32:	48b5      	ldr	r0, [pc, #724]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004f34:	f002 f9cc 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004f38:	2001      	movs	r0, #1
 8004f3a:	f001 fda9 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004f3e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004f42:	2364      	movs	r3, #100	; 0x64
 8004f44:	9300      	str	r3, [sp, #0]
 8004f46:	2301      	movs	r3, #1
 8004f48:	2100      	movs	r1, #0
 8004f4a:	48af      	ldr	r0, [pc, #700]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004f4c:	f002 f9c0 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004f50:	2001      	movs	r0, #1
 8004f52:	f001 fd9d 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004f56:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004f5a:	2364      	movs	r3, #100	; 0x64
 8004f5c:	9300      	str	r3, [sp, #0]
 8004f5e:	2301      	movs	r3, #1
 8004f60:	2100      	movs	r1, #0
 8004f62:	48a9      	ldr	r0, [pc, #676]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004f64:	f002 f9b4 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004f68:	2001      	movs	r0, #1
 8004f6a:	f001 fd91 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004f6e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004f72:	2364      	movs	r3, #100	; 0x64
 8004f74:	9300      	str	r3, [sp, #0]
 8004f76:	2301      	movs	r3, #1
 8004f78:	2100      	movs	r1, #0
 8004f7a:	48a3      	ldr	r0, [pc, #652]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004f7c:	f002 f9a8 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004f80:	2001      	movs	r0, #1
 8004f82:	f001 fd85 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004f86:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004f8a:	2364      	movs	r3, #100	; 0x64
 8004f8c:	9300      	str	r3, [sp, #0]
 8004f8e:	2301      	movs	r3, #1
 8004f90:	2100      	movs	r1, #0
 8004f92:	489d      	ldr	r0, [pc, #628]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004f94:	f002 f99c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004f98:	2001      	movs	r0, #1
 8004f9a:	f001 fd79 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004f9e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004fa2:	2364      	movs	r3, #100	; 0x64
 8004fa4:	9300      	str	r3, [sp, #0]
 8004fa6:	2301      	movs	r3, #1
 8004fa8:	2100      	movs	r1, #0
 8004faa:	4897      	ldr	r0, [pc, #604]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004fac:	f002 f990 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004fb0:	2001      	movs	r0, #1
 8004fb2:	f001 fd6d 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004fb6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004fba:	2364      	movs	r3, #100	; 0x64
 8004fbc:	9300      	str	r3, [sp, #0]
 8004fbe:	2301      	movs	r3, #1
 8004fc0:	2100      	movs	r1, #0
 8004fc2:	4891      	ldr	r0, [pc, #580]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004fc4:	f002 f984 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004fc8:	2001      	movs	r0, #1
 8004fca:	f001 fd61 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004fce:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004fd2:	2364      	movs	r3, #100	; 0x64
 8004fd4:	9300      	str	r3, [sp, #0]
 8004fd6:	2301      	movs	r3, #1
 8004fd8:	2100      	movs	r1, #0
 8004fda:	488b      	ldr	r0, [pc, #556]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004fdc:	f002 f978 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004fe0:	2001      	movs	r0, #1
 8004fe2:	f001 fd55 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004fe6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8004fea:	2364      	movs	r3, #100	; 0x64
 8004fec:	9300      	str	r3, [sp, #0]
 8004fee:	2301      	movs	r3, #1
 8004ff0:	2100      	movs	r1, #0
 8004ff2:	4885      	ldr	r0, [pc, #532]	; (8005208 <lcd_maVoiture+0x1b10>)
 8004ff4:	f002 f96c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8004ff8:	2001      	movs	r0, #1
 8004ffa:	f001 fd49 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8004ffe:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005002:	2364      	movs	r3, #100	; 0x64
 8005004:	9300      	str	r3, [sp, #0]
 8005006:	2301      	movs	r3, #1
 8005008:	2100      	movs	r1, #0
 800500a:	487f      	ldr	r0, [pc, #508]	; (8005208 <lcd_maVoiture+0x1b10>)
 800500c:	f002 f960 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005010:	2001      	movs	r0, #1
 8005012:	f001 fd3d 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005016:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800501a:	2364      	movs	r3, #100	; 0x64
 800501c:	9300      	str	r3, [sp, #0]
 800501e:	2301      	movs	r3, #1
 8005020:	2100      	movs	r1, #0
 8005022:	4879      	ldr	r0, [pc, #484]	; (8005208 <lcd_maVoiture+0x1b10>)
 8005024:	f002 f954 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005028:	2001      	movs	r0, #1
 800502a:	f001 fd31 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800502e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005032:	2364      	movs	r3, #100	; 0x64
 8005034:	9300      	str	r3, [sp, #0]
 8005036:	2301      	movs	r3, #1
 8005038:	2100      	movs	r1, #0
 800503a:	4873      	ldr	r0, [pc, #460]	; (8005208 <lcd_maVoiture+0x1b10>)
 800503c:	f002 f948 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005040:	2001      	movs	r0, #1
 8005042:	f001 fd25 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005046:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800504a:	2364      	movs	r3, #100	; 0x64
 800504c:	9300      	str	r3, [sp, #0]
 800504e:	2301      	movs	r3, #1
 8005050:	2100      	movs	r1, #0
 8005052:	486d      	ldr	r0, [pc, #436]	; (8005208 <lcd_maVoiture+0x1b10>)
 8005054:	f002 f93c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005058:	2001      	movs	r0, #1
 800505a:	f001 fd19 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800505e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005062:	2364      	movs	r3, #100	; 0x64
 8005064:	9300      	str	r3, [sp, #0]
 8005066:	2301      	movs	r3, #1
 8005068:	2100      	movs	r1, #0
 800506a:	4867      	ldr	r0, [pc, #412]	; (8005208 <lcd_maVoiture+0x1b10>)
 800506c:	f002 f930 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005070:	2001      	movs	r0, #1
 8005072:	f001 fd0d 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix1,1,100);
 8005076:	f107 021c 	add.w	r2, r7, #28
 800507a:	2364      	movs	r3, #100	; 0x64
 800507c:	9300      	str	r3, [sp, #0]
 800507e:	2301      	movs	r3, #1
 8005080:	2100      	movs	r1, #0
 8005082:	4861      	ldr	r0, [pc, #388]	; (8005208 <lcd_maVoiture+0x1b10>)
 8005084:	f002 f924 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005088:	2001      	movs	r0, #1
 800508a:	f001 fd01 	bl	8006a90 <HAL_Delay>



		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 800508e:	2364      	movs	r3, #100	; 0x64
 8005090:	9302      	str	r3, [sp, #8]
 8005092:	2301      	movs	r3, #1
 8005094:	9301      	str	r3, [sp, #4]
 8005096:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800509a:	9300      	str	r3, [sp, #0]
 800509c:	2301      	movs	r3, #1
 800509e:	2204      	movs	r2, #4
 80050a0:	2100      	movs	r1, #0
 80050a2:	4859      	ldr	r0, [pc, #356]	; (8005208 <lcd_maVoiture+0x1b10>)
 80050a4:	f002 fc38 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 80050a8:	2001      	movs	r0, #1
 80050aa:	f001 fcf1 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80050ae:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80050b2:	2364      	movs	r3, #100	; 0x64
 80050b4:	9300      	str	r3, [sp, #0]
 80050b6:	2301      	movs	r3, #1
 80050b8:	2100      	movs	r1, #0
 80050ba:	4853      	ldr	r0, [pc, #332]	; (8005208 <lcd_maVoiture+0x1b10>)
 80050bc:	f002 f908 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80050c0:	2001      	movs	r0, #1
 80050c2:	f001 fce5 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80050c6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80050ca:	2364      	movs	r3, #100	; 0x64
 80050cc:	9300      	str	r3, [sp, #0]
 80050ce:	2301      	movs	r3, #1
 80050d0:	2100      	movs	r1, #0
 80050d2:	484d      	ldr	r0, [pc, #308]	; (8005208 <lcd_maVoiture+0x1b10>)
 80050d4:	f002 f8fc 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80050d8:	2001      	movs	r0, #1
 80050da:	f001 fcd9 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80050de:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80050e2:	2364      	movs	r3, #100	; 0x64
 80050e4:	9300      	str	r3, [sp, #0]
 80050e6:	2301      	movs	r3, #1
 80050e8:	2100      	movs	r1, #0
 80050ea:	4847      	ldr	r0, [pc, #284]	; (8005208 <lcd_maVoiture+0x1b10>)
 80050ec:	f002 f8f0 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80050f0:	2001      	movs	r0, #1
 80050f2:	f001 fccd 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80050f6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80050fa:	2364      	movs	r3, #100	; 0x64
 80050fc:	9300      	str	r3, [sp, #0]
 80050fe:	2301      	movs	r3, #1
 8005100:	2100      	movs	r1, #0
 8005102:	4841      	ldr	r0, [pc, #260]	; (8005208 <lcd_maVoiture+0x1b10>)
 8005104:	f002 f8e4 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005108:	2001      	movs	r0, #1
 800510a:	f001 fcc1 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800510e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005112:	2364      	movs	r3, #100	; 0x64
 8005114:	9300      	str	r3, [sp, #0]
 8005116:	2301      	movs	r3, #1
 8005118:	2100      	movs	r1, #0
 800511a:	483b      	ldr	r0, [pc, #236]	; (8005208 <lcd_maVoiture+0x1b10>)
 800511c:	f002 f8d8 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005120:	2001      	movs	r0, #1
 8005122:	f001 fcb5 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005126:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800512a:	2364      	movs	r3, #100	; 0x64
 800512c:	9300      	str	r3, [sp, #0]
 800512e:	2301      	movs	r3, #1
 8005130:	2100      	movs	r1, #0
 8005132:	4835      	ldr	r0, [pc, #212]	; (8005208 <lcd_maVoiture+0x1b10>)
 8005134:	f002 f8cc 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005138:	2001      	movs	r0, #1
 800513a:	f001 fca9 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800513e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005142:	2364      	movs	r3, #100	; 0x64
 8005144:	9300      	str	r3, [sp, #0]
 8005146:	2301      	movs	r3, #1
 8005148:	2100      	movs	r1, #0
 800514a:	482f      	ldr	r0, [pc, #188]	; (8005208 <lcd_maVoiture+0x1b10>)
 800514c:	f002 f8c0 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005150:	2001      	movs	r0, #1
 8005152:	f001 fc9d 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005156:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800515a:	2364      	movs	r3, #100	; 0x64
 800515c:	9300      	str	r3, [sp, #0]
 800515e:	2301      	movs	r3, #1
 8005160:	2100      	movs	r1, #0
 8005162:	4829      	ldr	r0, [pc, #164]	; (8005208 <lcd_maVoiture+0x1b10>)
 8005164:	f002 f8b4 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005168:	2001      	movs	r0, #1
 800516a:	f001 fc91 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800516e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005172:	2364      	movs	r3, #100	; 0x64
 8005174:	9300      	str	r3, [sp, #0]
 8005176:	2301      	movs	r3, #1
 8005178:	2100      	movs	r1, #0
 800517a:	4823      	ldr	r0, [pc, #140]	; (8005208 <lcd_maVoiture+0x1b10>)
 800517c:	f002 f8a8 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005180:	2001      	movs	r0, #1
 8005182:	f001 fc85 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005186:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 800518a:	2364      	movs	r3, #100	; 0x64
 800518c:	9300      	str	r3, [sp, #0]
 800518e:	2301      	movs	r3, #1
 8005190:	2100      	movs	r1, #0
 8005192:	481d      	ldr	r0, [pc, #116]	; (8005208 <lcd_maVoiture+0x1b10>)
 8005194:	f002 f89c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005198:	2001      	movs	r0, #1
 800519a:	f001 fc79 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800519e:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80051a2:	2364      	movs	r3, #100	; 0x64
 80051a4:	9300      	str	r3, [sp, #0]
 80051a6:	2301      	movs	r3, #1
 80051a8:	2100      	movs	r1, #0
 80051aa:	4817      	ldr	r0, [pc, #92]	; (8005208 <lcd_maVoiture+0x1b10>)
 80051ac:	f002 f890 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80051b0:	2001      	movs	r0, #1
 80051b2:	f001 fc6d 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80051b6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80051ba:	2364      	movs	r3, #100	; 0x64
 80051bc:	9300      	str	r3, [sp, #0]
 80051be:	2301      	movs	r3, #1
 80051c0:	2100      	movs	r1, #0
 80051c2:	4811      	ldr	r0, [pc, #68]	; (8005208 <lcd_maVoiture+0x1b10>)
 80051c4:	f002 f884 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80051c8:	2001      	movs	r0, #1
 80051ca:	f001 fc61 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80051ce:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80051d2:	2364      	movs	r3, #100	; 0x64
 80051d4:	9300      	str	r3, [sp, #0]
 80051d6:	2301      	movs	r3, #1
 80051d8:	2100      	movs	r1, #0
 80051da:	480b      	ldr	r0, [pc, #44]	; (8005208 <lcd_maVoiture+0x1b10>)
 80051dc:	f002 f878 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80051e0:	2001      	movs	r0, #1
 80051e2:	f001 fc55 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80051e6:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80051ea:	2364      	movs	r3, #100	; 0x64
 80051ec:	9300      	str	r3, [sp, #0]
 80051ee:	2301      	movs	r3, #1
 80051f0:	2100      	movs	r1, #0
 80051f2:	4805      	ldr	r0, [pc, #20]	; (8005208 <lcd_maVoiture+0x1b10>)
 80051f4:	f002 f86c 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80051f8:	2001      	movs	r0, #1
 80051fa:	f001 fc49 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80051fe:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005202:	2364      	movs	r3, #100	; 0x64
 8005204:	9300      	str	r3, [sp, #0]
 8005206:	e001      	b.n	800520c <lcd_maVoiture+0x1b14>
 8005208:	200000a4 	.word	0x200000a4
 800520c:	2301      	movs	r3, #1
 800520e:	2100      	movs	r1, #0
 8005210:	48d8      	ldr	r0, [pc, #864]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005212:	f002 f85d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005216:	2001      	movs	r0, #1
 8005218:	f001 fc3a 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800521c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005220:	2364      	movs	r3, #100	; 0x64
 8005222:	9300      	str	r3, [sp, #0]
 8005224:	2301      	movs	r3, #1
 8005226:	2100      	movs	r1, #0
 8005228:	48d2      	ldr	r0, [pc, #840]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800522a:	f002 f851 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800522e:	2001      	movs	r0, #1
 8005230:	f001 fc2e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005234:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005238:	2364      	movs	r3, #100	; 0x64
 800523a:	9300      	str	r3, [sp, #0]
 800523c:	2301      	movs	r3, #1
 800523e:	2100      	movs	r1, #0
 8005240:	48cc      	ldr	r0, [pc, #816]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005242:	f002 f845 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005246:	2001      	movs	r0, #1
 8005248:	f001 fc22 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800524c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005250:	2364      	movs	r3, #100	; 0x64
 8005252:	9300      	str	r3, [sp, #0]
 8005254:	2301      	movs	r3, #1
 8005256:	2100      	movs	r1, #0
 8005258:	48c6      	ldr	r0, [pc, #792]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800525a:	f002 f839 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800525e:	2001      	movs	r0, #1
 8005260:	f001 fc16 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,pix5,1,100);
 8005264:	f107 020c 	add.w	r2, r7, #12
 8005268:	2364      	movs	r3, #100	; 0x64
 800526a:	9300      	str	r3, [sp, #0]
 800526c:	2301      	movs	r3, #1
 800526e:	2100      	movs	r1, #0
 8005270:	48c0      	ldr	r0, [pc, #768]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005272:	f002 f82d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005276:	2001      	movs	r0, #1
 8005278:	f001 fc0a 	bl	8006a90 <HAL_Delay>

		/*------------------------------------------------*/

		/*----FAIRE AVANCER LES PIXELS 1-2-3-4 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x03,1,space,1,100);
 800527c:	2364      	movs	r3, #100	; 0x64
 800527e:	9302      	str	r3, [sp, #8]
 8005280:	2301      	movs	r3, #1
 8005282:	9301      	str	r3, [sp, #4]
 8005284:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8005288:	9300      	str	r3, [sp, #0]
 800528a:	2301      	movs	r3, #1
 800528c:	2203      	movs	r2, #3
 800528e:	2100      	movs	r1, #0
 8005290:	48b8      	ldr	r0, [pc, #736]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005292:	f002 fb41 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8005296:	2001      	movs	r0, #1
 8005298:	f001 fbfa 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800529c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80052a0:	2364      	movs	r3, #100	; 0x64
 80052a2:	9300      	str	r3, [sp, #0]
 80052a4:	2301      	movs	r3, #1
 80052a6:	2100      	movs	r1, #0
 80052a8:	48b2      	ldr	r0, [pc, #712]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80052aa:	f002 f811 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80052ae:	2001      	movs	r0, #1
 80052b0:	f001 fbee 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80052b4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80052b8:	2364      	movs	r3, #100	; 0x64
 80052ba:	9300      	str	r3, [sp, #0]
 80052bc:	2301      	movs	r3, #1
 80052be:	2100      	movs	r1, #0
 80052c0:	48ac      	ldr	r0, [pc, #688]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80052c2:	f002 f805 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80052c6:	2001      	movs	r0, #1
 80052c8:	f001 fbe2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80052cc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80052d0:	2364      	movs	r3, #100	; 0x64
 80052d2:	9300      	str	r3, [sp, #0]
 80052d4:	2301      	movs	r3, #1
 80052d6:	2100      	movs	r1, #0
 80052d8:	48a6      	ldr	r0, [pc, #664]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80052da:	f001 fff9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80052de:	2001      	movs	r0, #1
 80052e0:	f001 fbd6 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80052e4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80052e8:	2364      	movs	r3, #100	; 0x64
 80052ea:	9300      	str	r3, [sp, #0]
 80052ec:	2301      	movs	r3, #1
 80052ee:	2100      	movs	r1, #0
 80052f0:	48a0      	ldr	r0, [pc, #640]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80052f2:	f001 ffed 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80052f6:	2001      	movs	r0, #1
 80052f8:	f001 fbca 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80052fc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005300:	2364      	movs	r3, #100	; 0x64
 8005302:	9300      	str	r3, [sp, #0]
 8005304:	2301      	movs	r3, #1
 8005306:	2100      	movs	r1, #0
 8005308:	489a      	ldr	r0, [pc, #616]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800530a:	f001 ffe1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800530e:	2001      	movs	r0, #1
 8005310:	f001 fbbe 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005314:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005318:	2364      	movs	r3, #100	; 0x64
 800531a:	9300      	str	r3, [sp, #0]
 800531c:	2301      	movs	r3, #1
 800531e:	2100      	movs	r1, #0
 8005320:	4894      	ldr	r0, [pc, #592]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005322:	f001 ffd5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005326:	2001      	movs	r0, #1
 8005328:	f001 fbb2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800532c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005330:	2364      	movs	r3, #100	; 0x64
 8005332:	9300      	str	r3, [sp, #0]
 8005334:	2301      	movs	r3, #1
 8005336:	2100      	movs	r1, #0
 8005338:	488e      	ldr	r0, [pc, #568]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800533a:	f001 ffc9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800533e:	2001      	movs	r0, #1
 8005340:	f001 fba6 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005344:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005348:	2364      	movs	r3, #100	; 0x64
 800534a:	9300      	str	r3, [sp, #0]
 800534c:	2301      	movs	r3, #1
 800534e:	2100      	movs	r1, #0
 8005350:	4888      	ldr	r0, [pc, #544]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005352:	f001 ffbd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005356:	2001      	movs	r0, #1
 8005358:	f001 fb9a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800535c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005360:	2364      	movs	r3, #100	; 0x64
 8005362:	9300      	str	r3, [sp, #0]
 8005364:	2301      	movs	r3, #1
 8005366:	2100      	movs	r1, #0
 8005368:	4882      	ldr	r0, [pc, #520]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800536a:	f001 ffb1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800536e:	2001      	movs	r0, #1
 8005370:	f001 fb8e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005374:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005378:	2364      	movs	r3, #100	; 0x64
 800537a:	9300      	str	r3, [sp, #0]
 800537c:	2301      	movs	r3, #1
 800537e:	2100      	movs	r1, #0
 8005380:	487c      	ldr	r0, [pc, #496]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005382:	f001 ffa5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005386:	2001      	movs	r0, #1
 8005388:	f001 fb82 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800538c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005390:	2364      	movs	r3, #100	; 0x64
 8005392:	9300      	str	r3, [sp, #0]
 8005394:	2301      	movs	r3, #1
 8005396:	2100      	movs	r1, #0
 8005398:	4876      	ldr	r0, [pc, #472]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800539a:	f001 ff99 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800539e:	2001      	movs	r0, #1
 80053a0:	f001 fb76 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80053a4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80053a8:	2364      	movs	r3, #100	; 0x64
 80053aa:	9300      	str	r3, [sp, #0]
 80053ac:	2301      	movs	r3, #1
 80053ae:	2100      	movs	r1, #0
 80053b0:	4870      	ldr	r0, [pc, #448]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80053b2:	f001 ff8d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80053b6:	2001      	movs	r0, #1
 80053b8:	f001 fb6a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80053bc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80053c0:	2364      	movs	r3, #100	; 0x64
 80053c2:	9300      	str	r3, [sp, #0]
 80053c4:	2301      	movs	r3, #1
 80053c6:	2100      	movs	r1, #0
 80053c8:	486a      	ldr	r0, [pc, #424]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80053ca:	f001 ff81 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80053ce:	2001      	movs	r0, #1
 80053d0:	f001 fb5e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80053d4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80053d8:	2364      	movs	r3, #100	; 0x64
 80053da:	9300      	str	r3, [sp, #0]
 80053dc:	2301      	movs	r3, #1
 80053de:	2100      	movs	r1, #0
 80053e0:	4864      	ldr	r0, [pc, #400]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80053e2:	f001 ff75 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80053e6:	2001      	movs	r0, #1
 80053e8:	f001 fb52 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80053ec:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80053f0:	2364      	movs	r3, #100	; 0x64
 80053f2:	9300      	str	r3, [sp, #0]
 80053f4:	2301      	movs	r3, #1
 80053f6:	2100      	movs	r1, #0
 80053f8:	485e      	ldr	r0, [pc, #376]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80053fa:	f001 ff69 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80053fe:	2001      	movs	r0, #1
 8005400:	f001 fb46 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005404:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005408:	2364      	movs	r3, #100	; 0x64
 800540a:	9300      	str	r3, [sp, #0]
 800540c:	2301      	movs	r3, #1
 800540e:	2100      	movs	r1, #0
 8005410:	4858      	ldr	r0, [pc, #352]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005412:	f001 ff5d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005416:	2001      	movs	r0, #1
 8005418:	f001 fb3a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800541c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005420:	2364      	movs	r3, #100	; 0x64
 8005422:	9300      	str	r3, [sp, #0]
 8005424:	2301      	movs	r3, #1
 8005426:	2100      	movs	r1, #0
 8005428:	4852      	ldr	r0, [pc, #328]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800542a:	f001 ff51 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800542e:	2001      	movs	r0, #1
 8005430:	f001 fb2e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005434:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005438:	2364      	movs	r3, #100	; 0x64
 800543a:	9300      	str	r3, [sp, #0]
 800543c:	2301      	movs	r3, #1
 800543e:	2100      	movs	r1, #0
 8005440:	484c      	ldr	r0, [pc, #304]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005442:	f001 ff45 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005446:	2001      	movs	r0, #1
 8005448:	f001 fb22 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800544c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005450:	2364      	movs	r3, #100	; 0x64
 8005452:	9300      	str	r3, [sp, #0]
 8005454:	2301      	movs	r3, #1
 8005456:	2100      	movs	r1, #0
 8005458:	4846      	ldr	r0, [pc, #280]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800545a:	f001 ff39 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800545e:	2001      	movs	r0, #1
 8005460:	f001 fb16 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005464:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005468:	2364      	movs	r3, #100	; 0x64
 800546a:	9300      	str	r3, [sp, #0]
 800546c:	2301      	movs	r3, #1
 800546e:	2100      	movs	r1, #0
 8005470:	4840      	ldr	r0, [pc, #256]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005472:	f001 ff2d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005476:	2001      	movs	r0, #1
 8005478:	f001 fb0a 	bl	8006a90 <HAL_Delay>



		/*----FAIRE AVANCER LES PIXELS 5-6-7-8 ----*/
		HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x04,1,space,1,100);
 800547c:	2364      	movs	r3, #100	; 0x64
 800547e:	9302      	str	r3, [sp, #8]
 8005480:	2301      	movs	r3, #1
 8005482:	9301      	str	r3, [sp, #4]
 8005484:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8005488:	9300      	str	r3, [sp, #0]
 800548a:	2301      	movs	r3, #1
 800548c:	2204      	movs	r2, #4
 800548e:	2100      	movs	r1, #0
 8005490:	4838      	ldr	r0, [pc, #224]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005492:	f002 fa41 	bl	8007918 <HAL_I2C_Mem_Write>
		HAL_Delay(1);
 8005496:	2001      	movs	r0, #1
 8005498:	f001 fafa 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800549c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80054a0:	2364      	movs	r3, #100	; 0x64
 80054a2:	9300      	str	r3, [sp, #0]
 80054a4:	2301      	movs	r3, #1
 80054a6:	2100      	movs	r1, #0
 80054a8:	4832      	ldr	r0, [pc, #200]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80054aa:	f001 ff11 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80054ae:	2001      	movs	r0, #1
 80054b0:	f001 faee 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80054b4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80054b8:	2364      	movs	r3, #100	; 0x64
 80054ba:	9300      	str	r3, [sp, #0]
 80054bc:	2301      	movs	r3, #1
 80054be:	2100      	movs	r1, #0
 80054c0:	482c      	ldr	r0, [pc, #176]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80054c2:	f001 ff05 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80054c6:	2001      	movs	r0, #1
 80054c8:	f001 fae2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80054cc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80054d0:	2364      	movs	r3, #100	; 0x64
 80054d2:	9300      	str	r3, [sp, #0]
 80054d4:	2301      	movs	r3, #1
 80054d6:	2100      	movs	r1, #0
 80054d8:	4826      	ldr	r0, [pc, #152]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80054da:	f001 fef9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80054de:	2001      	movs	r0, #1
 80054e0:	f001 fad6 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80054e4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80054e8:	2364      	movs	r3, #100	; 0x64
 80054ea:	9300      	str	r3, [sp, #0]
 80054ec:	2301      	movs	r3, #1
 80054ee:	2100      	movs	r1, #0
 80054f0:	4820      	ldr	r0, [pc, #128]	; (8005574 <lcd_maVoiture+0x1e7c>)
 80054f2:	f001 feed 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80054f6:	2001      	movs	r0, #1
 80054f8:	f001 faca 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80054fc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005500:	2364      	movs	r3, #100	; 0x64
 8005502:	9300      	str	r3, [sp, #0]
 8005504:	2301      	movs	r3, #1
 8005506:	2100      	movs	r1, #0
 8005508:	481a      	ldr	r0, [pc, #104]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800550a:	f001 fee1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800550e:	2001      	movs	r0, #1
 8005510:	f001 fabe 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005514:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005518:	2364      	movs	r3, #100	; 0x64
 800551a:	9300      	str	r3, [sp, #0]
 800551c:	2301      	movs	r3, #1
 800551e:	2100      	movs	r1, #0
 8005520:	4814      	ldr	r0, [pc, #80]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005522:	f001 fed5 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005526:	2001      	movs	r0, #1
 8005528:	f001 fab2 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800552c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005530:	2364      	movs	r3, #100	; 0x64
 8005532:	9300      	str	r3, [sp, #0]
 8005534:	2301      	movs	r3, #1
 8005536:	2100      	movs	r1, #0
 8005538:	480e      	ldr	r0, [pc, #56]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800553a:	f001 fec9 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800553e:	2001      	movs	r0, #1
 8005540:	f001 faa6 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005544:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005548:	2364      	movs	r3, #100	; 0x64
 800554a:	9300      	str	r3, [sp, #0]
 800554c:	2301      	movs	r3, #1
 800554e:	2100      	movs	r1, #0
 8005550:	4808      	ldr	r0, [pc, #32]	; (8005574 <lcd_maVoiture+0x1e7c>)
 8005552:	f001 febd 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005556:	2001      	movs	r0, #1
 8005558:	f001 fa9a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800555c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005560:	2364      	movs	r3, #100	; 0x64
 8005562:	9300      	str	r3, [sp, #0]
 8005564:	2301      	movs	r3, #1
 8005566:	2100      	movs	r1, #0
 8005568:	4802      	ldr	r0, [pc, #8]	; (8005574 <lcd_maVoiture+0x1e7c>)
 800556a:	f001 feb1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800556e:	2001      	movs	r0, #1
 8005570:	e002      	b.n	8005578 <lcd_maVoiture+0x1e80>
 8005572:	bf00      	nop
 8005574:	200000a4 	.word	0x200000a4
 8005578:	f001 fa8a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800557c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005580:	2364      	movs	r3, #100	; 0x64
 8005582:	9300      	str	r3, [sp, #0]
 8005584:	2301      	movs	r3, #1
 8005586:	2100      	movs	r1, #0
 8005588:	483f      	ldr	r0, [pc, #252]	; (8005688 <lcd_maVoiture+0x1f90>)
 800558a:	f001 fea1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800558e:	2001      	movs	r0, #1
 8005590:	f001 fa7e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005594:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005598:	2364      	movs	r3, #100	; 0x64
 800559a:	9300      	str	r3, [sp, #0]
 800559c:	2301      	movs	r3, #1
 800559e:	2100      	movs	r1, #0
 80055a0:	4839      	ldr	r0, [pc, #228]	; (8005688 <lcd_maVoiture+0x1f90>)
 80055a2:	f001 fe95 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80055a6:	2001      	movs	r0, #1
 80055a8:	f001 fa72 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80055ac:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80055b0:	2364      	movs	r3, #100	; 0x64
 80055b2:	9300      	str	r3, [sp, #0]
 80055b4:	2301      	movs	r3, #1
 80055b6:	2100      	movs	r1, #0
 80055b8:	4833      	ldr	r0, [pc, #204]	; (8005688 <lcd_maVoiture+0x1f90>)
 80055ba:	f001 fe89 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80055be:	2001      	movs	r0, #1
 80055c0:	f001 fa66 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80055c4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80055c8:	2364      	movs	r3, #100	; 0x64
 80055ca:	9300      	str	r3, [sp, #0]
 80055cc:	2301      	movs	r3, #1
 80055ce:	2100      	movs	r1, #0
 80055d0:	482d      	ldr	r0, [pc, #180]	; (8005688 <lcd_maVoiture+0x1f90>)
 80055d2:	f001 fe7d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80055d6:	2001      	movs	r0, #1
 80055d8:	f001 fa5a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80055dc:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80055e0:	2364      	movs	r3, #100	; 0x64
 80055e2:	9300      	str	r3, [sp, #0]
 80055e4:	2301      	movs	r3, #1
 80055e6:	2100      	movs	r1, #0
 80055e8:	4827      	ldr	r0, [pc, #156]	; (8005688 <lcd_maVoiture+0x1f90>)
 80055ea:	f001 fe71 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 80055ee:	2001      	movs	r0, #1
 80055f0:	f001 fa4e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80055f4:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80055f8:	2364      	movs	r3, #100	; 0x64
 80055fa:	9300      	str	r3, [sp, #0]
 80055fc:	2301      	movs	r3, #1
 80055fe:	2100      	movs	r1, #0
 8005600:	4821      	ldr	r0, [pc, #132]	; (8005688 <lcd_maVoiture+0x1f90>)
 8005602:	f001 fe65 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005606:	2001      	movs	r0, #1
 8005608:	f001 fa42 	bl	8006a90 <HAL_Delay>

		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800560c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005610:	2364      	movs	r3, #100	; 0x64
 8005612:	9300      	str	r3, [sp, #0]
 8005614:	2301      	movs	r3, #1
 8005616:	2100      	movs	r1, #0
 8005618:	481b      	ldr	r0, [pc, #108]	; (8005688 <lcd_maVoiture+0x1f90>)
 800561a:	f001 fe59 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800561e:	2001      	movs	r0, #1
 8005620:	f001 fa36 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005624:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005628:	2364      	movs	r3, #100	; 0x64
 800562a:	9300      	str	r3, [sp, #0]
 800562c:	2301      	movs	r3, #1
 800562e:	2100      	movs	r1, #0
 8005630:	4815      	ldr	r0, [pc, #84]	; (8005688 <lcd_maVoiture+0x1f90>)
 8005632:	f001 fe4d 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005636:	2001      	movs	r0, #1
 8005638:	f001 fa2a 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 800563c:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005640:	2364      	movs	r3, #100	; 0x64
 8005642:	9300      	str	r3, [sp, #0]
 8005644:	2301      	movs	r3, #1
 8005646:	2100      	movs	r1, #0
 8005648:	480f      	ldr	r0, [pc, #60]	; (8005688 <lcd_maVoiture+0x1f90>)
 800564a:	f001 fe41 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 800564e:	2001      	movs	r0, #1
 8005650:	f001 fa1e 	bl	8006a90 <HAL_Delay>
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 8005654:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8005658:	2364      	movs	r3, #100	; 0x64
 800565a:	9300      	str	r3, [sp, #0]
 800565c:	2301      	movs	r3, #1
 800565e:	2100      	movs	r1, #0
 8005660:	4809      	ldr	r0, [pc, #36]	; (8005688 <lcd_maVoiture+0x1f90>)
 8005662:	f001 fe35 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005666:	2001      	movs	r0, #1
 8005668:	f001 fa12 	bl	8006a90 <HAL_Delay>
	for(int i = 0; i<2; i++)
 800566c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8005670:	3301      	adds	r3, #1
 8005672:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8005676:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800567a:	2b01      	cmp	r3, #1
 800567c:	f77e a9be 	ble.w	80039fc <lcd_maVoiture+0x304>

	}

}
 8005680:	bf00      	nop
 8005682:	37a8      	adds	r7, #168	; 0xa8
 8005684:	46bd      	mov	sp, r7
 8005686:	bd80      	pop	{r7, pc}
 8005688:	200000a4 	.word	0x200000a4

0800568c <lcd_Veille>:

}

/* Fonction pour mettre l'ecran en veille */
void lcd_Veille(int tpsActif)
{
 800568c:	b580      	push	{r7, lr}
 800568e:	b082      	sub	sp, #8
 8005690:	af00      	add	r7, sp, #0
 8005692:	6078      	str	r0, [r7, #4]
	/*----MISE EN VEILLE AU BOUT DE 30S----*/
	/*----     MODIF TEMPS EN MS	   ----*/
	if(tpsCourant - tpsActif >= 30000)
 8005694:	4b06      	ldr	r3, [pc, #24]	; (80056b0 <lcd_Veille+0x24>)
 8005696:	681a      	ldr	r2, [r3, #0]
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	1ad3      	subs	r3, r2, r3
 800569c:	f247 522f 	movw	r2, #29999	; 0x752f
 80056a0:	4293      	cmp	r3, r2
 80056a2:	dd01      	ble.n	80056a8 <lcd_Veille+0x1c>
	{
		lcd_off();
 80056a4:	f7fe f80e 	bl	80036c4 <lcd_off>
	}
}
 80056a8:	bf00      	nop
 80056aa:	3708      	adds	r7, #8
 80056ac:	46bd      	mov	sp, r7
 80056ae:	bd80      	pop	{r7, pc}
 80056b0:	20000100 	.word	0x20000100

080056b4 <lcd_ModeAuto>:

void lcd_ModeAuto(void)
{
 80056b4:	b580      	push	{r7, lr}
 80056b6:	b08e      	sub	sp, #56	; 0x38
 80056b8:	af04      	add	r7, sp, #16

	/*----CARACTERE SPECIAUX UTILE----*/
	uint8_t carreNoir[1]={0xFF};
 80056ba:	23ff      	movs	r3, #255	; 0xff
 80056bc:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	uint8_t space[1]={0xFE};
 80056c0:	23fe      	movs	r3, #254	; 0xfe
 80056c2:	f887 3020 	strb.w	r3, [r7, #32]

	/*----CREATION DE MA FLECHE----*/
	uint8_t cmdPixFleche[13]={0x1B, 0x44,0x08, 0x08, 0x04, 0x02, 0x01, 0x01, 0x02, 0x04, 0x08};
 80056c6:	f107 0310 	add.w	r3, r7, #16
 80056ca:	2200      	movs	r2, #0
 80056cc:	601a      	str	r2, [r3, #0]
 80056ce:	605a      	str	r2, [r3, #4]
 80056d0:	609a      	str	r2, [r3, #8]
 80056d2:	731a      	strb	r2, [r3, #12]
 80056d4:	231b      	movs	r3, #27
 80056d6:	743b      	strb	r3, [r7, #16]
 80056d8:	2344      	movs	r3, #68	; 0x44
 80056da:	747b      	strb	r3, [r7, #17]
 80056dc:	2308      	movs	r3, #8
 80056de:	74bb      	strb	r3, [r7, #18]
 80056e0:	2308      	movs	r3, #8
 80056e2:	74fb      	strb	r3, [r7, #19]
 80056e4:	2304      	movs	r3, #4
 80056e6:	753b      	strb	r3, [r7, #20]
 80056e8:	2302      	movs	r3, #2
 80056ea:	757b      	strb	r3, [r7, #21]
 80056ec:	2301      	movs	r3, #1
 80056ee:	75bb      	strb	r3, [r7, #22]
 80056f0:	2301      	movs	r3, #1
 80056f2:	75fb      	strb	r3, [r7, #23]
 80056f4:	2302      	movs	r3, #2
 80056f6:	763b      	strb	r3, [r7, #24]
 80056f8:	2304      	movs	r3, #4
 80056fa:	767b      	strb	r3, [r7, #25]
 80056fc:	2308      	movs	r3, #8
 80056fe:	76bb      	strb	r3, [r7, #26]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPixFleche,13,100);
 8005700:	f107 0210 	add.w	r2, r7, #16
 8005704:	2364      	movs	r3, #100	; 0x64
 8005706:	9300      	str	r3, [sp, #0]
 8005708:	230d      	movs	r3, #13
 800570a:	2100      	movs	r1, #0
 800570c:	485c      	ldr	r0, [pc, #368]	; (8005880 <lcd_ModeAuto+0x1cc>)
 800570e:	f001 fddf 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005712:	2001      	movs	r0, #1
 8005714:	f001 f9bc 	bl	8006a90 <HAL_Delay>

	/*----BLOCAGE INTERFACE MODE AUTO----*/
	onePush3 = 1;
 8005718:	4b5a      	ldr	r3, [pc, #360]	; (8005884 <lcd_ModeAuto+0x1d0>)
 800571a:	2201      	movs	r2, #1
 800571c:	601a      	str	r2, [r3, #0]

	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD,0x01,1,carreNoir,1,100);
 800571e:	2364      	movs	r3, #100	; 0x64
 8005720:	9302      	str	r3, [sp, #8]
 8005722:	2301      	movs	r3, #1
 8005724:	9301      	str	r3, [sp, #4]
 8005726:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800572a:	9300      	str	r3, [sp, #0]
 800572c:	2301      	movs	r3, #1
 800572e:	2201      	movs	r2, #1
 8005730:	2100      	movs	r1, #0
 8005732:	4853      	ldr	r0, [pc, #332]	; (8005880 <lcd_ModeAuto+0x1cc>)
 8005734:	f002 f8f0 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 8005738:	2001      	movs	r0, #1
 800573a:	f001 f9a9 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800573e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8005742:	2364      	movs	r3, #100	; 0x64
 8005744:	9300      	str	r3, [sp, #0]
 8005746:	2301      	movs	r3, #1
 8005748:	2100      	movs	r1, #0
 800574a:	484d      	ldr	r0, [pc, #308]	; (8005880 <lcd_ModeAuto+0x1cc>)
 800574c:	f001 fdc0 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005750:	2001      	movs	r0, #1
 8005752:	f001 f99d 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8005756:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800575a:	2364      	movs	r3, #100	; 0x64
 800575c:	9300      	str	r3, [sp, #0]
 800575e:	2301      	movs	r3, #1
 8005760:	2100      	movs	r1, #0
 8005762:	4847      	ldr	r0, [pc, #284]	; (8005880 <lcd_ModeAuto+0x1cc>)
 8005764:	f001 fdb4 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005768:	2001      	movs	r0, #1
 800576a:	f001 f991 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 800576e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8005772:	2364      	movs	r3, #100	; 0x64
 8005774:	9300      	str	r3, [sp, #0]
 8005776:	2301      	movs	r3, #1
 8005778:	2100      	movs	r1, #0
 800577a:	4841      	ldr	r0, [pc, #260]	; (8005880 <lcd_ModeAuto+0x1cc>)
 800577c:	f001 fda8 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005780:	2001      	movs	r0, #1
 8005782:	f001 f985 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x10, 1, (uint8_t *)"MODE  AUTO",10,100);
 8005786:	2364      	movs	r3, #100	; 0x64
 8005788:	9302      	str	r3, [sp, #8]
 800578a:	230a      	movs	r3, #10
 800578c:	9301      	str	r3, [sp, #4]
 800578e:	4b3e      	ldr	r3, [pc, #248]	; (8005888 <lcd_ModeAuto+0x1d4>)
 8005790:	9300      	str	r3, [sp, #0]
 8005792:	2301      	movs	r3, #1
 8005794:	2210      	movs	r2, #16
 8005796:	2100      	movs	r1, #0
 8005798:	4839      	ldr	r0, [pc, #228]	; (8005880 <lcd_ModeAuto+0x1cc>)
 800579a:	f002 f8bd 	bl	8007918 <HAL_I2C_Mem_Write>
	HAL_Delay(1);
 800579e:	2001      	movs	r0, #1
 80057a0:	f001 f976 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,space,1,100);
 80057a4:	f107 0220 	add.w	r2, r7, #32
 80057a8:	2364      	movs	r3, #100	; 0x64
 80057aa:	9300      	str	r3, [sp, #0]
 80057ac:	2301      	movs	r3, #1
 80057ae:	2100      	movs	r1, #0
 80057b0:	4833      	ldr	r0, [pc, #204]	; (8005880 <lcd_ModeAuto+0x1cc>)
 80057b2:	f001 fd8d 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80057b6:	2001      	movs	r0, #1
 80057b8:	f001 f96a 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80057bc:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80057c0:	2364      	movs	r3, #100	; 0x64
 80057c2:	9300      	str	r3, [sp, #0]
 80057c4:	2301      	movs	r3, #1
 80057c6:	2100      	movs	r1, #0
 80057c8:	482d      	ldr	r0, [pc, #180]	; (8005880 <lcd_ModeAuto+0x1cc>)
 80057ca:	f001 fd81 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80057ce:	2001      	movs	r0, #1
 80057d0:	f001 f95e 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80057d4:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80057d8:	2364      	movs	r3, #100	; 0x64
 80057da:	9300      	str	r3, [sp, #0]
 80057dc:	2301      	movs	r3, #1
 80057de:	2100      	movs	r1, #0
 80057e0:	4827      	ldr	r0, [pc, #156]	; (8005880 <lcd_ModeAuto+0x1cc>)
 80057e2:	f001 fd75 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80057e6:	2001      	movs	r0, #1
 80057e8:	f001 f952 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 80057ec:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80057f0:	2364      	movs	r3, #100	; 0x64
 80057f2:	9300      	str	r3, [sp, #0]
 80057f4:	2301      	movs	r3, #1
 80057f6:	2100      	movs	r1, #0
 80057f8:	4821      	ldr	r0, [pc, #132]	; (8005880 <lcd_ModeAuto+0x1cc>)
 80057fa:	f001 fd69 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80057fe:	2001      	movs	r0, #1
 8005800:	f001 f946 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,carreNoir,1,100);
 8005804:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8005808:	2364      	movs	r3, #100	; 0x64
 800580a:	9300      	str	r3, [sp, #0]
 800580c:	2301      	movs	r3, #1
 800580e:	2100      	movs	r1, #0
 8005810:	481b      	ldr	r0, [pc, #108]	; (8005880 <lcd_ModeAuto+0x1cc>)
 8005812:	f001 fd5d 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005816:	2001      	movs	r0, #1
 8005818:	f001 f93a 	bl	8006a90 <HAL_Delay>


	/*----AJOUT DE LA FLECHE DE SELECTION----*/
	uint8_t cmdTPFleche[5]={0x1B, 0x4C, 0x0C, 0x03, 0x08};
 800581c:	4a1b      	ldr	r2, [pc, #108]	; (800588c <lcd_ModeAuto+0x1d8>)
 800581e:	f107 0308 	add.w	r3, r7, #8
 8005822:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005826:	6018      	str	r0, [r3, #0]
 8005828:	3304      	adds	r3, #4
 800582a:	7019      	strb	r1, [r3, #0]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdTPFleche,5,100);
 800582c:	f107 0208 	add.w	r2, r7, #8
 8005830:	2364      	movs	r3, #100	; 0x64
 8005832:	9300      	str	r3, [sp, #0]
 8005834:	2305      	movs	r3, #5
 8005836:	2100      	movs	r1, #0
 8005838:	4811      	ldr	r0, [pc, #68]	; (8005880 <lcd_ModeAuto+0x1cc>)
 800583a:	f001 fd49 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 800583e:	2001      	movs	r0, #1
 8005840:	f001 f926 	bl	8006a90 <HAL_Delay>

	/*----ECRITURE DU MOT QUITTER----*/
	uint8_t cmdTPQuitter[4]={0x1B, 0x4C, 0x0D, 0x03};
 8005844:	4b12      	ldr	r3, [pc, #72]	; (8005890 <lcd_ModeAuto+0x1dc>)
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	607b      	str	r3, [r7, #4]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdTPQuitter,4,100);
 800584a:	1d3a      	adds	r2, r7, #4
 800584c:	2364      	movs	r3, #100	; 0x64
 800584e:	9300      	str	r3, [sp, #0]
 8005850:	2304      	movs	r3, #4
 8005852:	2100      	movs	r1, #0
 8005854:	480a      	ldr	r0, [pc, #40]	; (8005880 <lcd_ModeAuto+0x1cc>)
 8005856:	f001 fd3b 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 800585a:	2001      	movs	r0, #1
 800585c:	f001 f918 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,(uint8_t *)"QUITTER",7,100);
 8005860:	2364      	movs	r3, #100	; 0x64
 8005862:	9300      	str	r3, [sp, #0]
 8005864:	2307      	movs	r3, #7
 8005866:	4a0b      	ldr	r2, [pc, #44]	; (8005894 <lcd_ModeAuto+0x1e0>)
 8005868:	2100      	movs	r1, #0
 800586a:	4805      	ldr	r0, [pc, #20]	; (8005880 <lcd_ModeAuto+0x1cc>)
 800586c:	f001 fd30 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005870:	2001      	movs	r0, #1
 8005872:	f001 f90d 	bl	8006a90 <HAL_Delay>



}
 8005876:	bf00      	nop
 8005878:	3728      	adds	r7, #40	; 0x28
 800587a:	46bd      	mov	sp, r7
 800587c:	bd80      	pop	{r7, pc}
 800587e:	bf00      	nop
 8005880:	200000a4 	.word	0x200000a4
 8005884:	200001f8 	.word	0x200001f8
 8005888:	0800a874 	.word	0x0800a874
 800588c:	0800a888 	.word	0x0800a888
 8005890:	0800a890 	.word	0x0800a890
 8005894:	0800a880 	.word	0x0800a880

08005898 <lcd_Navig>:
void lcd_Navig()
{
 8005898:	b580      	push	{r7, lr}
 800589a:	b084      	sub	sp, #16
 800589c:	af02      	add	r7, sp, #8
	/*----DESACTIVER CURSEUR MOCHE----*/
	uint8_t cmdCursOFF[2]={0x1B, 0x73};
 800589e:	4b30      	ldr	r3, [pc, #192]	; (8005960 <lcd_Navig+0xc8>)
 80058a0:	881b      	ldrh	r3, [r3, #0]
 80058a2:	80bb      	strh	r3, [r7, #4]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdCursOFF,2,100);
 80058a4:	1d3a      	adds	r2, r7, #4
 80058a6:	2364      	movs	r3, #100	; 0x64
 80058a8:	9300      	str	r3, [sp, #0]
 80058aa:	2302      	movs	r3, #2
 80058ac:	2100      	movs	r1, #0
 80058ae:	482d      	ldr	r0, [pc, #180]	; (8005964 <lcd_Navig+0xcc>)
 80058b0:	f001 fd0e 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 80058b4:	2001      	movs	r0, #1
 80058b6:	f001 f8eb 	bl	8006a90 <HAL_Delay>

	/*-----BOUTON POUR CHANGER D'INTERFACE----*/
	clicBtnInterface();
 80058ba:	f000 fa57 	bl	8005d6c <clicBtnInterface>
	/*----FIN DE LA PARTIE CONCERNANT LE BOUTON POUSSOIR DE L'INTERFACE----*/
	if(buttonInterface == 1 || nb == 1)
 80058be:	4b2a      	ldr	r3, [pc, #168]	; (8005968 <lcd_Navig+0xd0>)
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	2b01      	cmp	r3, #1
 80058c4:	d003      	beq.n	80058ce <lcd_Navig+0x36>
 80058c6:	4b29      	ldr	r3, [pc, #164]	; (800596c <lcd_Navig+0xd4>)
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	2b01      	cmp	r3, #1
 80058cc:	d10e      	bne.n	80058ec <lcd_Navig+0x54>
	{
		lcd_interfacePrinc(buttonDistance, buttonVitesse,tpsCourant);
 80058ce:	4b28      	ldr	r3, [pc, #160]	; (8005970 <lcd_Navig+0xd8>)
 80058d0:	6818      	ldr	r0, [r3, #0]
 80058d2:	4b28      	ldr	r3, [pc, #160]	; (8005974 <lcd_Navig+0xdc>)
 80058d4:	6819      	ldr	r1, [r3, #0]
 80058d6:	4b28      	ldr	r3, [pc, #160]	; (8005978 <lcd_Navig+0xe0>)
 80058d8:	681b      	ldr	r3, [r3, #0]
 80058da:	461a      	mov	r2, r3
 80058dc:	f7fd fd4a 	bl	8003374 <lcd_interfacePrinc>
		/*----MISE EN VEILLE----*/
		lcd_Veille(ecranActif);
 80058e0:	4b26      	ldr	r3, [pc, #152]	; (800597c <lcd_Navig+0xe4>)
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	4618      	mov	r0, r3
 80058e6:	f7ff fed1 	bl	800568c <lcd_Veille>
 80058ea:	e034      	b.n	8005956 <lcd_Navig+0xbe>
	}
	else if(buttonInterface == 2 || nb == 2)
 80058ec:	4b1e      	ldr	r3, [pc, #120]	; (8005968 <lcd_Navig+0xd0>)
 80058ee:	681b      	ldr	r3, [r3, #0]
 80058f0:	2b02      	cmp	r3, #2
 80058f2:	d003      	beq.n	80058fc <lcd_Navig+0x64>
 80058f4:	4b1d      	ldr	r3, [pc, #116]	; (800596c <lcd_Navig+0xd4>)
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	2b02      	cmp	r3, #2
 80058fa:	d10a      	bne.n	8005912 <lcd_Navig+0x7a>
	{
		lcd_affDistance(distance);
 80058fc:	4b20      	ldr	r3, [pc, #128]	; (8005980 <lcd_Navig+0xe8>)
 80058fe:	681b      	ldr	r3, [r3, #0]
 8005900:	4618      	mov	r0, r3
 8005902:	f7fd fc4d 	bl	80031a0 <lcd_affDistance>
		/*----MISE EN VEILLE----*/
		lcd_Veille(ecranActif);
 8005906:	4b1d      	ldr	r3, [pc, #116]	; (800597c <lcd_Navig+0xe4>)
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	4618      	mov	r0, r3
 800590c:	f7ff febe 	bl	800568c <lcd_Veille>
 8005910:	e021      	b.n	8005956 <lcd_Navig+0xbe>
	}
	else if(buttonInterface == 3 || nb == 3)
 8005912:	4b15      	ldr	r3, [pc, #84]	; (8005968 <lcd_Navig+0xd0>)
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	2b03      	cmp	r3, #3
 8005918:	d003      	beq.n	8005922 <lcd_Navig+0x8a>
 800591a:	4b14      	ldr	r3, [pc, #80]	; (800596c <lcd_Navig+0xd4>)
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	2b03      	cmp	r3, #3
 8005920:	d103      	bne.n	800592a <lcd_Navig+0x92>
	{
		buttonInterface = 1;
 8005922:	4b11      	ldr	r3, [pc, #68]	; (8005968 <lcd_Navig+0xd0>)
 8005924:	2201      	movs	r2, #1
 8005926:	601a      	str	r2, [r3, #0]
 8005928:	e015      	b.n	8005956 <lcd_Navig+0xbe>
	}
	/*----INTERFACE NON VISIBLE PAR SELECTION----*/
	else if(buttonInterface == 6 || nb == 6)
 800592a:	4b0f      	ldr	r3, [pc, #60]	; (8005968 <lcd_Navig+0xd0>)
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	2b06      	cmp	r3, #6
 8005930:	d003      	beq.n	800593a <lcd_Navig+0xa2>
 8005932:	4b0e      	ldr	r3, [pc, #56]	; (800596c <lcd_Navig+0xd4>)
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	2b06      	cmp	r3, #6
 8005938:	d102      	bne.n	8005940 <lcd_Navig+0xa8>
	{
		lcd_transition();
 800593a:	f000 f823 	bl	8005984 <lcd_transition>
 800593e:	e00a      	b.n	8005956 <lcd_Navig+0xbe>
	}
	else if(buttonInterface == 7 || nb == 7)
 8005940:	4b09      	ldr	r3, [pc, #36]	; (8005968 <lcd_Navig+0xd0>)
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	2b07      	cmp	r3, #7
 8005946:	d003      	beq.n	8005950 <lcd_Navig+0xb8>
 8005948:	4b08      	ldr	r3, [pc, #32]	; (800596c <lcd_Navig+0xd4>)
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	2b07      	cmp	r3, #7
 800594e:	d102      	bne.n	8005956 <lcd_Navig+0xbe>
	{
		lcd_ModeAuto();
 8005950:	f7ff feb0 	bl	80056b4 <lcd_ModeAuto>
	}
}
 8005954:	e7ff      	b.n	8005956 <lcd_Navig+0xbe>
 8005956:	bf00      	nop
 8005958:	3708      	adds	r7, #8
 800595a:	46bd      	mov	sp, r7
 800595c:	bd80      	pop	{r7, pc}
 800595e:	bf00      	nop
 8005960:	0800a894 	.word	0x0800a894
 8005964:	200000a4 	.word	0x200000a4
 8005968:	20000150 	.word	0x20000150
 800596c:	200001b0 	.word	0x200001b0
 8005970:	2000015c 	.word	0x2000015c
 8005974:	200001a4 	.word	0x200001a4
 8005978:	20000100 	.word	0x20000100
 800597c:	200000f8 	.word	0x200000f8
 8005980:	20000104 	.word	0x20000104

08005984 <lcd_transition>:

void lcd_transition(void)
{
 8005984:	b580      	push	{r7, lr}
 8005986:	b092      	sub	sp, #72	; 0x48
 8005988:	af04      	add	r7, sp, #16

	/*-----BOUTON POUR CHANGER LE CHOIX----*/
	clicBtnChoix();
 800598a:	f000 fa25 	bl	8005dd8 <clicBtnChoix>
	/*----FIN DE LA PARTIE CONCERNANT LE BOUTON POUSSOIR DES CHOIX----*/

	/*-----BOUTON POUR VALIDER LE CHOIX----*/
	clicBtnValide();
 800598e:	f000 fa57 	bl	8005e40 <clicBtnValide>
	/*----FIN DE LA PARTIE CONCERNANT LE BOUTON POUSSOIR DE VALIDATION----*/


	/*----BLOCAGE CHANGEMENT D'INTERFACE----*/
	onePush3 = 1;
 8005992:	4b73      	ldr	r3, [pc, #460]	; (8005b60 <lcd_transition+0x1dc>)
 8005994:	2201      	movs	r2, #1
 8005996:	601a      	str	r2, [r3, #0]
	HAL_I2C_Mem_Write(&hi2c1,LCD_ADD, 0x01, 1, (uint8_t *)"PASSER EN MODE AUTO?",20,100);
 8005998:	2364      	movs	r3, #100	; 0x64
 800599a:	9302      	str	r3, [sp, #8]
 800599c:	2314      	movs	r3, #20
 800599e:	9301      	str	r3, [sp, #4]
 80059a0:	4b70      	ldr	r3, [pc, #448]	; (8005b64 <lcd_transition+0x1e0>)
 80059a2:	9300      	str	r3, [sp, #0]
 80059a4:	2301      	movs	r3, #1
 80059a6:	2201      	movs	r2, #1
 80059a8:	2100      	movs	r1, #0
 80059aa:	486f      	ldr	r0, [pc, #444]	; (8005b68 <lcd_transition+0x1e4>)
 80059ac:	f001 ffb4 	bl	8007918 <HAL_I2C_Mem_Write>
	/*----NE PAS OUBLIER DE REPASSER LE ONEPUSH3 A 0 APRES----*/

	/*----CREATION DE MA FLECHE----*/
	uint8_t cmdPixFleche[13]={0x1B, 0x44,0x08, 0x08, 0x04, 0x02, 0x01, 0x01, 0x02, 0x04, 0x08};
 80059b0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80059b4:	2200      	movs	r2, #0
 80059b6:	601a      	str	r2, [r3, #0]
 80059b8:	605a      	str	r2, [r3, #4]
 80059ba:	609a      	str	r2, [r3, #8]
 80059bc:	731a      	strb	r2, [r3, #12]
 80059be:	231b      	movs	r3, #27
 80059c0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80059c4:	2344      	movs	r3, #68	; 0x44
 80059c6:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80059ca:	2308      	movs	r3, #8
 80059cc:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 80059d0:	2308      	movs	r3, #8
 80059d2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80059d6:	2304      	movs	r3, #4
 80059d8:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 80059dc:	2302      	movs	r3, #2
 80059de:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 80059e2:	2301      	movs	r3, #1
 80059e4:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 80059e8:	2301      	movs	r3, #1
 80059ea:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80059ee:	2302      	movs	r3, #2
 80059f0:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
 80059f4:	2304      	movs	r3, #4
 80059f6:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 80059fa:	2308      	movs	r3, #8
 80059fc:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdPixFleche,13,100);
 8005a00:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8005a04:	2364      	movs	r3, #100	; 0x64
 8005a06:	9300      	str	r3, [sp, #0]
 8005a08:	230d      	movs	r3, #13
 8005a0a:	2100      	movs	r1, #0
 8005a0c:	4856      	ldr	r0, [pc, #344]	; (8005b68 <lcd_transition+0x1e4>)
 8005a0e:	f001 fc5f 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005a12:	2001      	movs	r0, #1
 8005a14:	f001 f83c 	bl	8006a90 <HAL_Delay>

	/*----ECRITURE A L'ECRAN DE OUI ET NON----*/

	/*----JE ME TP A LA POSITION VOULUE POUR LE OUI----*/
	uint8_t cmdTPOui[4]={0x1B, 0x4C, 0x04, 0x02};
 8005a18:	4b54      	ldr	r3, [pc, #336]	; (8005b6c <lcd_transition+0x1e8>)
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	627b      	str	r3, [r7, #36]	; 0x24
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdTPOui,4,100);
 8005a1e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8005a22:	2364      	movs	r3, #100	; 0x64
 8005a24:	9300      	str	r3, [sp, #0]
 8005a26:	2304      	movs	r3, #4
 8005a28:	2100      	movs	r1, #0
 8005a2a:	484f      	ldr	r0, [pc, #316]	; (8005b68 <lcd_transition+0x1e4>)
 8005a2c:	f001 fc50 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005a30:	2001      	movs	r0, #1
 8005a32:	f001 f82d 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,(uint8_t *)"OUI",3,100);
 8005a36:	2364      	movs	r3, #100	; 0x64
 8005a38:	9300      	str	r3, [sp, #0]
 8005a3a:	2303      	movs	r3, #3
 8005a3c:	4a4c      	ldr	r2, [pc, #304]	; (8005b70 <lcd_transition+0x1ec>)
 8005a3e:	2100      	movs	r1, #0
 8005a40:	4849      	ldr	r0, [pc, #292]	; (8005b68 <lcd_transition+0x1e4>)
 8005a42:	f001 fc45 	bl	80072d0 <HAL_I2C_Master_Transmit>
	/*----FIN DU TP----*/

	/*----JE ME TP A LA POSITION VOULUE POUR LE NON----*/
	uint8_t cmdTPNon[4]={0x1B, 0x4C, 0x0D, 0x02};
 8005a46:	4b4b      	ldr	r3, [pc, #300]	; (8005b74 <lcd_transition+0x1f0>)
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	623b      	str	r3, [r7, #32]
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdTPNon,4,100);
 8005a4c:	f107 0220 	add.w	r2, r7, #32
 8005a50:	2364      	movs	r3, #100	; 0x64
 8005a52:	9300      	str	r3, [sp, #0]
 8005a54:	2304      	movs	r3, #4
 8005a56:	2100      	movs	r1, #0
 8005a58:	4843      	ldr	r0, [pc, #268]	; (8005b68 <lcd_transition+0x1e4>)
 8005a5a:	f001 fc39 	bl	80072d0 <HAL_I2C_Master_Transmit>
	HAL_Delay(1);
 8005a5e:	2001      	movs	r0, #1
 8005a60:	f001 f816 	bl	8006a90 <HAL_Delay>
	HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,(uint8_t *)"NON",3,100);
 8005a64:	2364      	movs	r3, #100	; 0x64
 8005a66:	9300      	str	r3, [sp, #0]
 8005a68:	2303      	movs	r3, #3
 8005a6a:	4a43      	ldr	r2, [pc, #268]	; (8005b78 <lcd_transition+0x1f4>)
 8005a6c:	2100      	movs	r1, #0
 8005a6e:	483e      	ldr	r0, [pc, #248]	; (8005b68 <lcd_transition+0x1e4>)
 8005a70:	f001 fc2e 	bl	80072d0 <HAL_I2C_Master_Transmit>
	/*----FIN DU TP----*/

	/*----SI JE DIT OUI----*/
	if(buttonChoix == 1)
 8005a74:	4b41      	ldr	r3, [pc, #260]	; (8005b7c <lcd_transition+0x1f8>)
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	2b01      	cmp	r3, #1
 8005a7a:	d131      	bne.n	8005ae0 <lcd_transition+0x15c>
	{
		/*----METTRE FLECHE A OUI----*/
		uint8_t cmdTPFleche[5]={0x1B, 0x4C, 0x03, 0x02, 0x08};
 8005a7c:	4a40      	ldr	r2, [pc, #256]	; (8005b80 <lcd_transition+0x1fc>)
 8005a7e:	f107 0318 	add.w	r3, r7, #24
 8005a82:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005a86:	6018      	str	r0, [r3, #0]
 8005a88:	3304      	adds	r3, #4
 8005a8a:	7019      	strb	r1, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdTPFleche,5,100);
 8005a8c:	f107 0218 	add.w	r2, r7, #24
 8005a90:	2364      	movs	r3, #100	; 0x64
 8005a92:	9300      	str	r3, [sp, #0]
 8005a94:	2305      	movs	r3, #5
 8005a96:	2100      	movs	r1, #0
 8005a98:	4833      	ldr	r0, [pc, #204]	; (8005b68 <lcd_transition+0x1e4>)
 8005a9a:	f001 fc19 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005a9e:	2001      	movs	r0, #1
 8005aa0:	f000 fff6 	bl	8006a90 <HAL_Delay>

		/*----ENLEVER FLECHE A NON----*/
		uint8_t cmdRmFlecheNon[5]={0x1B, 0x4C, 0x0C, 0x02, 0xFE};
 8005aa4:	4a37      	ldr	r2, [pc, #220]	; (8005b84 <lcd_transition+0x200>)
 8005aa6:	f107 0310 	add.w	r3, r7, #16
 8005aaa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005aae:	6018      	str	r0, [r3, #0]
 8005ab0:	3304      	adds	r3, #4
 8005ab2:	7019      	strb	r1, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdRmFlecheNon,5,100);
 8005ab4:	f107 0210 	add.w	r2, r7, #16
 8005ab8:	2364      	movs	r3, #100	; 0x64
 8005aba:	9300      	str	r3, [sp, #0]
 8005abc:	2305      	movs	r3, #5
 8005abe:	2100      	movs	r1, #0
 8005ac0:	4829      	ldr	r0, [pc, #164]	; (8005b68 <lcd_transition+0x1e4>)
 8005ac2:	f001 fc05 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005ac6:	2001      	movs	r0, #1
 8005ac8:	f000 ffe2 	bl	8006a90 <HAL_Delay>

		if(buttonValide == 1)
 8005acc:	4b2e      	ldr	r3, [pc, #184]	; (8005b88 <lcd_transition+0x204>)
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	2b01      	cmp	r3, #1
 8005ad2:	d141      	bne.n	8005b58 <lcd_transition+0x1d4>
		{
			/*----A FAIRE----*/
			lcd_clear();
 8005ad4:	f7fb f9cc 	bl	8000e70 <lcd_clear>
			buttonInterface = 7;
 8005ad8:	4b2c      	ldr	r3, [pc, #176]	; (8005b8c <lcd_transition+0x208>)
 8005ada:	2207      	movs	r2, #7
 8005adc:	601a      	str	r2, [r3, #0]
	{
		buttonChoix = 1;
	}


}
 8005ade:	e03b      	b.n	8005b58 <lcd_transition+0x1d4>
	else if(buttonChoix == 2)
 8005ae0:	4b26      	ldr	r3, [pc, #152]	; (8005b7c <lcd_transition+0x1f8>)
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	2b02      	cmp	r3, #2
 8005ae6:	d130      	bne.n	8005b4a <lcd_transition+0x1c6>
		uint8_t cmdTPFleche[5]={0x1B, 0x4C, 0x0C, 0x02, 0x08};
 8005ae8:	4a29      	ldr	r2, [pc, #164]	; (8005b90 <lcd_transition+0x20c>)
 8005aea:	f107 0308 	add.w	r3, r7, #8
 8005aee:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005af2:	6018      	str	r0, [r3, #0]
 8005af4:	3304      	adds	r3, #4
 8005af6:	7019      	strb	r1, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdTPFleche,5,100);
 8005af8:	f107 0208 	add.w	r2, r7, #8
 8005afc:	2364      	movs	r3, #100	; 0x64
 8005afe:	9300      	str	r3, [sp, #0]
 8005b00:	2305      	movs	r3, #5
 8005b02:	2100      	movs	r1, #0
 8005b04:	4818      	ldr	r0, [pc, #96]	; (8005b68 <lcd_transition+0x1e4>)
 8005b06:	f001 fbe3 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005b0a:	2001      	movs	r0, #1
 8005b0c:	f000 ffc0 	bl	8006a90 <HAL_Delay>
		uint8_t cmdRmFlecheOui[5]={0x1B, 0x4C, 0x03, 0x02, 0xFE};
 8005b10:	4a20      	ldr	r2, [pc, #128]	; (8005b94 <lcd_transition+0x210>)
 8005b12:	463b      	mov	r3, r7
 8005b14:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005b18:	6018      	str	r0, [r3, #0]
 8005b1a:	3304      	adds	r3, #4
 8005b1c:	7019      	strb	r1, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1,LCD_ADD,cmdRmFlecheOui,5,100);
 8005b1e:	463a      	mov	r2, r7
 8005b20:	2364      	movs	r3, #100	; 0x64
 8005b22:	9300      	str	r3, [sp, #0]
 8005b24:	2305      	movs	r3, #5
 8005b26:	2100      	movs	r1, #0
 8005b28:	480f      	ldr	r0, [pc, #60]	; (8005b68 <lcd_transition+0x1e4>)
 8005b2a:	f001 fbd1 	bl	80072d0 <HAL_I2C_Master_Transmit>
		HAL_Delay(1);
 8005b2e:	2001      	movs	r0, #1
 8005b30:	f000 ffae 	bl	8006a90 <HAL_Delay>
		if(buttonValide == 1)
 8005b34:	4b14      	ldr	r3, [pc, #80]	; (8005b88 <lcd_transition+0x204>)
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	2b01      	cmp	r3, #1
 8005b3a:	d10d      	bne.n	8005b58 <lcd_transition+0x1d4>
			buttonVitesse = 1;
 8005b3c:	4b16      	ldr	r3, [pc, #88]	; (8005b98 <lcd_transition+0x214>)
 8005b3e:	2201      	movs	r2, #1
 8005b40:	601a      	str	r2, [r3, #0]
			buttonInterface = 1;
 8005b42:	4b12      	ldr	r3, [pc, #72]	; (8005b8c <lcd_transition+0x208>)
 8005b44:	2201      	movs	r2, #1
 8005b46:	601a      	str	r2, [r3, #0]
}
 8005b48:	e006      	b.n	8005b58 <lcd_transition+0x1d4>
	else if(buttonChoix == 3)
 8005b4a:	4b0c      	ldr	r3, [pc, #48]	; (8005b7c <lcd_transition+0x1f8>)
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	2b03      	cmp	r3, #3
 8005b50:	d102      	bne.n	8005b58 <lcd_transition+0x1d4>
		buttonChoix = 1;
 8005b52:	4b0a      	ldr	r3, [pc, #40]	; (8005b7c <lcd_transition+0x1f8>)
 8005b54:	2201      	movs	r2, #1
 8005b56:	601a      	str	r2, [r3, #0]
}
 8005b58:	bf00      	nop
 8005b5a:	3738      	adds	r7, #56	; 0x38
 8005b5c:	46bd      	mov	sp, r7
 8005b5e:	bd80      	pop	{r7, pc}
 8005b60:	200001f8 	.word	0x200001f8
 8005b64:	0800a898 	.word	0x0800a898
 8005b68:	200000a4 	.word	0x200000a4
 8005b6c:	0800a8b8 	.word	0x0800a8b8
 8005b70:	0800a8b0 	.word	0x0800a8b0
 8005b74:	0800a8bc 	.word	0x0800a8bc
 8005b78:	0800a8b4 	.word	0x0800a8b4
 8005b7c:	200000fc 	.word	0x200000fc
 8005b80:	0800a8c0 	.word	0x0800a8c0
 8005b84:	0800a8c8 	.word	0x0800a8c8
 8005b88:	2000014c 	.word	0x2000014c
 8005b8c:	20000150 	.word	0x20000150
 8005b90:	0800a8d0 	.word	0x0800a8d0
 8005b94:	0800a8d8 	.word	0x0800a8d8
 8005b98:	200001a4 	.word	0x200001a4

08005b9c <lidar_init>:
/*----------Adresse de mon capteur LIDAR sur I2C----------*/
#define LIDAR_ADD 0x62<<1

/*----------DEBUT DE MES FONCTIONS----------*/
void lidar_init(void)
{
 8005b9c:	b580      	push	{r7, lr}
 8005b9e:	b086      	sub	sp, #24
 8005ba0:	af04      	add	r7, sp, #16
	/*----------INIT DU CAPTEUR LIDAR----------*/
	uint8_t cmd[1];
	cmd[0]=0x04;
 8005ba2:	2304      	movs	r3, #4
 8005ba4:	713b      	strb	r3, [r7, #4]
	HAL_I2C_Mem_Write(&hi2c1, LIDAR_ADD ,0x00, 1, cmd,1,100);
 8005ba6:	2364      	movs	r3, #100	; 0x64
 8005ba8:	9302      	str	r3, [sp, #8]
 8005baa:	2301      	movs	r3, #1
 8005bac:	9301      	str	r3, [sp, #4]
 8005bae:	1d3b      	adds	r3, r7, #4
 8005bb0:	9300      	str	r3, [sp, #0]
 8005bb2:	2301      	movs	r3, #1
 8005bb4:	2200      	movs	r2, #0
 8005bb6:	21c4      	movs	r1, #196	; 0xc4
 8005bb8:	4819      	ldr	r0, [pc, #100]	; (8005c20 <lidar_init+0x84>)
 8005bba:	f001 fead 	bl	8007918 <HAL_I2C_Mem_Write>

	/*----------CONFIGURATION LIDAR----------*/
	cmd[0]=0xff;
 8005bbe:	23ff      	movs	r3, #255	; 0xff
 8005bc0:	713b      	strb	r3, [r7, #4]
	HAL_I2C_Mem_Write(&hi2c1, LIDAR_ADD,0x02, 1, cmd,1,1000);
 8005bc2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005bc6:	9302      	str	r3, [sp, #8]
 8005bc8:	2301      	movs	r3, #1
 8005bca:	9301      	str	r3, [sp, #4]
 8005bcc:	1d3b      	adds	r3, r7, #4
 8005bce:	9300      	str	r3, [sp, #0]
 8005bd0:	2301      	movs	r3, #1
 8005bd2:	2202      	movs	r2, #2
 8005bd4:	21c4      	movs	r1, #196	; 0xc4
 8005bd6:	4812      	ldr	r0, [pc, #72]	; (8005c20 <lidar_init+0x84>)
 8005bd8:	f001 fe9e 	bl	8007918 <HAL_I2C_Mem_Write>
	cmd[0]=0x08;
 8005bdc:	2308      	movs	r3, #8
 8005bde:	713b      	strb	r3, [r7, #4]
	HAL_I2C_Mem_Write(&hi2c1, LIDAR_ADD,0x04, 1, cmd,1,1000);
 8005be0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005be4:	9302      	str	r3, [sp, #8]
 8005be6:	2301      	movs	r3, #1
 8005be8:	9301      	str	r3, [sp, #4]
 8005bea:	1d3b      	adds	r3, r7, #4
 8005bec:	9300      	str	r3, [sp, #0]
 8005bee:	2301      	movs	r3, #1
 8005bf0:	2204      	movs	r2, #4
 8005bf2:	21c4      	movs	r1, #196	; 0xc4
 8005bf4:	480a      	ldr	r0, [pc, #40]	; (8005c20 <lidar_init+0x84>)
 8005bf6:	f001 fe8f 	bl	8007918 <HAL_I2C_Mem_Write>
	cmd[0]=0x00;
 8005bfa:	2300      	movs	r3, #0
 8005bfc:	713b      	strb	r3, [r7, #4]
	HAL_I2C_Mem_Write(&hi2c1, LIDAR_ADD,0x1c, 1, cmd,1,1000);
 8005bfe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005c02:	9302      	str	r3, [sp, #8]
 8005c04:	2301      	movs	r3, #1
 8005c06:	9301      	str	r3, [sp, #4]
 8005c08:	1d3b      	adds	r3, r7, #4
 8005c0a:	9300      	str	r3, [sp, #0]
 8005c0c:	2301      	movs	r3, #1
 8005c0e:	221c      	movs	r2, #28
 8005c10:	21c4      	movs	r1, #196	; 0xc4
 8005c12:	4803      	ldr	r0, [pc, #12]	; (8005c20 <lidar_init+0x84>)
 8005c14:	f001 fe80 	bl	8007918 <HAL_I2C_Mem_Write>
	/*----------FIN DE CONFIGURATION LIDAR----------*/
}
 8005c18:	bf00      	nop
 8005c1a:	3708      	adds	r7, #8
 8005c1c:	46bd      	mov	sp, r7
 8005c1e:	bd80      	pop	{r7, pc}
 8005c20:	200000a4 	.word	0x200000a4

08005c24 <boutonDistance>:
extern int buttonChoix;
extern int ecranActif;

/*----RETOURNE DISTANCE EN FCT DU NBR DE CLIC----*/
int boutonDistance(int buttonDistance)
{
 8005c24:	b4b0      	push	{r4, r5, r7}
 8005c26:	b089      	sub	sp, #36	; 0x24
 8005c28:	af00      	add	r7, sp, #0
 8005c2a:	6078      	str	r0, [r7, #4]
	/*----DISTANCES EN CM----*/
	int distances[6] = {100, 500, 1000, 2000, 3000, 4000};
 8005c2c:	4b0b      	ldr	r3, [pc, #44]	; (8005c5c <boutonDistance+0x38>)
 8005c2e:	f107 0408 	add.w	r4, r7, #8
 8005c32:	461d      	mov	r5, r3
 8005c34:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c38:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005c3c:	e884 0003 	stmia.w	r4, {r0, r1}
	return distances[buttonDistance-1];
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	3b01      	subs	r3, #1
 8005c44:	009b      	lsls	r3, r3, #2
 8005c46:	f107 0220 	add.w	r2, r7, #32
 8005c4a:	4413      	add	r3, r2
 8005c4c:	f853 3c18 	ldr.w	r3, [r3, #-24]

}
 8005c50:	4618      	mov	r0, r3
 8005c52:	3724      	adds	r7, #36	; 0x24
 8005c54:	46bd      	mov	sp, r7
 8005c56:	bcb0      	pop	{r4, r5, r7}
 8005c58:	4770      	bx	lr
 8005c5a:	bf00      	nop
 8005c5c:	0800a8e0 	.word	0x0800a8e0

08005c60 <boutonVitesse>:

/*----RETOURNE VITESSE EN FCT DU NBR DE CLIC----*/
int boutonVitesse(int buttonVitesse)
{
 8005c60:	b4b0      	push	{r4, r5, r7}
 8005c62:	b089      	sub	sp, #36	; 0x24
 8005c64:	af00      	add	r7, sp, #0
 8005c66:	6078      	str	r0, [r7, #4]
	int vitesses[6] = {5,10,30,50,75,100};
 8005c68:	4b0b      	ldr	r3, [pc, #44]	; (8005c98 <boutonVitesse+0x38>)
 8005c6a:	f107 0408 	add.w	r4, r7, #8
 8005c6e:	461d      	mov	r5, r3
 8005c70:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c72:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005c74:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005c78:	e884 0003 	stmia.w	r4, {r0, r1}
	return vitesses[buttonVitesse-1];
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	3b01      	subs	r3, #1
 8005c80:	009b      	lsls	r3, r3, #2
 8005c82:	f107 0220 	add.w	r2, r7, #32
 8005c86:	4413      	add	r3, r2
 8005c88:	f853 3c18 	ldr.w	r3, [r3, #-24]
}
 8005c8c:	4618      	mov	r0, r3
 8005c8e:	3724      	adds	r7, #36	; 0x24
 8005c90:	46bd      	mov	sp, r7
 8005c92:	bcb0      	pop	{r4, r5, r7}
 8005c94:	4770      	bx	lr
 8005c96:	bf00      	nop
 8005c98:	0800a8f8 	.word	0x0800a8f8

08005c9c <clicBtnDistance>:
	return choix[buttonChoix-1];
}


void clicBtnDistance(void)
{
 8005c9c:	b580      	push	{r7, lr}
 8005c9e:	af00      	add	r7, sp, #0
	/*LIRE LE PIN ET LE ONEPUSH POUR SAVOIR SI ON CLIC*/
	/*ON A DONC UNE DOUBLE CONTINUE POUR EVITER L'APPUI CONTINU*/
	if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0) == 1 && onePush == 0)
 8005ca0:	2101      	movs	r1, #1
 8005ca2:	4814      	ldr	r0, [pc, #80]	; (8005cf4 <clicBtnDistance+0x58>)
 8005ca4:	f001 f9aa 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005ca8:	4603      	mov	r3, r0
 8005caa:	2b01      	cmp	r3, #1
 8005cac:	d116      	bne.n	8005cdc <clicBtnDistance+0x40>
 8005cae:	4b12      	ldr	r3, [pc, #72]	; (8005cf8 <clicBtnDistance+0x5c>)
 8005cb0:	681b      	ldr	r3, [r3, #0]
 8005cb2:	2b00      	cmp	r3, #0
 8005cb4:	d112      	bne.n	8005cdc <clicBtnDistance+0x40>
	{
		lcd_on();
 8005cb6:	f7fd fceb 	bl	8003690 <lcd_on>
		//lcd_clear();
		/*----RECUPERE VALEUR A MOMENT T----*/
		ecranActif = HAL_GetTick();
 8005cba:	f000 fedd 	bl	8006a78 <HAL_GetTick>
 8005cbe:	4603      	mov	r3, r0
 8005cc0:	461a      	mov	r2, r3
 8005cc2:	4b0e      	ldr	r3, [pc, #56]	; (8005cfc <clicBtnDistance+0x60>)
 8005cc4:	601a      	str	r2, [r3, #0]
		onePush ++;
 8005cc6:	4b0c      	ldr	r3, [pc, #48]	; (8005cf8 <clicBtnDistance+0x5c>)
 8005cc8:	681b      	ldr	r3, [r3, #0]
 8005cca:	3301      	adds	r3, #1
 8005ccc:	4a0a      	ldr	r2, [pc, #40]	; (8005cf8 <clicBtnDistance+0x5c>)
 8005cce:	6013      	str	r3, [r2, #0]
		buttonDistance = buttonDistance +1;
 8005cd0:	4b0b      	ldr	r3, [pc, #44]	; (8005d00 <clicBtnDistance+0x64>)
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	3301      	adds	r3, #1
 8005cd6:	4a0a      	ldr	r2, [pc, #40]	; (8005d00 <clicBtnDistance+0x64>)
 8005cd8:	6013      	str	r3, [r2, #0]
	}
	else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0) == 0){
		onePush = 0;
	}
}
 8005cda:	e009      	b.n	8005cf0 <clicBtnDistance+0x54>
	else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0) == 0){
 8005cdc:	2101      	movs	r1, #1
 8005cde:	4805      	ldr	r0, [pc, #20]	; (8005cf4 <clicBtnDistance+0x58>)
 8005ce0:	f001 f98c 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005ce4:	4603      	mov	r3, r0
 8005ce6:	2b00      	cmp	r3, #0
 8005ce8:	d102      	bne.n	8005cf0 <clicBtnDistance+0x54>
		onePush = 0;
 8005cea:	4b03      	ldr	r3, [pc, #12]	; (8005cf8 <clicBtnDistance+0x5c>)
 8005cec:	2200      	movs	r2, #0
 8005cee:	601a      	str	r2, [r3, #0]
}
 8005cf0:	bf00      	nop
 8005cf2:	bd80      	pop	{r7, pc}
 8005cf4:	40020800 	.word	0x40020800
 8005cf8:	20000200 	.word	0x20000200
 8005cfc:	200000f8 	.word	0x200000f8
 8005d00:	2000015c 	.word	0x2000015c

08005d04 <clicBtnVitesse>:
void clicBtnVitesse(void)
{
 8005d04:	b580      	push	{r7, lr}
 8005d06:	af00      	add	r7, sp, #0
	/*LIRE LE PIN ET LE ONEPUSH2 POUR SAVOIR SI ON CLIC*/
	/*ON A DONC UNE DOUBLE CLE POUR EVITER L'APPUI CONTINU*/
	if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_1) == 1 && onePush2 == 0)
 8005d08:	2102      	movs	r1, #2
 8005d0a:	4814      	ldr	r0, [pc, #80]	; (8005d5c <clicBtnVitesse+0x58>)
 8005d0c:	f001 f976 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005d10:	4603      	mov	r3, r0
 8005d12:	2b01      	cmp	r3, #1
 8005d14:	d116      	bne.n	8005d44 <clicBtnVitesse+0x40>
 8005d16:	4b12      	ldr	r3, [pc, #72]	; (8005d60 <clicBtnVitesse+0x5c>)
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d112      	bne.n	8005d44 <clicBtnVitesse+0x40>
	{
		lcd_on();
 8005d1e:	f7fd fcb7 	bl	8003690 <lcd_on>
		//lcd_clear();
		/*----RECUPERE VALEUR A MOMENT T----*/
		ecranActif = HAL_GetTick();
 8005d22:	f000 fea9 	bl	8006a78 <HAL_GetTick>
 8005d26:	4603      	mov	r3, r0
 8005d28:	461a      	mov	r2, r3
 8005d2a:	4b0e      	ldr	r3, [pc, #56]	; (8005d64 <clicBtnVitesse+0x60>)
 8005d2c:	601a      	str	r2, [r3, #0]
		onePush2++;
 8005d2e:	4b0c      	ldr	r3, [pc, #48]	; (8005d60 <clicBtnVitesse+0x5c>)
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	3301      	adds	r3, #1
 8005d34:	4a0a      	ldr	r2, [pc, #40]	; (8005d60 <clicBtnVitesse+0x5c>)
 8005d36:	6013      	str	r3, [r2, #0]
		buttonVitesse = buttonVitesse +1;
 8005d38:	4b0b      	ldr	r3, [pc, #44]	; (8005d68 <clicBtnVitesse+0x64>)
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	3301      	adds	r3, #1
 8005d3e:	4a0a      	ldr	r2, [pc, #40]	; (8005d68 <clicBtnVitesse+0x64>)
 8005d40:	6013      	str	r3, [r2, #0]
	}
	else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_1) == 0){
		onePush2 = 0;
	}
}
 8005d42:	e009      	b.n	8005d58 <clicBtnVitesse+0x54>
	else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_1) == 0){
 8005d44:	2102      	movs	r1, #2
 8005d46:	4805      	ldr	r0, [pc, #20]	; (8005d5c <clicBtnVitesse+0x58>)
 8005d48:	f001 f958 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005d4c:	4603      	mov	r3, r0
 8005d4e:	2b00      	cmp	r3, #0
 8005d50:	d102      	bne.n	8005d58 <clicBtnVitesse+0x54>
		onePush2 = 0;
 8005d52:	4b03      	ldr	r3, [pc, #12]	; (8005d60 <clicBtnVitesse+0x5c>)
 8005d54:	2200      	movs	r2, #0
 8005d56:	601a      	str	r2, [r3, #0]
}
 8005d58:	bf00      	nop
 8005d5a:	bd80      	pop	{r7, pc}
 8005d5c:	40020800 	.word	0x40020800
 8005d60:	20000154 	.word	0x20000154
 8005d64:	200000f8 	.word	0x200000f8
 8005d68:	200001a4 	.word	0x200001a4

08005d6c <clicBtnInterface>:

void clicBtnInterface(void)
{
 8005d6c:	b580      	push	{r7, lr}
 8005d6e:	af00      	add	r7, sp, #0
	/*LIRE LE PIN ET LE ONEPUSH2 POUR SAVOIR SI ON CLIC*/
	/*ON A DONC UNE DOUBLE CLE POUR EVITER L'APPUI CONTINU*/
	if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0) == 1 && onePush3 == 0)
 8005d70:	2101      	movs	r1, #1
 8005d72:	4815      	ldr	r0, [pc, #84]	; (8005dc8 <clicBtnInterface+0x5c>)
 8005d74:	f001 f942 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005d78:	4603      	mov	r3, r0
 8005d7a:	2b01      	cmp	r3, #1
 8005d7c:	d118      	bne.n	8005db0 <clicBtnInterface+0x44>
 8005d7e:	4b13      	ldr	r3, [pc, #76]	; (8005dcc <clicBtnInterface+0x60>)
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	d114      	bne.n	8005db0 <clicBtnInterface+0x44>
	{
		lcd_on();
 8005d86:	f7fd fc83 	bl	8003690 <lcd_on>
		lcd_clear();
 8005d8a:	f7fb f871 	bl	8000e70 <lcd_clear>
		/*----RECUPERE VALEUR A MOMENT T----*/
		ecranActif = HAL_GetTick();
 8005d8e:	f000 fe73 	bl	8006a78 <HAL_GetTick>
 8005d92:	4603      	mov	r3, r0
 8005d94:	461a      	mov	r2, r3
 8005d96:	4b0e      	ldr	r3, [pc, #56]	; (8005dd0 <clicBtnInterface+0x64>)
 8005d98:	601a      	str	r2, [r3, #0]
		onePush3++;
 8005d9a:	4b0c      	ldr	r3, [pc, #48]	; (8005dcc <clicBtnInterface+0x60>)
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	3301      	adds	r3, #1
 8005da0:	4a0a      	ldr	r2, [pc, #40]	; (8005dcc <clicBtnInterface+0x60>)
 8005da2:	6013      	str	r3, [r2, #0]
		buttonInterface = buttonInterface +1;
 8005da4:	4b0b      	ldr	r3, [pc, #44]	; (8005dd4 <clicBtnInterface+0x68>)
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	3301      	adds	r3, #1
 8005daa:	4a0a      	ldr	r2, [pc, #40]	; (8005dd4 <clicBtnInterface+0x68>)
 8005dac:	6013      	str	r3, [r2, #0]
	}
	else if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0) == 0){
		onePush3 = 0;
	}
}
 8005dae:	e009      	b.n	8005dc4 <clicBtnInterface+0x58>
	else if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_0) == 0){
 8005db0:	2101      	movs	r1, #1
 8005db2:	4805      	ldr	r0, [pc, #20]	; (8005dc8 <clicBtnInterface+0x5c>)
 8005db4:	f001 f922 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005db8:	4603      	mov	r3, r0
 8005dba:	2b00      	cmp	r3, #0
 8005dbc:	d102      	bne.n	8005dc4 <clicBtnInterface+0x58>
		onePush3 = 0;
 8005dbe:	4b03      	ldr	r3, [pc, #12]	; (8005dcc <clicBtnInterface+0x60>)
 8005dc0:	2200      	movs	r2, #0
 8005dc2:	601a      	str	r2, [r3, #0]
}
 8005dc4:	bf00      	nop
 8005dc6:	bd80      	pop	{r7, pc}
 8005dc8:	40020400 	.word	0x40020400
 8005dcc:	200001f8 	.word	0x200001f8
 8005dd0:	200000f8 	.word	0x200000f8
 8005dd4:	20000150 	.word	0x20000150

08005dd8 <clicBtnChoix>:

void clicBtnChoix(void)
{
 8005dd8:	b580      	push	{r7, lr}
 8005dda:	af00      	add	r7, sp, #0
		/*LIRE LE PIN ET LE ONEPUSH POUR SAVOIR SI ON CLIC*/
		/*ON A DONC UNE DOUBLE CONTINUE POUR EVITER L'APPUI CONTINU*/
		if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0) == 1 && onePush == 0)
 8005ddc:	2101      	movs	r1, #1
 8005dde:	4814      	ldr	r0, [pc, #80]	; (8005e30 <clicBtnChoix+0x58>)
 8005de0:	f001 f90c 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005de4:	4603      	mov	r3, r0
 8005de6:	2b01      	cmp	r3, #1
 8005de8:	d116      	bne.n	8005e18 <clicBtnChoix+0x40>
 8005dea:	4b12      	ldr	r3, [pc, #72]	; (8005e34 <clicBtnChoix+0x5c>)
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	2b00      	cmp	r3, #0
 8005df0:	d112      	bne.n	8005e18 <clicBtnChoix+0x40>
		{
			lcd_on();
 8005df2:	f7fd fc4d 	bl	8003690 <lcd_on>
			//lcd_clear();
			/*----RECUPERE VALEUR A MOMENT T----*/
			ecranActif = HAL_GetTick();
 8005df6:	f000 fe3f 	bl	8006a78 <HAL_GetTick>
 8005dfa:	4603      	mov	r3, r0
 8005dfc:	461a      	mov	r2, r3
 8005dfe:	4b0e      	ldr	r3, [pc, #56]	; (8005e38 <clicBtnChoix+0x60>)
 8005e00:	601a      	str	r2, [r3, #0]
			onePush ++;
 8005e02:	4b0c      	ldr	r3, [pc, #48]	; (8005e34 <clicBtnChoix+0x5c>)
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	3301      	adds	r3, #1
 8005e08:	4a0a      	ldr	r2, [pc, #40]	; (8005e34 <clicBtnChoix+0x5c>)
 8005e0a:	6013      	str	r3, [r2, #0]
			buttonChoix = buttonChoix +1;
 8005e0c:	4b0b      	ldr	r3, [pc, #44]	; (8005e3c <clicBtnChoix+0x64>)
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	3301      	adds	r3, #1
 8005e12:	4a0a      	ldr	r2, [pc, #40]	; (8005e3c <clicBtnChoix+0x64>)
 8005e14:	6013      	str	r3, [r2, #0]
		}
		else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0) == 0){
			onePush = 0;
		}
}
 8005e16:	e009      	b.n	8005e2c <clicBtnChoix+0x54>
		else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0) == 0){
 8005e18:	2101      	movs	r1, #1
 8005e1a:	4805      	ldr	r0, [pc, #20]	; (8005e30 <clicBtnChoix+0x58>)
 8005e1c:	f001 f8ee 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005e20:	4603      	mov	r3, r0
 8005e22:	2b00      	cmp	r3, #0
 8005e24:	d102      	bne.n	8005e2c <clicBtnChoix+0x54>
			onePush = 0;
 8005e26:	4b03      	ldr	r3, [pc, #12]	; (8005e34 <clicBtnChoix+0x5c>)
 8005e28:	2200      	movs	r2, #0
 8005e2a:	601a      	str	r2, [r3, #0]
}
 8005e2c:	bf00      	nop
 8005e2e:	bd80      	pop	{r7, pc}
 8005e30:	40020800 	.word	0x40020800
 8005e34:	20000200 	.word	0x20000200
 8005e38:	200000f8 	.word	0x200000f8
 8005e3c:	200000fc 	.word	0x200000fc

08005e40 <clicBtnValide>:

void clicBtnValide(void)
{
 8005e40:	b580      	push	{r7, lr}
 8005e42:	af00      	add	r7, sp, #0
	/*LIRE LE PIN ET LE ONEPUSH2 POUR SAVOIR SI ON CLIC*/
	/*ON A DONC UNE DOUBLE CLE POUR EVITER L'APPUI CONTINU*/
	if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_1) == 1 && onePush2 == 0)
 8005e44:	2102      	movs	r1, #2
 8005e46:	4815      	ldr	r0, [pc, #84]	; (8005e9c <clicBtnValide+0x5c>)
 8005e48:	f001 f8d8 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005e4c:	4603      	mov	r3, r0
 8005e4e:	2b01      	cmp	r3, #1
 8005e50:	d118      	bne.n	8005e84 <clicBtnValide+0x44>
 8005e52:	4b13      	ldr	r3, [pc, #76]	; (8005ea0 <clicBtnValide+0x60>)
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	2b00      	cmp	r3, #0
 8005e58:	d114      	bne.n	8005e84 <clicBtnValide+0x44>
	{
		lcd_on();
 8005e5a:	f7fd fc19 	bl	8003690 <lcd_on>
		lcd_clear();
 8005e5e:	f7fb f807 	bl	8000e70 <lcd_clear>
		/*----RECUPERE VALEUR A MOMENT T----*/
		ecranActif = HAL_GetTick();
 8005e62:	f000 fe09 	bl	8006a78 <HAL_GetTick>
 8005e66:	4603      	mov	r3, r0
 8005e68:	461a      	mov	r2, r3
 8005e6a:	4b0e      	ldr	r3, [pc, #56]	; (8005ea4 <clicBtnValide+0x64>)
 8005e6c:	601a      	str	r2, [r3, #0]
		onePush2++;
 8005e6e:	4b0c      	ldr	r3, [pc, #48]	; (8005ea0 <clicBtnValide+0x60>)
 8005e70:	681b      	ldr	r3, [r3, #0]
 8005e72:	3301      	adds	r3, #1
 8005e74:	4a0a      	ldr	r2, [pc, #40]	; (8005ea0 <clicBtnValide+0x60>)
 8005e76:	6013      	str	r3, [r2, #0]
		buttonValide = buttonValide +1;
 8005e78:	4b0b      	ldr	r3, [pc, #44]	; (8005ea8 <clicBtnValide+0x68>)
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	3301      	adds	r3, #1
 8005e7e:	4a0a      	ldr	r2, [pc, #40]	; (8005ea8 <clicBtnValide+0x68>)
 8005e80:	6013      	str	r3, [r2, #0]
	}
	else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_1) == 0){
		onePush2 = 0;
	}
}
 8005e82:	e009      	b.n	8005e98 <clicBtnValide+0x58>
	else if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_1) == 0){
 8005e84:	2102      	movs	r1, #2
 8005e86:	4805      	ldr	r0, [pc, #20]	; (8005e9c <clicBtnValide+0x5c>)
 8005e88:	f001 f8b8 	bl	8006ffc <HAL_GPIO_ReadPin>
 8005e8c:	4603      	mov	r3, r0
 8005e8e:	2b00      	cmp	r3, #0
 8005e90:	d102      	bne.n	8005e98 <clicBtnValide+0x58>
		onePush2 = 0;
 8005e92:	4b03      	ldr	r3, [pc, #12]	; (8005ea0 <clicBtnValide+0x60>)
 8005e94:	2200      	movs	r2, #0
 8005e96:	601a      	str	r2, [r3, #0]
}
 8005e98:	bf00      	nop
 8005e9a:	bd80      	pop	{r7, pc}
 8005e9c:	40020800 	.word	0x40020800
 8005ea0:	20000154 	.word	0x20000154
 8005ea4:	200000f8 	.word	0x200000f8
 8005ea8:	2000014c 	.word	0x2000014c
 8005eac:	00000000 	.word	0x00000000

08005eb0 <adaptVitesseDistance>:
extern TIM_HandleTypeDef htim3;
extern int distance;


void adaptVitesseDistance(int choixDistance, int choixVitesse)
{
 8005eb0:	b590      	push	{r4, r7, lr}
 8005eb2:	b087      	sub	sp, #28
 8005eb4:	af00      	add	r7, sp, #0
 8005eb6:	6078      	str	r0, [r7, #4]
 8005eb8:	6039      	str	r1, [r7, #0]
	double diffDistance = 0;
 8005eba:	f04f 0300 	mov.w	r3, #0
 8005ebe:	f04f 0400 	mov.w	r4, #0
 8005ec2:	e9c7 3402 	strd	r3, r4, [r7, #8]
	double nouvVitesse = 0;
 8005ec6:	f04f 0300 	mov.w	r3, #0
 8005eca:	f04f 0400 	mov.w	r4, #0
 8005ece:	e9c7 3404 	strd	r3, r4, [r7, #16]
	/*----CAS ARRET DU MOTEUR CAR TROP PROCHE----*/
	if( distance <= 80)
 8005ed2:	4b49      	ldr	r3, [pc, #292]	; (8005ff8 <adaptVitesseDistance+0x148>)
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	2b50      	cmp	r3, #80	; 0x50
 8005ed8:	dc03      	bgt.n	8005ee2 <adaptVitesseDistance+0x32>
	{
			/*----ARRET----*/
		htim3.Instance->CCR1 = 0;
 8005eda:	4b48      	ldr	r3, [pc, #288]	; (8005ffc <adaptVitesseDistance+0x14c>)
 8005edc:	681b      	ldr	r3, [r3, #0]
 8005ede:	2200      	movs	r2, #0
 8005ee0:	635a      	str	r2, [r3, #52]	; 0x34
	}
	/*----MISE A LA VITESSE SOUHAITE SI ON PEUT----*/
	if( distance >=choixDistance)
 8005ee2:	4b45      	ldr	r3, [pc, #276]	; (8005ff8 <adaptVitesseDistance+0x148>)
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	687a      	ldr	r2, [r7, #4]
 8005ee8:	429a      	cmp	r2, r3
 8005eea:	dc03      	bgt.n	8005ef4 <adaptVitesseDistance+0x44>
	{
		htim3.Instance->CCR1 = choixVitesse;
 8005eec:	4b43      	ldr	r3, [pc, #268]	; (8005ffc <adaptVitesseDistance+0x14c>)
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	683a      	ldr	r2, [r7, #0]
 8005ef2:	635a      	str	r2, [r3, #52]	; 0x34
	}
	/*----VARIATION VITESSE POUR RALENTIR SI L'OBSTACLE SE RAPPROCHE----*/
	if( distance < choixDistance)
 8005ef4:	4b40      	ldr	r3, [pc, #256]	; (8005ff8 <adaptVitesseDistance+0x148>)
 8005ef6:	681b      	ldr	r3, [r3, #0]
 8005ef8:	687a      	ldr	r2, [r7, #4]
 8005efa:	429a      	cmp	r2, r3
 8005efc:	dd73      	ble.n	8005fe6 <adaptVitesseDistance+0x136>
	{
		/*----CALCUL POUR REDUIRE LA VITESSE----*/
		diffDistance = choixDistance - distance;
 8005efe:	4b3e      	ldr	r3, [pc, #248]	; (8005ff8 <adaptVitesseDistance+0x148>)
 8005f00:	681b      	ldr	r3, [r3, #0]
 8005f02:	687a      	ldr	r2, [r7, #4]
 8005f04:	1ad3      	subs	r3, r2, r3
 8005f06:	4618      	mov	r0, r3
 8005f08:	f7fa fab8 	bl	800047c <__aeabi_i2d>
 8005f0c:	4603      	mov	r3, r0
 8005f0e:	460c      	mov	r4, r1
 8005f10:	e9c7 3402 	strd	r3, r4, [r7, #8]
		/*----ATTENTION SI ECART TROP IMPORTANT VAL NEGATIVE----*/

		/*----GESTION EN CAS DE VALEURS NEGATIVES----*/
		if(diffDistance > 100)
 8005f14:	f04f 0200 	mov.w	r2, #0
 8005f18:	4b39      	ldr	r3, [pc, #228]	; (8006000 <adaptVitesseDistance+0x150>)
 8005f1a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8005f1e:	f7fa fda7 	bl	8000a70 <__aeabi_dcmpgt>
 8005f22:	4603      	mov	r3, r0
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	d014      	beq.n	8005f52 <adaptVitesseDistance+0xa2>
		{
			nouvVitesse = 1-(diffDistance/1000);
 8005f28:	f04f 0200 	mov.w	r2, #0
 8005f2c:	4b35      	ldr	r3, [pc, #212]	; (8006004 <adaptVitesseDistance+0x154>)
 8005f2e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8005f32:	f7fa fc37 	bl	80007a4 <__aeabi_ddiv>
 8005f36:	4603      	mov	r3, r0
 8005f38:	460c      	mov	r4, r1
 8005f3a:	461a      	mov	r2, r3
 8005f3c:	4623      	mov	r3, r4
 8005f3e:	f04f 0000 	mov.w	r0, #0
 8005f42:	4931      	ldr	r1, [pc, #196]	; (8006008 <adaptVitesseDistance+0x158>)
 8005f44:	f7fa f94c 	bl	80001e0 <__aeabi_dsub>
 8005f48:	4603      	mov	r3, r0
 8005f4a:	460c      	mov	r4, r1
 8005f4c:	e9c7 3404 	strd	r3, r4, [r7, #16]
 8005f50:	e032      	b.n	8005fb8 <adaptVitesseDistance+0x108>
		}
		else if(diffDistance > 1000)
 8005f52:	f04f 0200 	mov.w	r2, #0
 8005f56:	4b2b      	ldr	r3, [pc, #172]	; (8006004 <adaptVitesseDistance+0x154>)
 8005f58:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8005f5c:	f7fa fd88 	bl	8000a70 <__aeabi_dcmpgt>
 8005f60:	4603      	mov	r3, r0
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d014      	beq.n	8005f90 <adaptVitesseDistance+0xe0>
		{
			nouvVitesse = 1-(diffDistance/10000);
 8005f66:	a322      	add	r3, pc, #136	; (adr r3, 8005ff0 <adaptVitesseDistance+0x140>)
 8005f68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f6c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8005f70:	f7fa fc18 	bl	80007a4 <__aeabi_ddiv>
 8005f74:	4603      	mov	r3, r0
 8005f76:	460c      	mov	r4, r1
 8005f78:	461a      	mov	r2, r3
 8005f7a:	4623      	mov	r3, r4
 8005f7c:	f04f 0000 	mov.w	r0, #0
 8005f80:	4921      	ldr	r1, [pc, #132]	; (8006008 <adaptVitesseDistance+0x158>)
 8005f82:	f7fa f92d 	bl	80001e0 <__aeabi_dsub>
 8005f86:	4603      	mov	r3, r0
 8005f88:	460c      	mov	r4, r1
 8005f8a:	e9c7 3404 	strd	r3, r4, [r7, #16]
 8005f8e:	e013      	b.n	8005fb8 <adaptVitesseDistance+0x108>
		}
		else{
			nouvVitesse = 1-(diffDistance/100);
 8005f90:	f04f 0200 	mov.w	r2, #0
 8005f94:	4b1a      	ldr	r3, [pc, #104]	; (8006000 <adaptVitesseDistance+0x150>)
 8005f96:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8005f9a:	f7fa fc03 	bl	80007a4 <__aeabi_ddiv>
 8005f9e:	4603      	mov	r3, r0
 8005fa0:	460c      	mov	r4, r1
 8005fa2:	461a      	mov	r2, r3
 8005fa4:	4623      	mov	r3, r4
 8005fa6:	f04f 0000 	mov.w	r0, #0
 8005faa:	4917      	ldr	r1, [pc, #92]	; (8006008 <adaptVitesseDistance+0x158>)
 8005fac:	f7fa f918 	bl	80001e0 <__aeabi_dsub>
 8005fb0:	4603      	mov	r3, r0
 8005fb2:	460c      	mov	r4, r1
 8005fb4:	e9c7 3404 	strd	r3, r4, [r7, #16]
		}
		nouvVitesse = (choixVitesse*nouvVitesse);
 8005fb8:	6838      	ldr	r0, [r7, #0]
 8005fba:	f7fa fa5f 	bl	800047c <__aeabi_i2d>
 8005fbe:	4603      	mov	r3, r0
 8005fc0:	460c      	mov	r4, r1
 8005fc2:	461a      	mov	r2, r3
 8005fc4:	4623      	mov	r3, r4
 8005fc6:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8005fca:	f7fa fac1 	bl	8000550 <__aeabi_dmul>
 8005fce:	4603      	mov	r3, r0
 8005fd0:	460c      	mov	r4, r1
 8005fd2:	e9c7 3404 	strd	r3, r4, [r7, #16]

		htim3.Instance->CCR1 = nouvVitesse;
 8005fd6:	4b09      	ldr	r3, [pc, #36]	; (8005ffc <adaptVitesseDistance+0x14c>)
 8005fd8:	681c      	ldr	r4, [r3, #0]
 8005fda:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8005fde:	f7fa fd8f 	bl	8000b00 <__aeabi_d2uiz>
 8005fe2:	4603      	mov	r3, r0
 8005fe4:	6363      	str	r3, [r4, #52]	; 0x34
	}
}
 8005fe6:	bf00      	nop
 8005fe8:	371c      	adds	r7, #28
 8005fea:	46bd      	mov	sp, r7
 8005fec:	bd90      	pop	{r4, r7, pc}
 8005fee:	bf00      	nop
 8005ff0:	00000000 	.word	0x00000000
 8005ff4:	40c38800 	.word	0x40c38800
 8005ff8:	20000104 	.word	0x20000104
 8005ffc:	20000108 	.word	0x20000108
 8006000:	40590000 	.word	0x40590000
 8006004:	408f4000 	.word	0x408f4000
 8006008:	3ff00000 	.word	0x3ff00000

0800600c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800600c:	b590      	push	{r4, r7, lr}
 800600e:	b087      	sub	sp, #28
 8006010:	af04      	add	r7, sp, #16
  /* USER CODE BEGIN 1 */
  buttonDistance = 1;
 8006012:	4b56      	ldr	r3, [pc, #344]	; (800616c <main+0x160>)
 8006014:	2201      	movs	r2, #1
 8006016:	601a      	str	r2, [r3, #0]
  buttonVitesse = 1;
 8006018:	4b55      	ldr	r3, [pc, #340]	; (8006170 <main+0x164>)
 800601a:	2201      	movs	r2, #1
 800601c:	601a      	str	r2, [r3, #0]
  buttonInterface = 1;
 800601e:	4b55      	ldr	r3, [pc, #340]	; (8006174 <main+0x168>)
 8006020:	2201      	movs	r2, #1
 8006022:	601a      	str	r2, [r3, #0]
  buttonChoix = 1;
 8006024:	4b54      	ldr	r3, [pc, #336]	; (8006178 <main+0x16c>)
 8006026:	2201      	movs	r2, #1
 8006028:	601a      	str	r2, [r3, #0]
  buttonValide = 0;
 800602a:	4b54      	ldr	r3, [pc, #336]	; (800617c <main+0x170>)
 800602c:	2200      	movs	r2, #0
 800602e:	601a      	str	r2, [r3, #0]
  /*Buffer ou je recupere mes distances*/
  uint8_t data[2];

  /*----POUR GARDER L'ECRAN ACTIF 10S APRES LE DERNIER CLIC----*/
  /*----S'APPLIQUE UNIQUEMENT A INTERFACE PRINCIPALE----*/
  ecranActif = 0;
 8006030:	4b53      	ldr	r3, [pc, #332]	; (8006180 <main+0x174>)
 8006032:	2200      	movs	r2, #0
 8006034:	601a      	str	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8006036:	f000 fcb9 	bl	80069ac <HAL_Init>

  /* USER CODE BEGIN Init */
  onePush = 0;
 800603a:	4b52      	ldr	r3, [pc, #328]	; (8006184 <main+0x178>)
 800603c:	2200      	movs	r2, #0
 800603e:	601a      	str	r2, [r3, #0]
  onePush2 = 0;
 8006040:	4b51      	ldr	r3, [pc, #324]	; (8006188 <main+0x17c>)
 8006042:	2200      	movs	r2, #0
 8006044:	601a      	str	r2, [r3, #0]
  onePush3 = 0;
 8006046:	4b51      	ldr	r3, [pc, #324]	; (800618c <main+0x180>)
 8006048:	2200      	movs	r2, #0
 800604a:	601a      	str	r2, [r3, #0]
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800604c:	f000 f8b4 	bl	80061b8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8006050:	f000 fa1a 	bl	8006488 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8006054:	f000 f9ee 	bl	8006434 <MX_USART2_UART_Init>
  MX_I2C1_Init();
 8006058:	f000 f90c 	bl	8006274 <MX_I2C1_Init>
  MX_TIM3_Init();
 800605c:	f000 f990 	bl	8006380 <MX_TIM3_Init>
  MX_TIM1_Init();
 8006060:	f000 f936 	bl	80062d0 <MX_TIM1_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Encoder_Start(&htim1,TIM_CHANNEL_ALL);
 8006064:	213c      	movs	r1, #60	; 0x3c
 8006066:	484a      	ldr	r0, [pc, #296]	; (8006190 <main+0x184>)
 8006068:	f002 ffca 	bl	8009000 <HAL_TIM_Encoder_Start>

  /*----CALCUL FREQUENCE EN Mhz----*/
  HAL_TIM_IC_Start_IT(&htim3, TIM_CHANNEL_1);
 800606c:	2100      	movs	r1, #0
 800606e:	4849      	ldr	r0, [pc, #292]	; (8006194 <main+0x188>)
 8006070:	f002 fecc 	bl	8008e0c <HAL_TIM_IC_Start_IT>

  /*-----VERIFICATION CONNECTION LCD ET INIT-----*/
  /*CONNECTED ?*/
  if(lcd_isConnected() == 1)
 8006074:	f7fa fee4 	bl	8000e40 <lcd_isConnected>
 8006078:	4603      	mov	r3, r0
 800607a:	2b01      	cmp	r3, #1
 800607c:	d109      	bne.n	8006092 <main+0x86>
  {
	  /*CLEAR LCD*/
	  lcd_clear();
 800607e:	f7fa fef7 	bl	8000e70 <lcd_clear>
	  /*INIT LCD*/
	  lcd_init();
 8006082:	f7fa ff0f 	bl	8000ea4 <lcd_init>
	  HAL_Delay(2000);
 8006086:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800608a:	f000 fd01 	bl	8006a90 <HAL_Delay>
	  lcd_clear();
 800608e:	f7fa feef 	bl	8000e70 <lcd_clear>
  /*---------FIN DE LA PARTIE SUR LE LCD---------*/

  /*-----INIT PWM POUR CONTROLLEUR MOTEUR-----*/
  //HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
  /*-----INIT DU CAPTEUR LIDAR-----*/
  lidar_init();
 8006092:	f7ff fd83 	bl	8005b9c <lidar_init>
  lcd_maVoiture();
 8006096:	f7fd fb2f 	bl	80036f8 <lcd_maVoiture>
  lcd_clear();
 800609a:	f7fa fee9 	bl	8000e70 <lcd_clear>
  while (1)
  {
	/*----VALEUR DU CAPTEUR DU MOTEUR----*/
	/*----DIVISION PAR 24 CAR ON A 24 MESURES POUR 1 TOUR DU MOTEUR----*/
	/*----IL FAUT 172 TOUR MOTEUR POUR UN TOUR DE L'ARBRE REDUCTEUR----*/
	tim4_cnt = (htim1.Instance->CNT / 24 );
 800609e:	4b3c      	ldr	r3, [pc, #240]	; (8006190 <main+0x184>)
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060a4:	4a3c      	ldr	r2, [pc, #240]	; (8006198 <main+0x18c>)
 80060a6:	fba2 2303 	umull	r2, r3, r2, r3
 80060aa:	091b      	lsrs	r3, r3, #4
 80060ac:	4a3b      	ldr	r2, [pc, #236]	; (800619c <main+0x190>)
 80060ae:	6013      	str	r3, [r2, #0]

	/*----INIT TEMPS COURANT----*/
	tpsCourant = HAL_GetTick();
 80060b0:	f000 fce2 	bl	8006a78 <HAL_GetTick>
 80060b4:	4603      	mov	r3, r0
 80060b6:	461a      	mov	r2, r3
 80060b8:	4b39      	ldr	r3, [pc, #228]	; (80061a0 <main+0x194>)
 80060ba:	601a      	str	r2, [r3, #0]
	{
		htim3.Instance->CCR1 = 0;
		HAL_Delay(5000000);
	}*/
	/*-----INTERFACE PRINCIPALE-----*/
	lcd_Navig();
 80060bc:	f7ff fbec 	bl	8005898 <lcd_Navig>

	//lcd_interfacePrinc(buttonDistance,buttonVitesse,ecranActif);
	/*----VERIFICATION CONNECTION LIDAR----*/
	if(HAL_I2C_IsDeviceReady(&hi2c1,LIDAR_ADD,2,500)== HAL_OK)
 80060c0:	4b38      	ldr	r3, [pc, #224]	; (80061a4 <main+0x198>)
 80060c2:	781b      	ldrb	r3, [r3, #0]
 80060c4:	b299      	uxth	r1, r3
 80060c6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80060ca:	2202      	movs	r2, #2
 80060cc:	4836      	ldr	r0, [pc, #216]	; (80061a8 <main+0x19c>)
 80060ce:	f001 fd1d 	bl	8007b0c <HAL_I2C_IsDeviceReady>
 80060d2:	4603      	mov	r3, r0
 80060d4:	2b00      	cmp	r3, #0
 80060d6:	d144      	bne.n	8006162 <main+0x156>
	{
	  	isConnected = 1;
 80060d8:	4b34      	ldr	r3, [pc, #208]	; (80061ac <main+0x1a0>)
 80060da:	2201      	movs	r2, #1
 80060dc:	601a      	str	r2, [r3, #0]
	  	cmd[0] = 0x04;
 80060de:	4b34      	ldr	r3, [pc, #208]	; (80061b0 <main+0x1a4>)
 80060e0:	2204      	movs	r2, #4
 80060e2:	701a      	strb	r2, [r3, #0]
	  	if(HAL_I2C_Mem_Write(&hi2c1,LIDAR_ADD,0x00,1,cmd,1,100) == HAL_OK)
 80060e4:	4b2f      	ldr	r3, [pc, #188]	; (80061a4 <main+0x198>)
 80060e6:	781b      	ldrb	r3, [r3, #0]
 80060e8:	b299      	uxth	r1, r3
 80060ea:	2364      	movs	r3, #100	; 0x64
 80060ec:	9302      	str	r3, [sp, #8]
 80060ee:	2301      	movs	r3, #1
 80060f0:	9301      	str	r3, [sp, #4]
 80060f2:	4b2f      	ldr	r3, [pc, #188]	; (80061b0 <main+0x1a4>)
 80060f4:	9300      	str	r3, [sp, #0]
 80060f6:	2301      	movs	r3, #1
 80060f8:	2200      	movs	r2, #0
 80060fa:	482b      	ldr	r0, [pc, #172]	; (80061a8 <main+0x19c>)
 80060fc:	f001 fc0c 	bl	8007918 <HAL_I2C_Mem_Write>
 8006100:	4603      	mov	r3, r0
 8006102:	2b00      	cmp	r3, #0
 8006104:	d1cb      	bne.n	800609e <main+0x92>
	  	{
	  		//isConnected = 2;
	  		/*Lire les 2 octets venant de 0x8f*/
	  		cmd[0] = 0x8f;
 8006106:	4b2a      	ldr	r3, [pc, #168]	; (80061b0 <main+0x1a4>)
 8006108:	228f      	movs	r2, #143	; 0x8f
 800610a:	701a      	strb	r2, [r3, #0]
	  		HAL_I2C_Master_Transmit(&hi2c1,LIDAR_ADD,cmd,1,100);
 800610c:	4b25      	ldr	r3, [pc, #148]	; (80061a4 <main+0x198>)
 800610e:	781b      	ldrb	r3, [r3, #0]
 8006110:	b299      	uxth	r1, r3
 8006112:	2364      	movs	r3, #100	; 0x64
 8006114:	9300      	str	r3, [sp, #0]
 8006116:	2301      	movs	r3, #1
 8006118:	4a25      	ldr	r2, [pc, #148]	; (80061b0 <main+0x1a4>)
 800611a:	4823      	ldr	r0, [pc, #140]	; (80061a8 <main+0x19c>)
 800611c:	f001 f8d8 	bl	80072d0 <HAL_I2C_Master_Transmit>
	  		HAL_I2C_Master_Receive(&hi2c1, LIDAR_ADD, data,2,100);
 8006120:	4b20      	ldr	r3, [pc, #128]	; (80061a4 <main+0x198>)
 8006122:	781b      	ldrb	r3, [r3, #0]
 8006124:	b299      	uxth	r1, r3
 8006126:	1d3a      	adds	r2, r7, #4
 8006128:	2364      	movs	r3, #100	; 0x64
 800612a:	9300      	str	r3, [sp, #0]
 800612c:	2302      	movs	r3, #2
 800612e:	481e      	ldr	r0, [pc, #120]	; (80061a8 <main+0x19c>)
 8006130:	f001 f9cc 	bl	80074cc <HAL_I2C_Master_Receive>
	  		distance =(data[0]<<8)|(data[1]);
 8006134:	793b      	ldrb	r3, [r7, #4]
 8006136:	021b      	lsls	r3, r3, #8
 8006138:	797a      	ldrb	r2, [r7, #5]
 800613a:	4313      	orrs	r3, r2
 800613c:	4a1d      	ldr	r2, [pc, #116]	; (80061b4 <main+0x1a8>)
 800613e:	6013      	str	r3, [r2, #0]
	  		/*----ADAPTATION DISTANCE ET VITESSE EN FONCTION DU CHOIX UTILISATEUR----*/
	  		//pwm = modeAuto(distance, boutonDistance(buttonDistance));

	  		adaptVitesseDistance(boutonDistance(buttonDistance) , boutonVitesse(buttonVitesse) );
 8006140:	4b0a      	ldr	r3, [pc, #40]	; (800616c <main+0x160>)
 8006142:	681b      	ldr	r3, [r3, #0]
 8006144:	4618      	mov	r0, r3
 8006146:	f7ff fd6d 	bl	8005c24 <boutonDistance>
 800614a:	4604      	mov	r4, r0
 800614c:	4b08      	ldr	r3, [pc, #32]	; (8006170 <main+0x164>)
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	4618      	mov	r0, r3
 8006152:	f7ff fd85 	bl	8005c60 <boutonVitesse>
 8006156:	4603      	mov	r3, r0
 8006158:	4619      	mov	r1, r3
 800615a:	4620      	mov	r0, r4
 800615c:	f7ff fea8 	bl	8005eb0 <adaptVitesseDistance>
 8006160:	e79d      	b.n	800609e <main+0x92>
	  	}
	}else{
		isConnected = -1;
 8006162:	4b12      	ldr	r3, [pc, #72]	; (80061ac <main+0x1a0>)
 8006164:	f04f 32ff 	mov.w	r2, #4294967295
 8006168:	601a      	str	r2, [r3, #0]
	tim4_cnt = (htim1.Instance->CNT / 24 );
 800616a:	e798      	b.n	800609e <main+0x92>
 800616c:	2000015c 	.word	0x2000015c
 8006170:	200001a4 	.word	0x200001a4
 8006174:	20000150 	.word	0x20000150
 8006178:	200000fc 	.word	0x200000fc
 800617c:	2000014c 	.word	0x2000014c
 8006180:	200000f8 	.word	0x200000f8
 8006184:	20000200 	.word	0x20000200
 8006188:	20000154 	.word	0x20000154
 800618c:	200001f8 	.word	0x200001f8
 8006190:	20000164 	.word	0x20000164
 8006194:	20000108 	.word	0x20000108
 8006198:	aaaaaaab 	.word	0xaaaaaaab
 800619c:	20000094 	.word	0x20000094
 80061a0:	20000100 	.word	0x20000100
 80061a4:	20000000 	.word	0x20000000
 80061a8:	200000a4 	.word	0x200000a4
 80061ac:	20000148 	.word	0x20000148
 80061b0:	200001fc 	.word	0x200001fc
 80061b4:	20000104 	.word	0x20000104

080061b8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80061b8:	b580      	push	{r7, lr}
 80061ba:	b094      	sub	sp, #80	; 0x50
 80061bc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80061be:	f107 0320 	add.w	r3, r7, #32
 80061c2:	2230      	movs	r2, #48	; 0x30
 80061c4:	2100      	movs	r1, #0
 80061c6:	4618      	mov	r0, r3
 80061c8:	f004 f814 	bl	800a1f4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80061cc:	f107 030c 	add.w	r3, r7, #12
 80061d0:	2200      	movs	r2, #0
 80061d2:	601a      	str	r2, [r3, #0]
 80061d4:	605a      	str	r2, [r3, #4]
 80061d6:	609a      	str	r2, [r3, #8]
 80061d8:	60da      	str	r2, [r3, #12]
 80061da:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80061dc:	2300      	movs	r3, #0
 80061de:	60bb      	str	r3, [r7, #8]
 80061e0:	4b22      	ldr	r3, [pc, #136]	; (800626c <SystemClock_Config+0xb4>)
 80061e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061e4:	4a21      	ldr	r2, [pc, #132]	; (800626c <SystemClock_Config+0xb4>)
 80061e6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80061ea:	6413      	str	r3, [r2, #64]	; 0x40
 80061ec:	4b1f      	ldr	r3, [pc, #124]	; (800626c <SystemClock_Config+0xb4>)
 80061ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80061f4:	60bb      	str	r3, [r7, #8]
 80061f6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80061f8:	2300      	movs	r3, #0
 80061fa:	607b      	str	r3, [r7, #4]
 80061fc:	4b1c      	ldr	r3, [pc, #112]	; (8006270 <SystemClock_Config+0xb8>)
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	4a1b      	ldr	r2, [pc, #108]	; (8006270 <SystemClock_Config+0xb8>)
 8006202:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006206:	6013      	str	r3, [r2, #0]
 8006208:	4b19      	ldr	r3, [pc, #100]	; (8006270 <SystemClock_Config+0xb8>)
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8006210:	607b      	str	r3, [r7, #4]
 8006212:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8006214:	2302      	movs	r3, #2
 8006216:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8006218:	2301      	movs	r3, #1
 800621a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800621c:	2310      	movs	r3, #16
 800621e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8006220:	2300      	movs	r3, #0
 8006222:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8006224:	f107 0320 	add.w	r3, r7, #32
 8006228:	4618      	mov	r0, r3
 800622a:	f002 f961 	bl	80084f0 <HAL_RCC_OscConfig>
 800622e:	4603      	mov	r3, r0
 8006230:	2b00      	cmp	r3, #0
 8006232:	d001      	beq.n	8006238 <SystemClock_Config+0x80>
  {
    Error_Handler();
 8006234:	f000 f9be 	bl	80065b4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8006238:	230f      	movs	r3, #15
 800623a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800623c:	2300      	movs	r3, #0
 800623e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8006240:	2300      	movs	r3, #0
 8006242:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8006244:	2300      	movs	r3, #0
 8006246:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8006248:	2300      	movs	r3, #0
 800624a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800624c:	f107 030c 	add.w	r3, r7, #12
 8006250:	2100      	movs	r1, #0
 8006252:	4618      	mov	r0, r3
 8006254:	f002 fbbc 	bl	80089d0 <HAL_RCC_ClockConfig>
 8006258:	4603      	mov	r3, r0
 800625a:	2b00      	cmp	r3, #0
 800625c:	d001      	beq.n	8006262 <SystemClock_Config+0xaa>
  {
    Error_Handler();
 800625e:	f000 f9a9 	bl	80065b4 <Error_Handler>
  }
}
 8006262:	bf00      	nop
 8006264:	3750      	adds	r7, #80	; 0x50
 8006266:	46bd      	mov	sp, r7
 8006268:	bd80      	pop	{r7, pc}
 800626a:	bf00      	nop
 800626c:	40023800 	.word	0x40023800
 8006270:	40007000 	.word	0x40007000

08006274 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8006274:	b580      	push	{r7, lr}
 8006276:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8006278:	4b12      	ldr	r3, [pc, #72]	; (80062c4 <MX_I2C1_Init+0x50>)
 800627a:	4a13      	ldr	r2, [pc, #76]	; (80062c8 <MX_I2C1_Init+0x54>)
 800627c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 800627e:	4b11      	ldr	r3, [pc, #68]	; (80062c4 <MX_I2C1_Init+0x50>)
 8006280:	4a12      	ldr	r2, [pc, #72]	; (80062cc <MX_I2C1_Init+0x58>)
 8006282:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8006284:	4b0f      	ldr	r3, [pc, #60]	; (80062c4 <MX_I2C1_Init+0x50>)
 8006286:	2200      	movs	r2, #0
 8006288:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800628a:	4b0e      	ldr	r3, [pc, #56]	; (80062c4 <MX_I2C1_Init+0x50>)
 800628c:	2200      	movs	r2, #0
 800628e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8006290:	4b0c      	ldr	r3, [pc, #48]	; (80062c4 <MX_I2C1_Init+0x50>)
 8006292:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8006296:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8006298:	4b0a      	ldr	r3, [pc, #40]	; (80062c4 <MX_I2C1_Init+0x50>)
 800629a:	2200      	movs	r2, #0
 800629c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800629e:	4b09      	ldr	r3, [pc, #36]	; (80062c4 <MX_I2C1_Init+0x50>)
 80062a0:	2200      	movs	r2, #0
 80062a2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80062a4:	4b07      	ldr	r3, [pc, #28]	; (80062c4 <MX_I2C1_Init+0x50>)
 80062a6:	2200      	movs	r2, #0
 80062a8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80062aa:	4b06      	ldr	r3, [pc, #24]	; (80062c4 <MX_I2C1_Init+0x50>)
 80062ac:	2200      	movs	r2, #0
 80062ae:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80062b0:	4804      	ldr	r0, [pc, #16]	; (80062c4 <MX_I2C1_Init+0x50>)
 80062b2:	f000 fed5 	bl	8007060 <HAL_I2C_Init>
 80062b6:	4603      	mov	r3, r0
 80062b8:	2b00      	cmp	r3, #0
 80062ba:	d001      	beq.n	80062c0 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80062bc:	f000 f97a 	bl	80065b4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80062c0:	bf00      	nop
 80062c2:	bd80      	pop	{r7, pc}
 80062c4:	200000a4 	.word	0x200000a4
 80062c8:	40005400 	.word	0x40005400
 80062cc:	00061a80 	.word	0x00061a80

080062d0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80062d0:	b580      	push	{r7, lr}
 80062d2:	b08c      	sub	sp, #48	; 0x30
 80062d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80062d6:	f107 030c 	add.w	r3, r7, #12
 80062da:	2224      	movs	r2, #36	; 0x24
 80062dc:	2100      	movs	r1, #0
 80062de:	4618      	mov	r0, r3
 80062e0:	f003 ff88 	bl	800a1f4 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80062e4:	1d3b      	adds	r3, r7, #4
 80062e6:	2200      	movs	r2, #0
 80062e8:	601a      	str	r2, [r3, #0]
 80062ea:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80062ec:	4b22      	ldr	r3, [pc, #136]	; (8006378 <MX_TIM1_Init+0xa8>)
 80062ee:	4a23      	ldr	r2, [pc, #140]	; (800637c <MX_TIM1_Init+0xac>)
 80062f0:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80062f2:	4b21      	ldr	r3, [pc, #132]	; (8006378 <MX_TIM1_Init+0xa8>)
 80062f4:	2200      	movs	r2, #0
 80062f6:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80062f8:	4b1f      	ldr	r3, [pc, #124]	; (8006378 <MX_TIM1_Init+0xa8>)
 80062fa:	2200      	movs	r2, #0
 80062fc:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 0xffff;
 80062fe:	4b1e      	ldr	r3, [pc, #120]	; (8006378 <MX_TIM1_Init+0xa8>)
 8006300:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006304:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006306:	4b1c      	ldr	r3, [pc, #112]	; (8006378 <MX_TIM1_Init+0xa8>)
 8006308:	2200      	movs	r2, #0
 800630a:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800630c:	4b1a      	ldr	r3, [pc, #104]	; (8006378 <MX_TIM1_Init+0xa8>)
 800630e:	2200      	movs	r2, #0
 8006310:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8006312:	4b19      	ldr	r3, [pc, #100]	; (8006378 <MX_TIM1_Init+0xa8>)
 8006314:	2200      	movs	r2, #0
 8006316:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8006318:	2301      	movs	r3, #1
 800631a:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800631c:	2300      	movs	r3, #0
 800631e:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8006320:	2301      	movs	r3, #1
 8006322:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8006324:	2300      	movs	r3, #0
 8006326:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 8006328:	230c      	movs	r3, #12
 800632a:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800632c:	2300      	movs	r3, #0
 800632e:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8006330:	2301      	movs	r3, #1
 8006332:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8006334:	2300      	movs	r3, #0
 8006336:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 8006338:	230c      	movs	r3, #12
 800633a:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 800633c:	f107 030c 	add.w	r3, r7, #12
 8006340:	4619      	mov	r1, r3
 8006342:	480d      	ldr	r0, [pc, #52]	; (8006378 <MX_TIM1_Init+0xa8>)
 8006344:	f002 fdca 	bl	8008edc <HAL_TIM_Encoder_Init>
 8006348:	4603      	mov	r3, r0
 800634a:	2b00      	cmp	r3, #0
 800634c:	d001      	beq.n	8006352 <MX_TIM1_Init+0x82>
  {
    Error_Handler();
 800634e:	f000 f931 	bl	80065b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_OC1;
 8006352:	2330      	movs	r3, #48	; 0x30
 8006354:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006356:	2300      	movs	r3, #0
 8006358:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800635a:	1d3b      	adds	r3, r7, #4
 800635c:	4619      	mov	r1, r3
 800635e:	4806      	ldr	r0, [pc, #24]	; (8006378 <MX_TIM1_Init+0xa8>)
 8006360:	f003 fab8 	bl	80098d4 <HAL_TIMEx_MasterConfigSynchronization>
 8006364:	4603      	mov	r3, r0
 8006366:	2b00      	cmp	r3, #0
 8006368:	d001      	beq.n	800636e <MX_TIM1_Init+0x9e>
  {
    Error_Handler();
 800636a:	f000 f923 	bl	80065b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800636e:	bf00      	nop
 8006370:	3730      	adds	r7, #48	; 0x30
 8006372:	46bd      	mov	sp, r7
 8006374:	bd80      	pop	{r7, pc}
 8006376:	bf00      	nop
 8006378:	20000164 	.word	0x20000164
 800637c:	40010000 	.word	0x40010000

08006380 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8006380:	b580      	push	{r7, lr}
 8006382:	b08a      	sub	sp, #40	; 0x28
 8006384:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006386:	f107 0320 	add.w	r3, r7, #32
 800638a:	2200      	movs	r2, #0
 800638c:	601a      	str	r2, [r3, #0]
 800638e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8006390:	1d3b      	adds	r3, r7, #4
 8006392:	2200      	movs	r2, #0
 8006394:	601a      	str	r2, [r3, #0]
 8006396:	605a      	str	r2, [r3, #4]
 8006398:	609a      	str	r2, [r3, #8]
 800639a:	60da      	str	r2, [r3, #12]
 800639c:	611a      	str	r2, [r3, #16]
 800639e:	615a      	str	r2, [r3, #20]
 80063a0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80063a2:	4b22      	ldr	r3, [pc, #136]	; (800642c <MX_TIM3_Init+0xac>)
 80063a4:	4a22      	ldr	r2, [pc, #136]	; (8006430 <MX_TIM3_Init+0xb0>)
 80063a6:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 20000-1;
 80063a8:	4b20      	ldr	r3, [pc, #128]	; (800642c <MX_TIM3_Init+0xac>)
 80063aa:	f644 621f 	movw	r2, #19999	; 0x4e1f
 80063ae:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80063b0:	4b1e      	ldr	r3, [pc, #120]	; (800642c <MX_TIM3_Init+0xac>)
 80063b2:	2200      	movs	r2, #0
 80063b4:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100-1;
 80063b6:	4b1d      	ldr	r3, [pc, #116]	; (800642c <MX_TIM3_Init+0xac>)
 80063b8:	2263      	movs	r2, #99	; 0x63
 80063ba:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80063bc:	4b1b      	ldr	r3, [pc, #108]	; (800642c <MX_TIM3_Init+0xac>)
 80063be:	2200      	movs	r2, #0
 80063c0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80063c2:	4b1a      	ldr	r3, [pc, #104]	; (800642c <MX_TIM3_Init+0xac>)
 80063c4:	2200      	movs	r2, #0
 80063c6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80063c8:	4818      	ldr	r0, [pc, #96]	; (800642c <MX_TIM3_Init+0xac>)
 80063ca:	f002 fcf3 	bl	8008db4 <HAL_TIM_PWM_Init>
 80063ce:	4603      	mov	r3, r0
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	d001      	beq.n	80063d8 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 80063d4:	f000 f8ee 	bl	80065b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80063d8:	2300      	movs	r3, #0
 80063da:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80063dc:	2300      	movs	r3, #0
 80063de:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80063e0:	f107 0320 	add.w	r3, r7, #32
 80063e4:	4619      	mov	r1, r3
 80063e6:	4811      	ldr	r0, [pc, #68]	; (800642c <MX_TIM3_Init+0xac>)
 80063e8:	f003 fa74 	bl	80098d4 <HAL_TIMEx_MasterConfigSynchronization>
 80063ec:	4603      	mov	r3, r0
 80063ee:	2b00      	cmp	r3, #0
 80063f0:	d001      	beq.n	80063f6 <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 80063f2:	f000 f8df 	bl	80065b4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80063f6:	2360      	movs	r3, #96	; 0x60
 80063f8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80063fa:	2300      	movs	r3, #0
 80063fc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80063fe:	2300      	movs	r3, #0
 8006400:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8006402:	2300      	movs	r3, #0
 8006404:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8006406:	1d3b      	adds	r3, r7, #4
 8006408:	2200      	movs	r2, #0
 800640a:	4619      	mov	r1, r3
 800640c:	4807      	ldr	r0, [pc, #28]	; (800642c <MX_TIM3_Init+0xac>)
 800640e:	f002 ff37 	bl	8009280 <HAL_TIM_PWM_ConfigChannel>
 8006412:	4603      	mov	r3, r0
 8006414:	2b00      	cmp	r3, #0
 8006416:	d001      	beq.n	800641c <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8006418:	f000 f8cc 	bl	80065b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800641c:	4803      	ldr	r0, [pc, #12]	; (800642c <MX_TIM3_Init+0xac>)
 800641e:	f000 f9b1 	bl	8006784 <HAL_TIM_MspPostInit>

}
 8006422:	bf00      	nop
 8006424:	3728      	adds	r7, #40	; 0x28
 8006426:	46bd      	mov	sp, r7
 8006428:	bd80      	pop	{r7, pc}
 800642a:	bf00      	nop
 800642c:	20000108 	.word	0x20000108
 8006430:	40000400 	.word	0x40000400

08006434 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8006434:	b580      	push	{r7, lr}
 8006436:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8006438:	4b11      	ldr	r3, [pc, #68]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 800643a:	4a12      	ldr	r2, [pc, #72]	; (8006484 <MX_USART2_UART_Init+0x50>)
 800643c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800643e:	4b10      	ldr	r3, [pc, #64]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 8006440:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006444:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8006446:	4b0e      	ldr	r3, [pc, #56]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 8006448:	2200      	movs	r2, #0
 800644a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800644c:	4b0c      	ldr	r3, [pc, #48]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 800644e:	2200      	movs	r2, #0
 8006450:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8006452:	4b0b      	ldr	r3, [pc, #44]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 8006454:	2200      	movs	r2, #0
 8006456:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8006458:	4b09      	ldr	r3, [pc, #36]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 800645a:	220c      	movs	r2, #12
 800645c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800645e:	4b08      	ldr	r3, [pc, #32]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 8006460:	2200      	movs	r2, #0
 8006462:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8006464:	4b06      	ldr	r3, [pc, #24]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 8006466:	2200      	movs	r2, #0
 8006468:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800646a:	4805      	ldr	r0, [pc, #20]	; (8006480 <MX_USART2_UART_Init+0x4c>)
 800646c:	f003 fab4 	bl	80099d8 <HAL_UART_Init>
 8006470:	4603      	mov	r3, r0
 8006472:	2b00      	cmp	r3, #0
 8006474:	d001      	beq.n	800647a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8006476:	f000 f89d 	bl	80065b4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800647a:	bf00      	nop
 800647c:	bd80      	pop	{r7, pc}
 800647e:	bf00      	nop
 8006480:	200001b4 	.word	0x200001b4
 8006484:	40004400 	.word	0x40004400

08006488 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8006488:	b580      	push	{r7, lr}
 800648a:	b08a      	sub	sp, #40	; 0x28
 800648c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800648e:	f107 0314 	add.w	r3, r7, #20
 8006492:	2200      	movs	r2, #0
 8006494:	601a      	str	r2, [r3, #0]
 8006496:	605a      	str	r2, [r3, #4]
 8006498:	609a      	str	r2, [r3, #8]
 800649a:	60da      	str	r2, [r3, #12]
 800649c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800649e:	2300      	movs	r3, #0
 80064a0:	613b      	str	r3, [r7, #16]
 80064a2:	4b3f      	ldr	r3, [pc, #252]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064a6:	4a3e      	ldr	r2, [pc, #248]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064a8:	f043 0304 	orr.w	r3, r3, #4
 80064ac:	6313      	str	r3, [r2, #48]	; 0x30
 80064ae:	4b3c      	ldr	r3, [pc, #240]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064b2:	f003 0304 	and.w	r3, r3, #4
 80064b6:	613b      	str	r3, [r7, #16]
 80064b8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80064ba:	2300      	movs	r3, #0
 80064bc:	60fb      	str	r3, [r7, #12]
 80064be:	4b38      	ldr	r3, [pc, #224]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064c2:	4a37      	ldr	r2, [pc, #220]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80064c8:	6313      	str	r3, [r2, #48]	; 0x30
 80064ca:	4b35      	ldr	r3, [pc, #212]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80064d2:	60fb      	str	r3, [r7, #12]
 80064d4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80064d6:	2300      	movs	r3, #0
 80064d8:	60bb      	str	r3, [r7, #8]
 80064da:	4b31      	ldr	r3, [pc, #196]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064de:	4a30      	ldr	r2, [pc, #192]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064e0:	f043 0301 	orr.w	r3, r3, #1
 80064e4:	6313      	str	r3, [r2, #48]	; 0x30
 80064e6:	4b2e      	ldr	r3, [pc, #184]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064ea:	f003 0301 	and.w	r3, r3, #1
 80064ee:	60bb      	str	r3, [r7, #8]
 80064f0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80064f2:	2300      	movs	r3, #0
 80064f4:	607b      	str	r3, [r7, #4]
 80064f6:	4b2a      	ldr	r3, [pc, #168]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064fa:	4a29      	ldr	r2, [pc, #164]	; (80065a0 <MX_GPIO_Init+0x118>)
 80064fc:	f043 0302 	orr.w	r3, r3, #2
 8006500:	6313      	str	r3, [r2, #48]	; 0x30
 8006502:	4b27      	ldr	r3, [pc, #156]	; (80065a0 <MX_GPIO_Init+0x118>)
 8006504:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006506:	f003 0302 	and.w	r3, r3, #2
 800650a:	607b      	str	r3, [r7, #4]
 800650c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 800650e:	2200      	movs	r2, #0
 8006510:	2120      	movs	r1, #32
 8006512:	4824      	ldr	r0, [pc, #144]	; (80065a4 <MX_GPIO_Init+0x11c>)
 8006514:	f000 fd8a 	bl	800702c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8006518:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800651c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800651e:	4b22      	ldr	r3, [pc, #136]	; (80065a8 <MX_GPIO_Init+0x120>)
 8006520:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006522:	2300      	movs	r3, #0
 8006524:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8006526:	f107 0314 	add.w	r3, r7, #20
 800652a:	4619      	mov	r1, r3
 800652c:	481f      	ldr	r0, [pc, #124]	; (80065ac <MX_GPIO_Init+0x124>)
 800652e:	f000 fbe3 	bl	8006cf8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC0 PC1 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8006532:	2303      	movs	r3, #3
 8006534:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006536:	2300      	movs	r3, #0
 8006538:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800653a:	2300      	movs	r3, #0
 800653c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800653e:	f107 0314 	add.w	r3, r7, #20
 8006542:	4619      	mov	r1, r3
 8006544:	4819      	ldr	r0, [pc, #100]	; (80065ac <MX_GPIO_Init+0x124>)
 8006546:	f000 fbd7 	bl	8006cf8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA1 PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_4;
 800654a:	2312      	movs	r3, #18
 800654c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800654e:	2300      	movs	r3, #0
 8006550:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006552:	2300      	movs	r3, #0
 8006554:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006556:	f107 0314 	add.w	r3, r7, #20
 800655a:	4619      	mov	r1, r3
 800655c:	4811      	ldr	r0, [pc, #68]	; (80065a4 <MX_GPIO_Init+0x11c>)
 800655e:	f000 fbcb 	bl	8006cf8 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8006562:	2320      	movs	r3, #32
 8006564:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006566:	2301      	movs	r3, #1
 8006568:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800656a:	2300      	movs	r3, #0
 800656c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800656e:	2300      	movs	r3, #0
 8006570:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8006572:	f107 0314 	add.w	r3, r7, #20
 8006576:	4619      	mov	r1, r3
 8006578:	480a      	ldr	r0, [pc, #40]	; (80065a4 <MX_GPIO_Init+0x11c>)
 800657a:	f000 fbbd 	bl	8006cf8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800657e:	2301      	movs	r3, #1
 8006580:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006582:	2300      	movs	r3, #0
 8006584:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006586:	2300      	movs	r3, #0
 8006588:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800658a:	f107 0314 	add.w	r3, r7, #20
 800658e:	4619      	mov	r1, r3
 8006590:	4807      	ldr	r0, [pc, #28]	; (80065b0 <MX_GPIO_Init+0x128>)
 8006592:	f000 fbb1 	bl	8006cf8 <HAL_GPIO_Init>

}
 8006596:	bf00      	nop
 8006598:	3728      	adds	r7, #40	; 0x28
 800659a:	46bd      	mov	sp, r7
 800659c:	bd80      	pop	{r7, pc}
 800659e:	bf00      	nop
 80065a0:	40023800 	.word	0x40023800
 80065a4:	40020000 	.word	0x40020000
 80065a8:	10210000 	.word	0x10210000
 80065ac:	40020800 	.word	0x40020800
 80065b0:	40020400 	.word	0x40020400

080065b4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80065b4:	b480      	push	{r7}
 80065b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80065b8:	bf00      	nop
 80065ba:	46bd      	mov	sp, r7
 80065bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065c0:	4770      	bx	lr
	...

080065c4 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80065c4:	b580      	push	{r7, lr}
 80065c6:	b082      	sub	sp, #8
 80065c8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80065ca:	2300      	movs	r3, #0
 80065cc:	607b      	str	r3, [r7, #4]
 80065ce:	4b10      	ldr	r3, [pc, #64]	; (8006610 <HAL_MspInit+0x4c>)
 80065d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80065d2:	4a0f      	ldr	r2, [pc, #60]	; (8006610 <HAL_MspInit+0x4c>)
 80065d4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80065d8:	6453      	str	r3, [r2, #68]	; 0x44
 80065da:	4b0d      	ldr	r3, [pc, #52]	; (8006610 <HAL_MspInit+0x4c>)
 80065dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80065de:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80065e2:	607b      	str	r3, [r7, #4]
 80065e4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80065e6:	2300      	movs	r3, #0
 80065e8:	603b      	str	r3, [r7, #0]
 80065ea:	4b09      	ldr	r3, [pc, #36]	; (8006610 <HAL_MspInit+0x4c>)
 80065ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065ee:	4a08      	ldr	r2, [pc, #32]	; (8006610 <HAL_MspInit+0x4c>)
 80065f0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80065f4:	6413      	str	r3, [r2, #64]	; 0x40
 80065f6:	4b06      	ldr	r3, [pc, #24]	; (8006610 <HAL_MspInit+0x4c>)
 80065f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80065fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80065fe:	603b      	str	r3, [r7, #0]
 8006600:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8006602:	2007      	movs	r0, #7
 8006604:	f000 fb36 	bl	8006c74 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8006608:	bf00      	nop
 800660a:	3708      	adds	r7, #8
 800660c:	46bd      	mov	sp, r7
 800660e:	bd80      	pop	{r7, pc}
 8006610:	40023800 	.word	0x40023800

08006614 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8006614:	b580      	push	{r7, lr}
 8006616:	b08a      	sub	sp, #40	; 0x28
 8006618:	af00      	add	r7, sp, #0
 800661a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800661c:	f107 0314 	add.w	r3, r7, #20
 8006620:	2200      	movs	r2, #0
 8006622:	601a      	str	r2, [r3, #0]
 8006624:	605a      	str	r2, [r3, #4]
 8006626:	609a      	str	r2, [r3, #8]
 8006628:	60da      	str	r2, [r3, #12]
 800662a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	681b      	ldr	r3, [r3, #0]
 8006630:	4a19      	ldr	r2, [pc, #100]	; (8006698 <HAL_I2C_MspInit+0x84>)
 8006632:	4293      	cmp	r3, r2
 8006634:	d12c      	bne.n	8006690 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006636:	2300      	movs	r3, #0
 8006638:	613b      	str	r3, [r7, #16]
 800663a:	4b18      	ldr	r3, [pc, #96]	; (800669c <HAL_I2C_MspInit+0x88>)
 800663c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800663e:	4a17      	ldr	r2, [pc, #92]	; (800669c <HAL_I2C_MspInit+0x88>)
 8006640:	f043 0302 	orr.w	r3, r3, #2
 8006644:	6313      	str	r3, [r2, #48]	; 0x30
 8006646:	4b15      	ldr	r3, [pc, #84]	; (800669c <HAL_I2C_MspInit+0x88>)
 8006648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800664a:	f003 0302 	and.w	r3, r3, #2
 800664e:	613b      	str	r3, [r7, #16]
 8006650:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8006652:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006656:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8006658:	2312      	movs	r3, #18
 800665a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800665c:	2301      	movs	r3, #1
 800665e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006660:	2303      	movs	r3, #3
 8006662:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8006664:	2304      	movs	r3, #4
 8006666:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006668:	f107 0314 	add.w	r3, r7, #20
 800666c:	4619      	mov	r1, r3
 800666e:	480c      	ldr	r0, [pc, #48]	; (80066a0 <HAL_I2C_MspInit+0x8c>)
 8006670:	f000 fb42 	bl	8006cf8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8006674:	2300      	movs	r3, #0
 8006676:	60fb      	str	r3, [r7, #12]
 8006678:	4b08      	ldr	r3, [pc, #32]	; (800669c <HAL_I2C_MspInit+0x88>)
 800667a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800667c:	4a07      	ldr	r2, [pc, #28]	; (800669c <HAL_I2C_MspInit+0x88>)
 800667e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8006682:	6413      	str	r3, [r2, #64]	; 0x40
 8006684:	4b05      	ldr	r3, [pc, #20]	; (800669c <HAL_I2C_MspInit+0x88>)
 8006686:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006688:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800668c:	60fb      	str	r3, [r7, #12]
 800668e:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8006690:	bf00      	nop
 8006692:	3728      	adds	r7, #40	; 0x28
 8006694:	46bd      	mov	sp, r7
 8006696:	bd80      	pop	{r7, pc}
 8006698:	40005400 	.word	0x40005400
 800669c:	40023800 	.word	0x40023800
 80066a0:	40020400 	.word	0x40020400

080066a4 <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 80066a4:	b580      	push	{r7, lr}
 80066a6:	b08a      	sub	sp, #40	; 0x28
 80066a8:	af00      	add	r7, sp, #0
 80066aa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80066ac:	f107 0314 	add.w	r3, r7, #20
 80066b0:	2200      	movs	r2, #0
 80066b2:	601a      	str	r2, [r3, #0]
 80066b4:	605a      	str	r2, [r3, #4]
 80066b6:	609a      	str	r2, [r3, #8]
 80066b8:	60da      	str	r2, [r3, #12]
 80066ba:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM1)
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	681b      	ldr	r3, [r3, #0]
 80066c0:	4a19      	ldr	r2, [pc, #100]	; (8006728 <HAL_TIM_Encoder_MspInit+0x84>)
 80066c2:	4293      	cmp	r3, r2
 80066c4:	d12c      	bne.n	8006720 <HAL_TIM_Encoder_MspInit+0x7c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80066c6:	2300      	movs	r3, #0
 80066c8:	613b      	str	r3, [r7, #16]
 80066ca:	4b18      	ldr	r3, [pc, #96]	; (800672c <HAL_TIM_Encoder_MspInit+0x88>)
 80066cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80066ce:	4a17      	ldr	r2, [pc, #92]	; (800672c <HAL_TIM_Encoder_MspInit+0x88>)
 80066d0:	f043 0301 	orr.w	r3, r3, #1
 80066d4:	6453      	str	r3, [r2, #68]	; 0x44
 80066d6:	4b15      	ldr	r3, [pc, #84]	; (800672c <HAL_TIM_Encoder_MspInit+0x88>)
 80066d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80066da:	f003 0301 	and.w	r3, r3, #1
 80066de:	613b      	str	r3, [r7, #16]
 80066e0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80066e2:	2300      	movs	r3, #0
 80066e4:	60fb      	str	r3, [r7, #12]
 80066e6:	4b11      	ldr	r3, [pc, #68]	; (800672c <HAL_TIM_Encoder_MspInit+0x88>)
 80066e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066ea:	4a10      	ldr	r2, [pc, #64]	; (800672c <HAL_TIM_Encoder_MspInit+0x88>)
 80066ec:	f043 0301 	orr.w	r3, r3, #1
 80066f0:	6313      	str	r3, [r2, #48]	; 0x30
 80066f2:	4b0e      	ldr	r3, [pc, #56]	; (800672c <HAL_TIM_Encoder_MspInit+0x88>)
 80066f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066f6:	f003 0301 	and.w	r3, r3, #1
 80066fa:	60fb      	str	r3, [r7, #12]
 80066fc:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80066fe:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006702:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006704:	2302      	movs	r3, #2
 8006706:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8006708:	2301      	movs	r3, #1
 800670a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800670c:	2300      	movs	r3, #0
 800670e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8006710:	2301      	movs	r3, #1
 8006712:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006714:	f107 0314 	add.w	r3, r7, #20
 8006718:	4619      	mov	r1, r3
 800671a:	4805      	ldr	r0, [pc, #20]	; (8006730 <HAL_TIM_Encoder_MspInit+0x8c>)
 800671c:	f000 faec 	bl	8006cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 8006720:	bf00      	nop
 8006722:	3728      	adds	r7, #40	; 0x28
 8006724:	46bd      	mov	sp, r7
 8006726:	bd80      	pop	{r7, pc}
 8006728:	40010000 	.word	0x40010000
 800672c:	40023800 	.word	0x40023800
 8006730:	40020000 	.word	0x40020000

08006734 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8006734:	b580      	push	{r7, lr}
 8006736:	b084      	sub	sp, #16
 8006738:	af00      	add	r7, sp, #0
 800673a:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM3)
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	4a0e      	ldr	r2, [pc, #56]	; (800677c <HAL_TIM_PWM_MspInit+0x48>)
 8006742:	4293      	cmp	r3, r2
 8006744:	d115      	bne.n	8006772 <HAL_TIM_PWM_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8006746:	2300      	movs	r3, #0
 8006748:	60fb      	str	r3, [r7, #12]
 800674a:	4b0d      	ldr	r3, [pc, #52]	; (8006780 <HAL_TIM_PWM_MspInit+0x4c>)
 800674c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800674e:	4a0c      	ldr	r2, [pc, #48]	; (8006780 <HAL_TIM_PWM_MspInit+0x4c>)
 8006750:	f043 0302 	orr.w	r3, r3, #2
 8006754:	6413      	str	r3, [r2, #64]	; 0x40
 8006756:	4b0a      	ldr	r3, [pc, #40]	; (8006780 <HAL_TIM_PWM_MspInit+0x4c>)
 8006758:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800675a:	f003 0302 	and.w	r3, r3, #2
 800675e:	60fb      	str	r3, [r7, #12]
 8006760:	68fb      	ldr	r3, [r7, #12]
    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8006762:	2200      	movs	r2, #0
 8006764:	2100      	movs	r1, #0
 8006766:	201d      	movs	r0, #29
 8006768:	f000 fa8f 	bl	8006c8a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 800676c:	201d      	movs	r0, #29
 800676e:	f000 faa8 	bl	8006cc2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8006772:	bf00      	nop
 8006774:	3710      	adds	r7, #16
 8006776:	46bd      	mov	sp, r7
 8006778:	bd80      	pop	{r7, pc}
 800677a:	bf00      	nop
 800677c:	40000400 	.word	0x40000400
 8006780:	40023800 	.word	0x40023800

08006784 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8006784:	b580      	push	{r7, lr}
 8006786:	b088      	sub	sp, #32
 8006788:	af00      	add	r7, sp, #0
 800678a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800678c:	f107 030c 	add.w	r3, r7, #12
 8006790:	2200      	movs	r2, #0
 8006792:	601a      	str	r2, [r3, #0]
 8006794:	605a      	str	r2, [r3, #4]
 8006796:	609a      	str	r2, [r3, #8]
 8006798:	60da      	str	r2, [r3, #12]
 800679a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM3)
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	4a12      	ldr	r2, [pc, #72]	; (80067ec <HAL_TIM_MspPostInit+0x68>)
 80067a2:	4293      	cmp	r3, r2
 80067a4:	d11d      	bne.n	80067e2 <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80067a6:	2300      	movs	r3, #0
 80067a8:	60bb      	str	r3, [r7, #8]
 80067aa:	4b11      	ldr	r3, [pc, #68]	; (80067f0 <HAL_TIM_MspPostInit+0x6c>)
 80067ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80067ae:	4a10      	ldr	r2, [pc, #64]	; (80067f0 <HAL_TIM_MspPostInit+0x6c>)
 80067b0:	f043 0302 	orr.w	r3, r3, #2
 80067b4:	6313      	str	r3, [r2, #48]	; 0x30
 80067b6:	4b0e      	ldr	r3, [pc, #56]	; (80067f0 <HAL_TIM_MspPostInit+0x6c>)
 80067b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80067ba:	f003 0302 	and.w	r3, r3, #2
 80067be:	60bb      	str	r3, [r7, #8]
 80067c0:	68bb      	ldr	r3, [r7, #8]
    /**TIM3 GPIO Configuration
    PB4     ------> TIM3_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80067c2:	2310      	movs	r3, #16
 80067c4:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80067c6:	2302      	movs	r3, #2
 80067c8:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80067ca:	2300      	movs	r3, #0
 80067cc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80067ce:	2300      	movs	r3, #0
 80067d0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80067d2:	2302      	movs	r3, #2
 80067d4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80067d6:	f107 030c 	add.w	r3, r7, #12
 80067da:	4619      	mov	r1, r3
 80067dc:	4805      	ldr	r0, [pc, #20]	; (80067f4 <HAL_TIM_MspPostInit+0x70>)
 80067de:	f000 fa8b 	bl	8006cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80067e2:	bf00      	nop
 80067e4:	3720      	adds	r7, #32
 80067e6:	46bd      	mov	sp, r7
 80067e8:	bd80      	pop	{r7, pc}
 80067ea:	bf00      	nop
 80067ec:	40000400 	.word	0x40000400
 80067f0:	40023800 	.word	0x40023800
 80067f4:	40020400 	.word	0x40020400

080067f8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80067f8:	b580      	push	{r7, lr}
 80067fa:	b08a      	sub	sp, #40	; 0x28
 80067fc:	af00      	add	r7, sp, #0
 80067fe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006800:	f107 0314 	add.w	r3, r7, #20
 8006804:	2200      	movs	r2, #0
 8006806:	601a      	str	r2, [r3, #0]
 8006808:	605a      	str	r2, [r3, #4]
 800680a:	609a      	str	r2, [r3, #8]
 800680c:	60da      	str	r2, [r3, #12]
 800680e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	681b      	ldr	r3, [r3, #0]
 8006814:	4a19      	ldr	r2, [pc, #100]	; (800687c <HAL_UART_MspInit+0x84>)
 8006816:	4293      	cmp	r3, r2
 8006818:	d12b      	bne.n	8006872 <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800681a:	2300      	movs	r3, #0
 800681c:	613b      	str	r3, [r7, #16]
 800681e:	4b18      	ldr	r3, [pc, #96]	; (8006880 <HAL_UART_MspInit+0x88>)
 8006820:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006822:	4a17      	ldr	r2, [pc, #92]	; (8006880 <HAL_UART_MspInit+0x88>)
 8006824:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006828:	6413      	str	r3, [r2, #64]	; 0x40
 800682a:	4b15      	ldr	r3, [pc, #84]	; (8006880 <HAL_UART_MspInit+0x88>)
 800682c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800682e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006832:	613b      	str	r3, [r7, #16]
 8006834:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006836:	2300      	movs	r3, #0
 8006838:	60fb      	str	r3, [r7, #12]
 800683a:	4b11      	ldr	r3, [pc, #68]	; (8006880 <HAL_UART_MspInit+0x88>)
 800683c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800683e:	4a10      	ldr	r2, [pc, #64]	; (8006880 <HAL_UART_MspInit+0x88>)
 8006840:	f043 0301 	orr.w	r3, r3, #1
 8006844:	6313      	str	r3, [r2, #48]	; 0x30
 8006846:	4b0e      	ldr	r3, [pc, #56]	; (8006880 <HAL_UART_MspInit+0x88>)
 8006848:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800684a:	f003 0301 	and.w	r3, r3, #1
 800684e:	60fb      	str	r3, [r7, #12]
 8006850:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8006852:	230c      	movs	r3, #12
 8006854:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006856:	2302      	movs	r3, #2
 8006858:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800685a:	2300      	movs	r3, #0
 800685c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800685e:	2303      	movs	r3, #3
 8006860:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8006862:	2307      	movs	r3, #7
 8006864:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006866:	f107 0314 	add.w	r3, r7, #20
 800686a:	4619      	mov	r1, r3
 800686c:	4805      	ldr	r0, [pc, #20]	; (8006884 <HAL_UART_MspInit+0x8c>)
 800686e:	f000 fa43 	bl	8006cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8006872:	bf00      	nop
 8006874:	3728      	adds	r7, #40	; 0x28
 8006876:	46bd      	mov	sp, r7
 8006878:	bd80      	pop	{r7, pc}
 800687a:	bf00      	nop
 800687c:	40004400 	.word	0x40004400
 8006880:	40023800 	.word	0x40023800
 8006884:	40020000 	.word	0x40020000

08006888 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8006888:	b480      	push	{r7}
 800688a:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800688c:	bf00      	nop
 800688e:	46bd      	mov	sp, r7
 8006890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006894:	4770      	bx	lr

08006896 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8006896:	b480      	push	{r7}
 8006898:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800689a:	e7fe      	b.n	800689a <HardFault_Handler+0x4>

0800689c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800689c:	b480      	push	{r7}
 800689e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80068a0:	e7fe      	b.n	80068a0 <MemManage_Handler+0x4>

080068a2 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80068a2:	b480      	push	{r7}
 80068a4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80068a6:	e7fe      	b.n	80068a6 <BusFault_Handler+0x4>

080068a8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80068a8:	b480      	push	{r7}
 80068aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80068ac:	e7fe      	b.n	80068ac <UsageFault_Handler+0x4>

080068ae <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80068ae:	b480      	push	{r7}
 80068b0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80068b2:	bf00      	nop
 80068b4:	46bd      	mov	sp, r7
 80068b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068ba:	4770      	bx	lr

080068bc <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80068bc:	b480      	push	{r7}
 80068be:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80068c0:	bf00      	nop
 80068c2:	46bd      	mov	sp, r7
 80068c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068c8:	4770      	bx	lr

080068ca <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80068ca:	b480      	push	{r7}
 80068cc:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80068ce:	bf00      	nop
 80068d0:	46bd      	mov	sp, r7
 80068d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068d6:	4770      	bx	lr

080068d8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80068d8:	b580      	push	{r7, lr}
 80068da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80068dc:	f000 f8b8 	bl	8006a50 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80068e0:	bf00      	nop
 80068e2:	bd80      	pop	{r7, pc}

080068e4 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80068e4:	b580      	push	{r7, lr}
 80068e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */
	rise = htim3.Instance->CCR1;
 80068e8:	4b0d      	ldr	r3, [pc, #52]	; (8006920 <TIM3_IRQHandler+0x3c>)
 80068ea:	681b      	ldr	r3, [r3, #0]
 80068ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80068ee:	4a0d      	ldr	r2, [pc, #52]	; (8006924 <TIM3_IRQHandler+0x40>)
 80068f0:	6013      	str	r3, [r2, #0]
	if(rise!=0)
 80068f2:	4b0c      	ldr	r3, [pc, #48]	; (8006924 <TIM3_IRQHandler+0x40>)
 80068f4:	681b      	ldr	r3, [r3, #0]
 80068f6:	2b00      	cmp	r3, #0
 80068f8:	d00c      	beq.n	8006914 <TIM3_IRQHandler+0x30>
	{
		freq=1/(float)rise;
 80068fa:	4b0a      	ldr	r3, [pc, #40]	; (8006924 <TIM3_IRQHandler+0x40>)
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	ee07 3a90 	vmov	s15, r3
 8006902:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8006906:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800690a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800690e:	4b06      	ldr	r3, [pc, #24]	; (8006928 <TIM3_IRQHandler+0x44>)
 8006910:	edc3 7a00 	vstr	s15, [r3]
	}
  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8006914:	4802      	ldr	r0, [pc, #8]	; (8006920 <TIM3_IRQHandler+0x3c>)
 8006916:	f002 fbaa 	bl	800906e <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800691a:	bf00      	nop
 800691c:	bd80      	pop	{r7, pc}
 800691e:	bf00      	nop
 8006920:	20000108 	.word	0x20000108
 8006924:	20000098 	.word	0x20000098
 8006928:	2000009c 	.word	0x2000009c

0800692c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800692c:	b480      	push	{r7}
 800692e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8006930:	4b08      	ldr	r3, [pc, #32]	; (8006954 <SystemInit+0x28>)
 8006932:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006936:	4a07      	ldr	r2, [pc, #28]	; (8006954 <SystemInit+0x28>)
 8006938:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800693c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8006940:	4b04      	ldr	r3, [pc, #16]	; (8006954 <SystemInit+0x28>)
 8006942:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006946:	609a      	str	r2, [r3, #8]
#endif
}
 8006948:	bf00      	nop
 800694a:	46bd      	mov	sp, r7
 800694c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006950:	4770      	bx	lr
 8006952:	bf00      	nop
 8006954:	e000ed00 	.word	0xe000ed00

08006958 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8006958:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006990 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800695c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800695e:	e003      	b.n	8006968 <LoopCopyDataInit>

08006960 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8006960:	4b0c      	ldr	r3, [pc, #48]	; (8006994 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8006962:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8006964:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8006966:	3104      	adds	r1, #4

08006968 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8006968:	480b      	ldr	r0, [pc, #44]	; (8006998 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800696a:	4b0c      	ldr	r3, [pc, #48]	; (800699c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800696c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800696e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8006970:	d3f6      	bcc.n	8006960 <CopyDataInit>
  ldr  r2, =_sbss
 8006972:	4a0b      	ldr	r2, [pc, #44]	; (80069a0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8006974:	e002      	b.n	800697c <LoopFillZerobss>

08006976 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8006976:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8006978:	f842 3b04 	str.w	r3, [r2], #4

0800697c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800697c:	4b09      	ldr	r3, [pc, #36]	; (80069a4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800697e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8006980:	d3f9      	bcc.n	8006976 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8006982:	f7ff ffd3 	bl	800692c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8006986:	f003 fbf7 	bl	800a178 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800698a:	f7ff fb3f 	bl	800600c <main>
  bx  lr    
 800698e:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8006990:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8006994:	0800a970 	.word	0x0800a970
  ldr  r0, =_sdata
 8006998:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800699c:	20000078 	.word	0x20000078
  ldr  r2, =_sbss
 80069a0:	20000078 	.word	0x20000078
  ldr  r3, = _ebss
 80069a4:	20000208 	.word	0x20000208

080069a8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80069a8:	e7fe      	b.n	80069a8 <ADC_IRQHandler>
	...

080069ac <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80069ac:	b580      	push	{r7, lr}
 80069ae:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80069b0:	4b0e      	ldr	r3, [pc, #56]	; (80069ec <HAL_Init+0x40>)
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	4a0d      	ldr	r2, [pc, #52]	; (80069ec <HAL_Init+0x40>)
 80069b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80069ba:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80069bc:	4b0b      	ldr	r3, [pc, #44]	; (80069ec <HAL_Init+0x40>)
 80069be:	681b      	ldr	r3, [r3, #0]
 80069c0:	4a0a      	ldr	r2, [pc, #40]	; (80069ec <HAL_Init+0x40>)
 80069c2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80069c6:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80069c8:	4b08      	ldr	r3, [pc, #32]	; (80069ec <HAL_Init+0x40>)
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	4a07      	ldr	r2, [pc, #28]	; (80069ec <HAL_Init+0x40>)
 80069ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80069d2:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80069d4:	2003      	movs	r0, #3
 80069d6:	f000 f94d 	bl	8006c74 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80069da:	2000      	movs	r0, #0
 80069dc:	f000 f808 	bl	80069f0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80069e0:	f7ff fdf0 	bl	80065c4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80069e4:	2300      	movs	r3, #0
}
 80069e6:	4618      	mov	r0, r3
 80069e8:	bd80      	pop	{r7, pc}
 80069ea:	bf00      	nop
 80069ec:	40023c00 	.word	0x40023c00

080069f0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80069f0:	b580      	push	{r7, lr}
 80069f2:	b082      	sub	sp, #8
 80069f4:	af00      	add	r7, sp, #0
 80069f6:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80069f8:	4b12      	ldr	r3, [pc, #72]	; (8006a44 <HAL_InitTick+0x54>)
 80069fa:	681a      	ldr	r2, [r3, #0]
 80069fc:	4b12      	ldr	r3, [pc, #72]	; (8006a48 <HAL_InitTick+0x58>)
 80069fe:	781b      	ldrb	r3, [r3, #0]
 8006a00:	4619      	mov	r1, r3
 8006a02:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006a06:	fbb3 f3f1 	udiv	r3, r3, r1
 8006a0a:	fbb2 f3f3 	udiv	r3, r2, r3
 8006a0e:	4618      	mov	r0, r3
 8006a10:	f000 f965 	bl	8006cde <HAL_SYSTICK_Config>
 8006a14:	4603      	mov	r3, r0
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	d001      	beq.n	8006a1e <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8006a1a:	2301      	movs	r3, #1
 8006a1c:	e00e      	b.n	8006a3c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	2b0f      	cmp	r3, #15
 8006a22:	d80a      	bhi.n	8006a3a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8006a24:	2200      	movs	r2, #0
 8006a26:	6879      	ldr	r1, [r7, #4]
 8006a28:	f04f 30ff 	mov.w	r0, #4294967295
 8006a2c:	f000 f92d 	bl	8006c8a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8006a30:	4a06      	ldr	r2, [pc, #24]	; (8006a4c <HAL_InitTick+0x5c>)
 8006a32:	687b      	ldr	r3, [r7, #4]
 8006a34:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8006a36:	2300      	movs	r3, #0
 8006a38:	e000      	b.n	8006a3c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8006a3a:	2301      	movs	r3, #1
}
 8006a3c:	4618      	mov	r0, r3
 8006a3e:	3708      	adds	r7, #8
 8006a40:	46bd      	mov	sp, r7
 8006a42:	bd80      	pop	{r7, pc}
 8006a44:	20000004 	.word	0x20000004
 8006a48:	2000000c 	.word	0x2000000c
 8006a4c:	20000008 	.word	0x20000008

08006a50 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8006a50:	b480      	push	{r7}
 8006a52:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8006a54:	4b06      	ldr	r3, [pc, #24]	; (8006a70 <HAL_IncTick+0x20>)
 8006a56:	781b      	ldrb	r3, [r3, #0]
 8006a58:	461a      	mov	r2, r3
 8006a5a:	4b06      	ldr	r3, [pc, #24]	; (8006a74 <HAL_IncTick+0x24>)
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	4413      	add	r3, r2
 8006a60:	4a04      	ldr	r2, [pc, #16]	; (8006a74 <HAL_IncTick+0x24>)
 8006a62:	6013      	str	r3, [r2, #0]
}
 8006a64:	bf00      	nop
 8006a66:	46bd      	mov	sp, r7
 8006a68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a6c:	4770      	bx	lr
 8006a6e:	bf00      	nop
 8006a70:	2000000c 	.word	0x2000000c
 8006a74:	20000204 	.word	0x20000204

08006a78 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8006a78:	b480      	push	{r7}
 8006a7a:	af00      	add	r7, sp, #0
  return uwTick;
 8006a7c:	4b03      	ldr	r3, [pc, #12]	; (8006a8c <HAL_GetTick+0x14>)
 8006a7e:	681b      	ldr	r3, [r3, #0]
}
 8006a80:	4618      	mov	r0, r3
 8006a82:	46bd      	mov	sp, r7
 8006a84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a88:	4770      	bx	lr
 8006a8a:	bf00      	nop
 8006a8c:	20000204 	.word	0x20000204

08006a90 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8006a90:	b580      	push	{r7, lr}
 8006a92:	b084      	sub	sp, #16
 8006a94:	af00      	add	r7, sp, #0
 8006a96:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8006a98:	f7ff ffee 	bl	8006a78 <HAL_GetTick>
 8006a9c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006aa8:	d005      	beq.n	8006ab6 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8006aaa:	4b09      	ldr	r3, [pc, #36]	; (8006ad0 <HAL_Delay+0x40>)
 8006aac:	781b      	ldrb	r3, [r3, #0]
 8006aae:	461a      	mov	r2, r3
 8006ab0:	68fb      	ldr	r3, [r7, #12]
 8006ab2:	4413      	add	r3, r2
 8006ab4:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8006ab6:	bf00      	nop
 8006ab8:	f7ff ffde 	bl	8006a78 <HAL_GetTick>
 8006abc:	4602      	mov	r2, r0
 8006abe:	68bb      	ldr	r3, [r7, #8]
 8006ac0:	1ad3      	subs	r3, r2, r3
 8006ac2:	68fa      	ldr	r2, [r7, #12]
 8006ac4:	429a      	cmp	r2, r3
 8006ac6:	d8f7      	bhi.n	8006ab8 <HAL_Delay+0x28>
  {
  }
}
 8006ac8:	bf00      	nop
 8006aca:	3710      	adds	r7, #16
 8006acc:	46bd      	mov	sp, r7
 8006ace:	bd80      	pop	{r7, pc}
 8006ad0:	2000000c 	.word	0x2000000c

08006ad4 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8006ad4:	b480      	push	{r7}
 8006ad6:	b085      	sub	sp, #20
 8006ad8:	af00      	add	r7, sp, #0
 8006ada:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	f003 0307 	and.w	r3, r3, #7
 8006ae2:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006ae4:	4b0c      	ldr	r3, [pc, #48]	; (8006b18 <__NVIC_SetPriorityGrouping+0x44>)
 8006ae6:	68db      	ldr	r3, [r3, #12]
 8006ae8:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006aea:	68ba      	ldr	r2, [r7, #8]
 8006aec:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8006af0:	4013      	ands	r3, r2
 8006af2:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006af4:	68fb      	ldr	r3, [r7, #12]
 8006af6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006af8:	68bb      	ldr	r3, [r7, #8]
 8006afa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006afc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8006b00:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006b04:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8006b06:	4a04      	ldr	r2, [pc, #16]	; (8006b18 <__NVIC_SetPriorityGrouping+0x44>)
 8006b08:	68bb      	ldr	r3, [r7, #8]
 8006b0a:	60d3      	str	r3, [r2, #12]
}
 8006b0c:	bf00      	nop
 8006b0e:	3714      	adds	r7, #20
 8006b10:	46bd      	mov	sp, r7
 8006b12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b16:	4770      	bx	lr
 8006b18:	e000ed00 	.word	0xe000ed00

08006b1c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8006b1c:	b480      	push	{r7}
 8006b1e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8006b20:	4b04      	ldr	r3, [pc, #16]	; (8006b34 <__NVIC_GetPriorityGrouping+0x18>)
 8006b22:	68db      	ldr	r3, [r3, #12]
 8006b24:	0a1b      	lsrs	r3, r3, #8
 8006b26:	f003 0307 	and.w	r3, r3, #7
}
 8006b2a:	4618      	mov	r0, r3
 8006b2c:	46bd      	mov	sp, r7
 8006b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b32:	4770      	bx	lr
 8006b34:	e000ed00 	.word	0xe000ed00

08006b38 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8006b38:	b480      	push	{r7}
 8006b3a:	b083      	sub	sp, #12
 8006b3c:	af00      	add	r7, sp, #0
 8006b3e:	4603      	mov	r3, r0
 8006b40:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8006b42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006b46:	2b00      	cmp	r3, #0
 8006b48:	db0b      	blt.n	8006b62 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006b4a:	79fb      	ldrb	r3, [r7, #7]
 8006b4c:	f003 021f 	and.w	r2, r3, #31
 8006b50:	4907      	ldr	r1, [pc, #28]	; (8006b70 <__NVIC_EnableIRQ+0x38>)
 8006b52:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006b56:	095b      	lsrs	r3, r3, #5
 8006b58:	2001      	movs	r0, #1
 8006b5a:	fa00 f202 	lsl.w	r2, r0, r2
 8006b5e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8006b62:	bf00      	nop
 8006b64:	370c      	adds	r7, #12
 8006b66:	46bd      	mov	sp, r7
 8006b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b6c:	4770      	bx	lr
 8006b6e:	bf00      	nop
 8006b70:	e000e100 	.word	0xe000e100

08006b74 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8006b74:	b480      	push	{r7}
 8006b76:	b083      	sub	sp, #12
 8006b78:	af00      	add	r7, sp, #0
 8006b7a:	4603      	mov	r3, r0
 8006b7c:	6039      	str	r1, [r7, #0]
 8006b7e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8006b80:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	db0a      	blt.n	8006b9e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006b88:	683b      	ldr	r3, [r7, #0]
 8006b8a:	b2da      	uxtb	r2, r3
 8006b8c:	490c      	ldr	r1, [pc, #48]	; (8006bc0 <__NVIC_SetPriority+0x4c>)
 8006b8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006b92:	0112      	lsls	r2, r2, #4
 8006b94:	b2d2      	uxtb	r2, r2
 8006b96:	440b      	add	r3, r1
 8006b98:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8006b9c:	e00a      	b.n	8006bb4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006b9e:	683b      	ldr	r3, [r7, #0]
 8006ba0:	b2da      	uxtb	r2, r3
 8006ba2:	4908      	ldr	r1, [pc, #32]	; (8006bc4 <__NVIC_SetPriority+0x50>)
 8006ba4:	79fb      	ldrb	r3, [r7, #7]
 8006ba6:	f003 030f 	and.w	r3, r3, #15
 8006baa:	3b04      	subs	r3, #4
 8006bac:	0112      	lsls	r2, r2, #4
 8006bae:	b2d2      	uxtb	r2, r2
 8006bb0:	440b      	add	r3, r1
 8006bb2:	761a      	strb	r2, [r3, #24]
}
 8006bb4:	bf00      	nop
 8006bb6:	370c      	adds	r7, #12
 8006bb8:	46bd      	mov	sp, r7
 8006bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bbe:	4770      	bx	lr
 8006bc0:	e000e100 	.word	0xe000e100
 8006bc4:	e000ed00 	.word	0xe000ed00

08006bc8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8006bc8:	b480      	push	{r7}
 8006bca:	b089      	sub	sp, #36	; 0x24
 8006bcc:	af00      	add	r7, sp, #0
 8006bce:	60f8      	str	r0, [r7, #12]
 8006bd0:	60b9      	str	r1, [r7, #8]
 8006bd2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8006bd4:	68fb      	ldr	r3, [r7, #12]
 8006bd6:	f003 0307 	and.w	r3, r3, #7
 8006bda:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006bdc:	69fb      	ldr	r3, [r7, #28]
 8006bde:	f1c3 0307 	rsb	r3, r3, #7
 8006be2:	2b04      	cmp	r3, #4
 8006be4:	bf28      	it	cs
 8006be6:	2304      	movcs	r3, #4
 8006be8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006bea:	69fb      	ldr	r3, [r7, #28]
 8006bec:	3304      	adds	r3, #4
 8006bee:	2b06      	cmp	r3, #6
 8006bf0:	d902      	bls.n	8006bf8 <NVIC_EncodePriority+0x30>
 8006bf2:	69fb      	ldr	r3, [r7, #28]
 8006bf4:	3b03      	subs	r3, #3
 8006bf6:	e000      	b.n	8006bfa <NVIC_EncodePriority+0x32>
 8006bf8:	2300      	movs	r3, #0
 8006bfa:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006bfc:	f04f 32ff 	mov.w	r2, #4294967295
 8006c00:	69bb      	ldr	r3, [r7, #24]
 8006c02:	fa02 f303 	lsl.w	r3, r2, r3
 8006c06:	43da      	mvns	r2, r3
 8006c08:	68bb      	ldr	r3, [r7, #8]
 8006c0a:	401a      	ands	r2, r3
 8006c0c:	697b      	ldr	r3, [r7, #20]
 8006c0e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006c10:	f04f 31ff 	mov.w	r1, #4294967295
 8006c14:	697b      	ldr	r3, [r7, #20]
 8006c16:	fa01 f303 	lsl.w	r3, r1, r3
 8006c1a:	43d9      	mvns	r1, r3
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006c20:	4313      	orrs	r3, r2
         );
}
 8006c22:	4618      	mov	r0, r3
 8006c24:	3724      	adds	r7, #36	; 0x24
 8006c26:	46bd      	mov	sp, r7
 8006c28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c2c:	4770      	bx	lr
	...

08006c30 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8006c30:	b580      	push	{r7, lr}
 8006c32:	b082      	sub	sp, #8
 8006c34:	af00      	add	r7, sp, #0
 8006c36:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	3b01      	subs	r3, #1
 8006c3c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8006c40:	d301      	bcc.n	8006c46 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8006c42:	2301      	movs	r3, #1
 8006c44:	e00f      	b.n	8006c66 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8006c46:	4a0a      	ldr	r2, [pc, #40]	; (8006c70 <SysTick_Config+0x40>)
 8006c48:	687b      	ldr	r3, [r7, #4]
 8006c4a:	3b01      	subs	r3, #1
 8006c4c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8006c4e:	210f      	movs	r1, #15
 8006c50:	f04f 30ff 	mov.w	r0, #4294967295
 8006c54:	f7ff ff8e 	bl	8006b74 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8006c58:	4b05      	ldr	r3, [pc, #20]	; (8006c70 <SysTick_Config+0x40>)
 8006c5a:	2200      	movs	r2, #0
 8006c5c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8006c5e:	4b04      	ldr	r3, [pc, #16]	; (8006c70 <SysTick_Config+0x40>)
 8006c60:	2207      	movs	r2, #7
 8006c62:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8006c64:	2300      	movs	r3, #0
}
 8006c66:	4618      	mov	r0, r3
 8006c68:	3708      	adds	r7, #8
 8006c6a:	46bd      	mov	sp, r7
 8006c6c:	bd80      	pop	{r7, pc}
 8006c6e:	bf00      	nop
 8006c70:	e000e010 	.word	0xe000e010

08006c74 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8006c74:	b580      	push	{r7, lr}
 8006c76:	b082      	sub	sp, #8
 8006c78:	af00      	add	r7, sp, #0
 8006c7a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8006c7c:	6878      	ldr	r0, [r7, #4]
 8006c7e:	f7ff ff29 	bl	8006ad4 <__NVIC_SetPriorityGrouping>
}
 8006c82:	bf00      	nop
 8006c84:	3708      	adds	r7, #8
 8006c86:	46bd      	mov	sp, r7
 8006c88:	bd80      	pop	{r7, pc}

08006c8a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8006c8a:	b580      	push	{r7, lr}
 8006c8c:	b086      	sub	sp, #24
 8006c8e:	af00      	add	r7, sp, #0
 8006c90:	4603      	mov	r3, r0
 8006c92:	60b9      	str	r1, [r7, #8]
 8006c94:	607a      	str	r2, [r7, #4]
 8006c96:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8006c98:	2300      	movs	r3, #0
 8006c9a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8006c9c:	f7ff ff3e 	bl	8006b1c <__NVIC_GetPriorityGrouping>
 8006ca0:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8006ca2:	687a      	ldr	r2, [r7, #4]
 8006ca4:	68b9      	ldr	r1, [r7, #8]
 8006ca6:	6978      	ldr	r0, [r7, #20]
 8006ca8:	f7ff ff8e 	bl	8006bc8 <NVIC_EncodePriority>
 8006cac:	4602      	mov	r2, r0
 8006cae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8006cb2:	4611      	mov	r1, r2
 8006cb4:	4618      	mov	r0, r3
 8006cb6:	f7ff ff5d 	bl	8006b74 <__NVIC_SetPriority>
}
 8006cba:	bf00      	nop
 8006cbc:	3718      	adds	r7, #24
 8006cbe:	46bd      	mov	sp, r7
 8006cc0:	bd80      	pop	{r7, pc}

08006cc2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8006cc2:	b580      	push	{r7, lr}
 8006cc4:	b082      	sub	sp, #8
 8006cc6:	af00      	add	r7, sp, #0
 8006cc8:	4603      	mov	r3, r0
 8006cca:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8006ccc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006cd0:	4618      	mov	r0, r3
 8006cd2:	f7ff ff31 	bl	8006b38 <__NVIC_EnableIRQ>
}
 8006cd6:	bf00      	nop
 8006cd8:	3708      	adds	r7, #8
 8006cda:	46bd      	mov	sp, r7
 8006cdc:	bd80      	pop	{r7, pc}

08006cde <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8006cde:	b580      	push	{r7, lr}
 8006ce0:	b082      	sub	sp, #8
 8006ce2:	af00      	add	r7, sp, #0
 8006ce4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8006ce6:	6878      	ldr	r0, [r7, #4]
 8006ce8:	f7ff ffa2 	bl	8006c30 <SysTick_Config>
 8006cec:	4603      	mov	r3, r0
}
 8006cee:	4618      	mov	r0, r3
 8006cf0:	3708      	adds	r7, #8
 8006cf2:	46bd      	mov	sp, r7
 8006cf4:	bd80      	pop	{r7, pc}
	...

08006cf8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006cf8:	b480      	push	{r7}
 8006cfa:	b089      	sub	sp, #36	; 0x24
 8006cfc:	af00      	add	r7, sp, #0
 8006cfe:	6078      	str	r0, [r7, #4]
 8006d00:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8006d02:	2300      	movs	r3, #0
 8006d04:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8006d06:	2300      	movs	r3, #0
 8006d08:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8006d0a:	2300      	movs	r3, #0
 8006d0c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006d0e:	2300      	movs	r3, #0
 8006d10:	61fb      	str	r3, [r7, #28]
 8006d12:	e159      	b.n	8006fc8 <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8006d14:	2201      	movs	r2, #1
 8006d16:	69fb      	ldr	r3, [r7, #28]
 8006d18:	fa02 f303 	lsl.w	r3, r2, r3
 8006d1c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006d1e:	683b      	ldr	r3, [r7, #0]
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	697a      	ldr	r2, [r7, #20]
 8006d24:	4013      	ands	r3, r2
 8006d26:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8006d28:	693a      	ldr	r2, [r7, #16]
 8006d2a:	697b      	ldr	r3, [r7, #20]
 8006d2c:	429a      	cmp	r2, r3
 8006d2e:	f040 8148 	bne.w	8006fc2 <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006d32:	683b      	ldr	r3, [r7, #0]
 8006d34:	685b      	ldr	r3, [r3, #4]
 8006d36:	2b01      	cmp	r3, #1
 8006d38:	d00b      	beq.n	8006d52 <HAL_GPIO_Init+0x5a>
 8006d3a:	683b      	ldr	r3, [r7, #0]
 8006d3c:	685b      	ldr	r3, [r3, #4]
 8006d3e:	2b02      	cmp	r3, #2
 8006d40:	d007      	beq.n	8006d52 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006d42:	683b      	ldr	r3, [r7, #0]
 8006d44:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006d46:	2b11      	cmp	r3, #17
 8006d48:	d003      	beq.n	8006d52 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006d4a:	683b      	ldr	r3, [r7, #0]
 8006d4c:	685b      	ldr	r3, [r3, #4]
 8006d4e:	2b12      	cmp	r3, #18
 8006d50:	d130      	bne.n	8006db4 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	689b      	ldr	r3, [r3, #8]
 8006d56:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006d58:	69fb      	ldr	r3, [r7, #28]
 8006d5a:	005b      	lsls	r3, r3, #1
 8006d5c:	2203      	movs	r2, #3
 8006d5e:	fa02 f303 	lsl.w	r3, r2, r3
 8006d62:	43db      	mvns	r3, r3
 8006d64:	69ba      	ldr	r2, [r7, #24]
 8006d66:	4013      	ands	r3, r2
 8006d68:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006d6a:	683b      	ldr	r3, [r7, #0]
 8006d6c:	68da      	ldr	r2, [r3, #12]
 8006d6e:	69fb      	ldr	r3, [r7, #28]
 8006d70:	005b      	lsls	r3, r3, #1
 8006d72:	fa02 f303 	lsl.w	r3, r2, r3
 8006d76:	69ba      	ldr	r2, [r7, #24]
 8006d78:	4313      	orrs	r3, r2
 8006d7a:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	69ba      	ldr	r2, [r7, #24]
 8006d80:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8006d82:	687b      	ldr	r3, [r7, #4]
 8006d84:	685b      	ldr	r3, [r3, #4]
 8006d86:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006d88:	2201      	movs	r2, #1
 8006d8a:	69fb      	ldr	r3, [r7, #28]
 8006d8c:	fa02 f303 	lsl.w	r3, r2, r3
 8006d90:	43db      	mvns	r3, r3
 8006d92:	69ba      	ldr	r2, [r7, #24]
 8006d94:	4013      	ands	r3, r2
 8006d96:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8006d98:	683b      	ldr	r3, [r7, #0]
 8006d9a:	685b      	ldr	r3, [r3, #4]
 8006d9c:	091b      	lsrs	r3, r3, #4
 8006d9e:	f003 0201 	and.w	r2, r3, #1
 8006da2:	69fb      	ldr	r3, [r7, #28]
 8006da4:	fa02 f303 	lsl.w	r3, r2, r3
 8006da8:	69ba      	ldr	r2, [r7, #24]
 8006daa:	4313      	orrs	r3, r2
 8006dac:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	69ba      	ldr	r2, [r7, #24]
 8006db2:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8006db4:	687b      	ldr	r3, [r7, #4]
 8006db6:	68db      	ldr	r3, [r3, #12]
 8006db8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006dba:	69fb      	ldr	r3, [r7, #28]
 8006dbc:	005b      	lsls	r3, r3, #1
 8006dbe:	2203      	movs	r2, #3
 8006dc0:	fa02 f303 	lsl.w	r3, r2, r3
 8006dc4:	43db      	mvns	r3, r3
 8006dc6:	69ba      	ldr	r2, [r7, #24]
 8006dc8:	4013      	ands	r3, r2
 8006dca:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006dcc:	683b      	ldr	r3, [r7, #0]
 8006dce:	689a      	ldr	r2, [r3, #8]
 8006dd0:	69fb      	ldr	r3, [r7, #28]
 8006dd2:	005b      	lsls	r3, r3, #1
 8006dd4:	fa02 f303 	lsl.w	r3, r2, r3
 8006dd8:	69ba      	ldr	r2, [r7, #24]
 8006dda:	4313      	orrs	r3, r2
 8006ddc:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	69ba      	ldr	r2, [r7, #24]
 8006de2:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006de4:	683b      	ldr	r3, [r7, #0]
 8006de6:	685b      	ldr	r3, [r3, #4]
 8006de8:	2b02      	cmp	r3, #2
 8006dea:	d003      	beq.n	8006df4 <HAL_GPIO_Init+0xfc>
 8006dec:	683b      	ldr	r3, [r7, #0]
 8006dee:	685b      	ldr	r3, [r3, #4]
 8006df0:	2b12      	cmp	r3, #18
 8006df2:	d123      	bne.n	8006e3c <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8006df4:	69fb      	ldr	r3, [r7, #28]
 8006df6:	08da      	lsrs	r2, r3, #3
 8006df8:	687b      	ldr	r3, [r7, #4]
 8006dfa:	3208      	adds	r2, #8
 8006dfc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006e00:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006e02:	69fb      	ldr	r3, [r7, #28]
 8006e04:	f003 0307 	and.w	r3, r3, #7
 8006e08:	009b      	lsls	r3, r3, #2
 8006e0a:	220f      	movs	r2, #15
 8006e0c:	fa02 f303 	lsl.w	r3, r2, r3
 8006e10:	43db      	mvns	r3, r3
 8006e12:	69ba      	ldr	r2, [r7, #24]
 8006e14:	4013      	ands	r3, r2
 8006e16:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8006e18:	683b      	ldr	r3, [r7, #0]
 8006e1a:	691a      	ldr	r2, [r3, #16]
 8006e1c:	69fb      	ldr	r3, [r7, #28]
 8006e1e:	f003 0307 	and.w	r3, r3, #7
 8006e22:	009b      	lsls	r3, r3, #2
 8006e24:	fa02 f303 	lsl.w	r3, r2, r3
 8006e28:	69ba      	ldr	r2, [r7, #24]
 8006e2a:	4313      	orrs	r3, r2
 8006e2c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8006e2e:	69fb      	ldr	r3, [r7, #28]
 8006e30:	08da      	lsrs	r2, r3, #3
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	3208      	adds	r2, #8
 8006e36:	69b9      	ldr	r1, [r7, #24]
 8006e38:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8006e3c:	687b      	ldr	r3, [r7, #4]
 8006e3e:	681b      	ldr	r3, [r3, #0]
 8006e40:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006e42:	69fb      	ldr	r3, [r7, #28]
 8006e44:	005b      	lsls	r3, r3, #1
 8006e46:	2203      	movs	r2, #3
 8006e48:	fa02 f303 	lsl.w	r3, r2, r3
 8006e4c:	43db      	mvns	r3, r3
 8006e4e:	69ba      	ldr	r2, [r7, #24]
 8006e50:	4013      	ands	r3, r2
 8006e52:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006e54:	683b      	ldr	r3, [r7, #0]
 8006e56:	685b      	ldr	r3, [r3, #4]
 8006e58:	f003 0203 	and.w	r2, r3, #3
 8006e5c:	69fb      	ldr	r3, [r7, #28]
 8006e5e:	005b      	lsls	r3, r3, #1
 8006e60:	fa02 f303 	lsl.w	r3, r2, r3
 8006e64:	69ba      	ldr	r2, [r7, #24]
 8006e66:	4313      	orrs	r3, r2
 8006e68:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	69ba      	ldr	r2, [r7, #24]
 8006e6e:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8006e70:	683b      	ldr	r3, [r7, #0]
 8006e72:	685b      	ldr	r3, [r3, #4]
 8006e74:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006e78:	2b00      	cmp	r3, #0
 8006e7a:	f000 80a2 	beq.w	8006fc2 <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006e7e:	2300      	movs	r3, #0
 8006e80:	60fb      	str	r3, [r7, #12]
 8006e82:	4b56      	ldr	r3, [pc, #344]	; (8006fdc <HAL_GPIO_Init+0x2e4>)
 8006e84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e86:	4a55      	ldr	r2, [pc, #340]	; (8006fdc <HAL_GPIO_Init+0x2e4>)
 8006e88:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006e8c:	6453      	str	r3, [r2, #68]	; 0x44
 8006e8e:	4b53      	ldr	r3, [pc, #332]	; (8006fdc <HAL_GPIO_Init+0x2e4>)
 8006e90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e92:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006e96:	60fb      	str	r3, [r7, #12]
 8006e98:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8006e9a:	4a51      	ldr	r2, [pc, #324]	; (8006fe0 <HAL_GPIO_Init+0x2e8>)
 8006e9c:	69fb      	ldr	r3, [r7, #28]
 8006e9e:	089b      	lsrs	r3, r3, #2
 8006ea0:	3302      	adds	r3, #2
 8006ea2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006ea6:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006ea8:	69fb      	ldr	r3, [r7, #28]
 8006eaa:	f003 0303 	and.w	r3, r3, #3
 8006eae:	009b      	lsls	r3, r3, #2
 8006eb0:	220f      	movs	r2, #15
 8006eb2:	fa02 f303 	lsl.w	r3, r2, r3
 8006eb6:	43db      	mvns	r3, r3
 8006eb8:	69ba      	ldr	r2, [r7, #24]
 8006eba:	4013      	ands	r3, r2
 8006ebc:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	4a48      	ldr	r2, [pc, #288]	; (8006fe4 <HAL_GPIO_Init+0x2ec>)
 8006ec2:	4293      	cmp	r3, r2
 8006ec4:	d019      	beq.n	8006efa <HAL_GPIO_Init+0x202>
 8006ec6:	687b      	ldr	r3, [r7, #4]
 8006ec8:	4a47      	ldr	r2, [pc, #284]	; (8006fe8 <HAL_GPIO_Init+0x2f0>)
 8006eca:	4293      	cmp	r3, r2
 8006ecc:	d013      	beq.n	8006ef6 <HAL_GPIO_Init+0x1fe>
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	4a46      	ldr	r2, [pc, #280]	; (8006fec <HAL_GPIO_Init+0x2f4>)
 8006ed2:	4293      	cmp	r3, r2
 8006ed4:	d00d      	beq.n	8006ef2 <HAL_GPIO_Init+0x1fa>
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	4a45      	ldr	r2, [pc, #276]	; (8006ff0 <HAL_GPIO_Init+0x2f8>)
 8006eda:	4293      	cmp	r3, r2
 8006edc:	d007      	beq.n	8006eee <HAL_GPIO_Init+0x1f6>
 8006ede:	687b      	ldr	r3, [r7, #4]
 8006ee0:	4a44      	ldr	r2, [pc, #272]	; (8006ff4 <HAL_GPIO_Init+0x2fc>)
 8006ee2:	4293      	cmp	r3, r2
 8006ee4:	d101      	bne.n	8006eea <HAL_GPIO_Init+0x1f2>
 8006ee6:	2304      	movs	r3, #4
 8006ee8:	e008      	b.n	8006efc <HAL_GPIO_Init+0x204>
 8006eea:	2307      	movs	r3, #7
 8006eec:	e006      	b.n	8006efc <HAL_GPIO_Init+0x204>
 8006eee:	2303      	movs	r3, #3
 8006ef0:	e004      	b.n	8006efc <HAL_GPIO_Init+0x204>
 8006ef2:	2302      	movs	r3, #2
 8006ef4:	e002      	b.n	8006efc <HAL_GPIO_Init+0x204>
 8006ef6:	2301      	movs	r3, #1
 8006ef8:	e000      	b.n	8006efc <HAL_GPIO_Init+0x204>
 8006efa:	2300      	movs	r3, #0
 8006efc:	69fa      	ldr	r2, [r7, #28]
 8006efe:	f002 0203 	and.w	r2, r2, #3
 8006f02:	0092      	lsls	r2, r2, #2
 8006f04:	4093      	lsls	r3, r2
 8006f06:	69ba      	ldr	r2, [r7, #24]
 8006f08:	4313      	orrs	r3, r2
 8006f0a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006f0c:	4934      	ldr	r1, [pc, #208]	; (8006fe0 <HAL_GPIO_Init+0x2e8>)
 8006f0e:	69fb      	ldr	r3, [r7, #28]
 8006f10:	089b      	lsrs	r3, r3, #2
 8006f12:	3302      	adds	r3, #2
 8006f14:	69ba      	ldr	r2, [r7, #24]
 8006f16:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006f1a:	4b37      	ldr	r3, [pc, #220]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006f1c:	681b      	ldr	r3, [r3, #0]
 8006f1e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8006f20:	693b      	ldr	r3, [r7, #16]
 8006f22:	43db      	mvns	r3, r3
 8006f24:	69ba      	ldr	r2, [r7, #24]
 8006f26:	4013      	ands	r3, r2
 8006f28:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8006f2a:	683b      	ldr	r3, [r7, #0]
 8006f2c:	685b      	ldr	r3, [r3, #4]
 8006f2e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006f32:	2b00      	cmp	r3, #0
 8006f34:	d003      	beq.n	8006f3e <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 8006f36:	69ba      	ldr	r2, [r7, #24]
 8006f38:	693b      	ldr	r3, [r7, #16]
 8006f3a:	4313      	orrs	r3, r2
 8006f3c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8006f3e:	4a2e      	ldr	r2, [pc, #184]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006f40:	69bb      	ldr	r3, [r7, #24]
 8006f42:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8006f44:	4b2c      	ldr	r3, [pc, #176]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006f46:	685b      	ldr	r3, [r3, #4]
 8006f48:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8006f4a:	693b      	ldr	r3, [r7, #16]
 8006f4c:	43db      	mvns	r3, r3
 8006f4e:	69ba      	ldr	r2, [r7, #24]
 8006f50:	4013      	ands	r3, r2
 8006f52:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8006f54:	683b      	ldr	r3, [r7, #0]
 8006f56:	685b      	ldr	r3, [r3, #4]
 8006f58:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006f5c:	2b00      	cmp	r3, #0
 8006f5e:	d003      	beq.n	8006f68 <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 8006f60:	69ba      	ldr	r2, [r7, #24]
 8006f62:	693b      	ldr	r3, [r7, #16]
 8006f64:	4313      	orrs	r3, r2
 8006f66:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8006f68:	4a23      	ldr	r2, [pc, #140]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006f6a:	69bb      	ldr	r3, [r7, #24]
 8006f6c:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006f6e:	4b22      	ldr	r3, [pc, #136]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006f70:	689b      	ldr	r3, [r3, #8]
 8006f72:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8006f74:	693b      	ldr	r3, [r7, #16]
 8006f76:	43db      	mvns	r3, r3
 8006f78:	69ba      	ldr	r2, [r7, #24]
 8006f7a:	4013      	ands	r3, r2
 8006f7c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8006f7e:	683b      	ldr	r3, [r7, #0]
 8006f80:	685b      	ldr	r3, [r3, #4]
 8006f82:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006f86:	2b00      	cmp	r3, #0
 8006f88:	d003      	beq.n	8006f92 <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 8006f8a:	69ba      	ldr	r2, [r7, #24]
 8006f8c:	693b      	ldr	r3, [r7, #16]
 8006f8e:	4313      	orrs	r3, r2
 8006f90:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8006f92:	4a19      	ldr	r2, [pc, #100]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006f94:	69bb      	ldr	r3, [r7, #24]
 8006f96:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8006f98:	4b17      	ldr	r3, [pc, #92]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006f9a:	68db      	ldr	r3, [r3, #12]
 8006f9c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8006f9e:	693b      	ldr	r3, [r7, #16]
 8006fa0:	43db      	mvns	r3, r3
 8006fa2:	69ba      	ldr	r2, [r7, #24]
 8006fa4:	4013      	ands	r3, r2
 8006fa6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8006fa8:	683b      	ldr	r3, [r7, #0]
 8006faa:	685b      	ldr	r3, [r3, #4]
 8006fac:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8006fb0:	2b00      	cmp	r3, #0
 8006fb2:	d003      	beq.n	8006fbc <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 8006fb4:	69ba      	ldr	r2, [r7, #24]
 8006fb6:	693b      	ldr	r3, [r7, #16]
 8006fb8:	4313      	orrs	r3, r2
 8006fba:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8006fbc:	4a0e      	ldr	r2, [pc, #56]	; (8006ff8 <HAL_GPIO_Init+0x300>)
 8006fbe:	69bb      	ldr	r3, [r7, #24]
 8006fc0:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006fc2:	69fb      	ldr	r3, [r7, #28]
 8006fc4:	3301      	adds	r3, #1
 8006fc6:	61fb      	str	r3, [r7, #28]
 8006fc8:	69fb      	ldr	r3, [r7, #28]
 8006fca:	2b0f      	cmp	r3, #15
 8006fcc:	f67f aea2 	bls.w	8006d14 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8006fd0:	bf00      	nop
 8006fd2:	3724      	adds	r7, #36	; 0x24
 8006fd4:	46bd      	mov	sp, r7
 8006fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fda:	4770      	bx	lr
 8006fdc:	40023800 	.word	0x40023800
 8006fe0:	40013800 	.word	0x40013800
 8006fe4:	40020000 	.word	0x40020000
 8006fe8:	40020400 	.word	0x40020400
 8006fec:	40020800 	.word	0x40020800
 8006ff0:	40020c00 	.word	0x40020c00
 8006ff4:	40021000 	.word	0x40021000
 8006ff8:	40013c00 	.word	0x40013c00

08006ffc <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8006ffc:	b480      	push	{r7}
 8006ffe:	b085      	sub	sp, #20
 8007000:	af00      	add	r7, sp, #0
 8007002:	6078      	str	r0, [r7, #4]
 8007004:	460b      	mov	r3, r1
 8007006:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	691a      	ldr	r2, [r3, #16]
 800700c:	887b      	ldrh	r3, [r7, #2]
 800700e:	4013      	ands	r3, r2
 8007010:	2b00      	cmp	r3, #0
 8007012:	d002      	beq.n	800701a <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8007014:	2301      	movs	r3, #1
 8007016:	73fb      	strb	r3, [r7, #15]
 8007018:	e001      	b.n	800701e <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 800701a:	2300      	movs	r3, #0
 800701c:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 800701e:	7bfb      	ldrb	r3, [r7, #15]
}
 8007020:	4618      	mov	r0, r3
 8007022:	3714      	adds	r7, #20
 8007024:	46bd      	mov	sp, r7
 8007026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800702a:	4770      	bx	lr

0800702c <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 800702c:	b480      	push	{r7}
 800702e:	b083      	sub	sp, #12
 8007030:	af00      	add	r7, sp, #0
 8007032:	6078      	str	r0, [r7, #4]
 8007034:	460b      	mov	r3, r1
 8007036:	807b      	strh	r3, [r7, #2]
 8007038:	4613      	mov	r3, r2
 800703a:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800703c:	787b      	ldrb	r3, [r7, #1]
 800703e:	2b00      	cmp	r3, #0
 8007040:	d003      	beq.n	800704a <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8007042:	887a      	ldrh	r2, [r7, #2]
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8007048:	e003      	b.n	8007052 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800704a:	887b      	ldrh	r3, [r7, #2]
 800704c:	041a      	lsls	r2, r3, #16
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	619a      	str	r2, [r3, #24]
}
 8007052:	bf00      	nop
 8007054:	370c      	adds	r7, #12
 8007056:	46bd      	mov	sp, r7
 8007058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800705c:	4770      	bx	lr
	...

08007060 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8007060:	b580      	push	{r7, lr}
 8007062:	b084      	sub	sp, #16
 8007064:	af00      	add	r7, sp, #0
 8007066:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	2b00      	cmp	r3, #0
 800706c:	d101      	bne.n	8007072 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800706e:	2301      	movs	r3, #1
 8007070:	e11f      	b.n	80072b2 <HAL_I2C_Init+0x252>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007078:	b2db      	uxtb	r3, r3
 800707a:	2b00      	cmp	r3, #0
 800707c:	d106      	bne.n	800708c <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 800707e:	687b      	ldr	r3, [r7, #4]
 8007080:	2200      	movs	r2, #0
 8007082:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8007086:	6878      	ldr	r0, [r7, #4]
 8007088:	f7ff fac4 	bl	8006614 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	2224      	movs	r2, #36	; 0x24
 8007090:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	681a      	ldr	r2, [r3, #0]
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	f022 0201 	bic.w	r2, r2, #1
 80070a2:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	681b      	ldr	r3, [r3, #0]
 80070a8:	681a      	ldr	r2, [r3, #0]
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80070b2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	681b      	ldr	r3, [r3, #0]
 80070b8:	681a      	ldr	r2, [r3, #0]
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80070c2:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80070c4:	f001 fe4e 	bl	8008d64 <HAL_RCC_GetPCLK1Freq>
 80070c8:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	685b      	ldr	r3, [r3, #4]
 80070ce:	4a7b      	ldr	r2, [pc, #492]	; (80072bc <HAL_I2C_Init+0x25c>)
 80070d0:	4293      	cmp	r3, r2
 80070d2:	d807      	bhi.n	80070e4 <HAL_I2C_Init+0x84>
 80070d4:	68fb      	ldr	r3, [r7, #12]
 80070d6:	4a7a      	ldr	r2, [pc, #488]	; (80072c0 <HAL_I2C_Init+0x260>)
 80070d8:	4293      	cmp	r3, r2
 80070da:	bf94      	ite	ls
 80070dc:	2301      	movls	r3, #1
 80070de:	2300      	movhi	r3, #0
 80070e0:	b2db      	uxtb	r3, r3
 80070e2:	e006      	b.n	80070f2 <HAL_I2C_Init+0x92>
 80070e4:	68fb      	ldr	r3, [r7, #12]
 80070e6:	4a77      	ldr	r2, [pc, #476]	; (80072c4 <HAL_I2C_Init+0x264>)
 80070e8:	4293      	cmp	r3, r2
 80070ea:	bf94      	ite	ls
 80070ec:	2301      	movls	r3, #1
 80070ee:	2300      	movhi	r3, #0
 80070f0:	b2db      	uxtb	r3, r3
 80070f2:	2b00      	cmp	r3, #0
 80070f4:	d001      	beq.n	80070fa <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 80070f6:	2301      	movs	r3, #1
 80070f8:	e0db      	b.n	80072b2 <HAL_I2C_Init+0x252>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 80070fa:	68fb      	ldr	r3, [r7, #12]
 80070fc:	4a72      	ldr	r2, [pc, #456]	; (80072c8 <HAL_I2C_Init+0x268>)
 80070fe:	fba2 2303 	umull	r2, r3, r2, r3
 8007102:	0c9b      	lsrs	r3, r3, #18
 8007104:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	685b      	ldr	r3, [r3, #4]
 800710c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	68ba      	ldr	r2, [r7, #8]
 8007116:	430a      	orrs	r2, r1
 8007118:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	6a1b      	ldr	r3, [r3, #32]
 8007120:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	685b      	ldr	r3, [r3, #4]
 8007128:	4a64      	ldr	r2, [pc, #400]	; (80072bc <HAL_I2C_Init+0x25c>)
 800712a:	4293      	cmp	r3, r2
 800712c:	d802      	bhi.n	8007134 <HAL_I2C_Init+0xd4>
 800712e:	68bb      	ldr	r3, [r7, #8]
 8007130:	3301      	adds	r3, #1
 8007132:	e009      	b.n	8007148 <HAL_I2C_Init+0xe8>
 8007134:	68bb      	ldr	r3, [r7, #8]
 8007136:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800713a:	fb02 f303 	mul.w	r3, r2, r3
 800713e:	4a63      	ldr	r2, [pc, #396]	; (80072cc <HAL_I2C_Init+0x26c>)
 8007140:	fba2 2303 	umull	r2, r3, r2, r3
 8007144:	099b      	lsrs	r3, r3, #6
 8007146:	3301      	adds	r3, #1
 8007148:	687a      	ldr	r2, [r7, #4]
 800714a:	6812      	ldr	r2, [r2, #0]
 800714c:	430b      	orrs	r3, r1
 800714e:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	681b      	ldr	r3, [r3, #0]
 8007154:	69db      	ldr	r3, [r3, #28]
 8007156:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 800715a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	685b      	ldr	r3, [r3, #4]
 8007162:	4956      	ldr	r1, [pc, #344]	; (80072bc <HAL_I2C_Init+0x25c>)
 8007164:	428b      	cmp	r3, r1
 8007166:	d80d      	bhi.n	8007184 <HAL_I2C_Init+0x124>
 8007168:	68fb      	ldr	r3, [r7, #12]
 800716a:	1e59      	subs	r1, r3, #1
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	685b      	ldr	r3, [r3, #4]
 8007170:	005b      	lsls	r3, r3, #1
 8007172:	fbb1 f3f3 	udiv	r3, r1, r3
 8007176:	3301      	adds	r3, #1
 8007178:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800717c:	2b04      	cmp	r3, #4
 800717e:	bf38      	it	cc
 8007180:	2304      	movcc	r3, #4
 8007182:	e04f      	b.n	8007224 <HAL_I2C_Init+0x1c4>
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	689b      	ldr	r3, [r3, #8]
 8007188:	2b00      	cmp	r3, #0
 800718a:	d111      	bne.n	80071b0 <HAL_I2C_Init+0x150>
 800718c:	68fb      	ldr	r3, [r7, #12]
 800718e:	1e58      	subs	r0, r3, #1
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	6859      	ldr	r1, [r3, #4]
 8007194:	460b      	mov	r3, r1
 8007196:	005b      	lsls	r3, r3, #1
 8007198:	440b      	add	r3, r1
 800719a:	fbb0 f3f3 	udiv	r3, r0, r3
 800719e:	3301      	adds	r3, #1
 80071a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80071a4:	2b00      	cmp	r3, #0
 80071a6:	bf0c      	ite	eq
 80071a8:	2301      	moveq	r3, #1
 80071aa:	2300      	movne	r3, #0
 80071ac:	b2db      	uxtb	r3, r3
 80071ae:	e012      	b.n	80071d6 <HAL_I2C_Init+0x176>
 80071b0:	68fb      	ldr	r3, [r7, #12]
 80071b2:	1e58      	subs	r0, r3, #1
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	6859      	ldr	r1, [r3, #4]
 80071b8:	460b      	mov	r3, r1
 80071ba:	009b      	lsls	r3, r3, #2
 80071bc:	440b      	add	r3, r1
 80071be:	0099      	lsls	r1, r3, #2
 80071c0:	440b      	add	r3, r1
 80071c2:	fbb0 f3f3 	udiv	r3, r0, r3
 80071c6:	3301      	adds	r3, #1
 80071c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80071cc:	2b00      	cmp	r3, #0
 80071ce:	bf0c      	ite	eq
 80071d0:	2301      	moveq	r3, #1
 80071d2:	2300      	movne	r3, #0
 80071d4:	b2db      	uxtb	r3, r3
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d001      	beq.n	80071de <HAL_I2C_Init+0x17e>
 80071da:	2301      	movs	r3, #1
 80071dc:	e022      	b.n	8007224 <HAL_I2C_Init+0x1c4>
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	689b      	ldr	r3, [r3, #8]
 80071e2:	2b00      	cmp	r3, #0
 80071e4:	d10e      	bne.n	8007204 <HAL_I2C_Init+0x1a4>
 80071e6:	68fb      	ldr	r3, [r7, #12]
 80071e8:	1e58      	subs	r0, r3, #1
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	6859      	ldr	r1, [r3, #4]
 80071ee:	460b      	mov	r3, r1
 80071f0:	005b      	lsls	r3, r3, #1
 80071f2:	440b      	add	r3, r1
 80071f4:	fbb0 f3f3 	udiv	r3, r0, r3
 80071f8:	3301      	adds	r3, #1
 80071fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80071fe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007202:	e00f      	b.n	8007224 <HAL_I2C_Init+0x1c4>
 8007204:	68fb      	ldr	r3, [r7, #12]
 8007206:	1e58      	subs	r0, r3, #1
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	6859      	ldr	r1, [r3, #4]
 800720c:	460b      	mov	r3, r1
 800720e:	009b      	lsls	r3, r3, #2
 8007210:	440b      	add	r3, r1
 8007212:	0099      	lsls	r1, r3, #2
 8007214:	440b      	add	r3, r1
 8007216:	fbb0 f3f3 	udiv	r3, r0, r3
 800721a:	3301      	adds	r3, #1
 800721c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007220:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8007224:	6879      	ldr	r1, [r7, #4]
 8007226:	6809      	ldr	r1, [r1, #0]
 8007228:	4313      	orrs	r3, r2
 800722a:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	681b      	ldr	r3, [r3, #0]
 8007232:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	69da      	ldr	r2, [r3, #28]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	6a1b      	ldr	r3, [r3, #32]
 800723e:	431a      	orrs	r2, r3
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	430a      	orrs	r2, r1
 8007246:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	681b      	ldr	r3, [r3, #0]
 800724c:	689b      	ldr	r3, [r3, #8]
 800724e:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8007252:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8007256:	687a      	ldr	r2, [r7, #4]
 8007258:	6911      	ldr	r1, [r2, #16]
 800725a:	687a      	ldr	r2, [r7, #4]
 800725c:	68d2      	ldr	r2, [r2, #12]
 800725e:	4311      	orrs	r1, r2
 8007260:	687a      	ldr	r2, [r7, #4]
 8007262:	6812      	ldr	r2, [r2, #0]
 8007264:	430b      	orrs	r3, r1
 8007266:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	681b      	ldr	r3, [r3, #0]
 800726c:	68db      	ldr	r3, [r3, #12]
 800726e:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	695a      	ldr	r2, [r3, #20]
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	699b      	ldr	r3, [r3, #24]
 800727a:	431a      	orrs	r2, r3
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	681b      	ldr	r3, [r3, #0]
 8007280:	430a      	orrs	r2, r1
 8007282:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	681a      	ldr	r2, [r3, #0]
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	681b      	ldr	r3, [r3, #0]
 800728e:	f042 0201 	orr.w	r2, r2, #1
 8007292:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	2200      	movs	r2, #0
 8007298:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800729a:	687b      	ldr	r3, [r7, #4]
 800729c:	2220      	movs	r2, #32
 800729e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	2200      	movs	r2, #0
 80072a6:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	2200      	movs	r2, #0
 80072ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 80072b0:	2300      	movs	r3, #0
}
 80072b2:	4618      	mov	r0, r3
 80072b4:	3710      	adds	r7, #16
 80072b6:	46bd      	mov	sp, r7
 80072b8:	bd80      	pop	{r7, pc}
 80072ba:	bf00      	nop
 80072bc:	000186a0 	.word	0x000186a0
 80072c0:	001e847f 	.word	0x001e847f
 80072c4:	003d08ff 	.word	0x003d08ff
 80072c8:	431bde83 	.word	0x431bde83
 80072cc:	10624dd3 	.word	0x10624dd3

080072d0 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80072d0:	b580      	push	{r7, lr}
 80072d2:	b088      	sub	sp, #32
 80072d4:	af02      	add	r7, sp, #8
 80072d6:	60f8      	str	r0, [r7, #12]
 80072d8:	607a      	str	r2, [r7, #4]
 80072da:	461a      	mov	r2, r3
 80072dc:	460b      	mov	r3, r1
 80072de:	817b      	strh	r3, [r7, #10]
 80072e0:	4613      	mov	r3, r2
 80072e2:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80072e4:	f7ff fbc8 	bl	8006a78 <HAL_GetTick>
 80072e8:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 80072ea:	68fb      	ldr	r3, [r7, #12]
 80072ec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80072f0:	b2db      	uxtb	r3, r3
 80072f2:	2b20      	cmp	r3, #32
 80072f4:	f040 80e0 	bne.w	80074b8 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80072f8:	697b      	ldr	r3, [r7, #20]
 80072fa:	9300      	str	r3, [sp, #0]
 80072fc:	2319      	movs	r3, #25
 80072fe:	2201      	movs	r2, #1
 8007300:	4970      	ldr	r1, [pc, #448]	; (80074c4 <HAL_I2C_Master_Transmit+0x1f4>)
 8007302:	68f8      	ldr	r0, [r7, #12]
 8007304:	f000 ff16 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007308:	4603      	mov	r3, r0
 800730a:	2b00      	cmp	r3, #0
 800730c:	d001      	beq.n	8007312 <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 800730e:	2302      	movs	r3, #2
 8007310:	e0d3      	b.n	80074ba <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8007312:	68fb      	ldr	r3, [r7, #12]
 8007314:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007318:	2b01      	cmp	r3, #1
 800731a:	d101      	bne.n	8007320 <HAL_I2C_Master_Transmit+0x50>
 800731c:	2302      	movs	r3, #2
 800731e:	e0cc      	b.n	80074ba <HAL_I2C_Master_Transmit+0x1ea>
 8007320:	68fb      	ldr	r3, [r7, #12]
 8007322:	2201      	movs	r2, #1
 8007324:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007328:	68fb      	ldr	r3, [r7, #12]
 800732a:	681b      	ldr	r3, [r3, #0]
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	f003 0301 	and.w	r3, r3, #1
 8007332:	2b01      	cmp	r3, #1
 8007334:	d007      	beq.n	8007346 <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8007336:	68fb      	ldr	r3, [r7, #12]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	681a      	ldr	r2, [r3, #0]
 800733c:	68fb      	ldr	r3, [r7, #12]
 800733e:	681b      	ldr	r3, [r3, #0]
 8007340:	f042 0201 	orr.w	r2, r2, #1
 8007344:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	681b      	ldr	r3, [r3, #0]
 800734a:	681a      	ldr	r2, [r3, #0]
 800734c:	68fb      	ldr	r3, [r7, #12]
 800734e:	681b      	ldr	r3, [r3, #0]
 8007350:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007354:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 8007356:	68fb      	ldr	r3, [r7, #12]
 8007358:	2221      	movs	r2, #33	; 0x21
 800735a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800735e:	68fb      	ldr	r3, [r7, #12]
 8007360:	2210      	movs	r2, #16
 8007362:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8007366:	68fb      	ldr	r3, [r7, #12]
 8007368:	2200      	movs	r2, #0
 800736a:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800736c:	68fb      	ldr	r3, [r7, #12]
 800736e:	687a      	ldr	r2, [r7, #4]
 8007370:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8007372:	68fb      	ldr	r3, [r7, #12]
 8007374:	893a      	ldrh	r2, [r7, #8]
 8007376:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007378:	68fb      	ldr	r3, [r7, #12]
 800737a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800737c:	b29a      	uxth	r2, r3
 800737e:	68fb      	ldr	r3, [r7, #12]
 8007380:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8007382:	68fb      	ldr	r3, [r7, #12]
 8007384:	4a50      	ldr	r2, [pc, #320]	; (80074c8 <HAL_I2C_Master_Transmit+0x1f8>)
 8007386:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 8007388:	8979      	ldrh	r1, [r7, #10]
 800738a:	697b      	ldr	r3, [r7, #20]
 800738c:	6a3a      	ldr	r2, [r7, #32]
 800738e:	68f8      	ldr	r0, [r7, #12]
 8007390:	f000 fcea 	bl	8007d68 <I2C_MasterRequestWrite>
 8007394:	4603      	mov	r3, r0
 8007396:	2b00      	cmp	r3, #0
 8007398:	d001      	beq.n	800739e <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 800739a:	2301      	movs	r3, #1
 800739c:	e08d      	b.n	80074ba <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800739e:	2300      	movs	r3, #0
 80073a0:	613b      	str	r3, [r7, #16]
 80073a2:	68fb      	ldr	r3, [r7, #12]
 80073a4:	681b      	ldr	r3, [r3, #0]
 80073a6:	695b      	ldr	r3, [r3, #20]
 80073a8:	613b      	str	r3, [r7, #16]
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	681b      	ldr	r3, [r3, #0]
 80073ae:	699b      	ldr	r3, [r3, #24]
 80073b0:	613b      	str	r3, [r7, #16]
 80073b2:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 80073b4:	e066      	b.n	8007484 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80073b6:	697a      	ldr	r2, [r7, #20]
 80073b8:	6a39      	ldr	r1, [r7, #32]
 80073ba:	68f8      	ldr	r0, [r7, #12]
 80073bc:	f000 ff90 	bl	80082e0 <I2C_WaitOnTXEFlagUntilTimeout>
 80073c0:	4603      	mov	r3, r0
 80073c2:	2b00      	cmp	r3, #0
 80073c4:	d00d      	beq.n	80073e2 <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80073c6:	68fb      	ldr	r3, [r7, #12]
 80073c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073ca:	2b04      	cmp	r3, #4
 80073cc:	d107      	bne.n	80073de <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80073ce:	68fb      	ldr	r3, [r7, #12]
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	681a      	ldr	r2, [r3, #0]
 80073d4:	68fb      	ldr	r3, [r7, #12]
 80073d6:	681b      	ldr	r3, [r3, #0]
 80073d8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80073dc:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80073de:	2301      	movs	r3, #1
 80073e0:	e06b      	b.n	80074ba <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80073e2:	68fb      	ldr	r3, [r7, #12]
 80073e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073e6:	781a      	ldrb	r2, [r3, #0]
 80073e8:	68fb      	ldr	r3, [r7, #12]
 80073ea:	681b      	ldr	r3, [r3, #0]
 80073ec:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 80073ee:	68fb      	ldr	r3, [r7, #12]
 80073f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073f2:	1c5a      	adds	r2, r3, #1
 80073f4:	68fb      	ldr	r3, [r7, #12]
 80073f6:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 80073f8:	68fb      	ldr	r3, [r7, #12]
 80073fa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80073fc:	b29b      	uxth	r3, r3
 80073fe:	3b01      	subs	r3, #1
 8007400:	b29a      	uxth	r2, r3
 8007402:	68fb      	ldr	r3, [r7, #12]
 8007404:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8007406:	68fb      	ldr	r3, [r7, #12]
 8007408:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800740a:	3b01      	subs	r3, #1
 800740c:	b29a      	uxth	r2, r3
 800740e:	68fb      	ldr	r3, [r7, #12]
 8007410:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007412:	68fb      	ldr	r3, [r7, #12]
 8007414:	681b      	ldr	r3, [r3, #0]
 8007416:	695b      	ldr	r3, [r3, #20]
 8007418:	f003 0304 	and.w	r3, r3, #4
 800741c:	2b04      	cmp	r3, #4
 800741e:	d11b      	bne.n	8007458 <HAL_I2C_Master_Transmit+0x188>
 8007420:	68fb      	ldr	r3, [r7, #12]
 8007422:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007424:	2b00      	cmp	r3, #0
 8007426:	d017      	beq.n	8007458 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007428:	68fb      	ldr	r3, [r7, #12]
 800742a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800742c:	781a      	ldrb	r2, [r3, #0]
 800742e:	68fb      	ldr	r3, [r7, #12]
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8007434:	68fb      	ldr	r3, [r7, #12]
 8007436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007438:	1c5a      	adds	r2, r3, #1
 800743a:	68fb      	ldr	r3, [r7, #12]
 800743c:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 800743e:	68fb      	ldr	r3, [r7, #12]
 8007440:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007442:	b29b      	uxth	r3, r3
 8007444:	3b01      	subs	r3, #1
 8007446:	b29a      	uxth	r2, r3
 8007448:	68fb      	ldr	r3, [r7, #12]
 800744a:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 800744c:	68fb      	ldr	r3, [r7, #12]
 800744e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007450:	3b01      	subs	r3, #1
 8007452:	b29a      	uxth	r2, r3
 8007454:	68fb      	ldr	r3, [r7, #12]
 8007456:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007458:	697a      	ldr	r2, [r7, #20]
 800745a:	6a39      	ldr	r1, [r7, #32]
 800745c:	68f8      	ldr	r0, [r7, #12]
 800745e:	f000 ff80 	bl	8008362 <I2C_WaitOnBTFFlagUntilTimeout>
 8007462:	4603      	mov	r3, r0
 8007464:	2b00      	cmp	r3, #0
 8007466:	d00d      	beq.n	8007484 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007468:	68fb      	ldr	r3, [r7, #12]
 800746a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800746c:	2b04      	cmp	r3, #4
 800746e:	d107      	bne.n	8007480 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007470:	68fb      	ldr	r3, [r7, #12]
 8007472:	681b      	ldr	r3, [r3, #0]
 8007474:	681a      	ldr	r2, [r3, #0]
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800747e:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8007480:	2301      	movs	r3, #1
 8007482:	e01a      	b.n	80074ba <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 8007484:	68fb      	ldr	r3, [r7, #12]
 8007486:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007488:	2b00      	cmp	r3, #0
 800748a:	d194      	bne.n	80073b6 <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800748c:	68fb      	ldr	r3, [r7, #12]
 800748e:	681b      	ldr	r3, [r3, #0]
 8007490:	681a      	ldr	r2, [r3, #0]
 8007492:	68fb      	ldr	r3, [r7, #12]
 8007494:	681b      	ldr	r3, [r3, #0]
 8007496:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800749a:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	2220      	movs	r2, #32
 80074a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80074a4:	68fb      	ldr	r3, [r7, #12]
 80074a6:	2200      	movs	r2, #0
 80074a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80074ac:	68fb      	ldr	r3, [r7, #12]
 80074ae:	2200      	movs	r2, #0
 80074b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 80074b4:	2300      	movs	r3, #0
 80074b6:	e000      	b.n	80074ba <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 80074b8:	2302      	movs	r3, #2
  }
}
 80074ba:	4618      	mov	r0, r3
 80074bc:	3718      	adds	r7, #24
 80074be:	46bd      	mov	sp, r7
 80074c0:	bd80      	pop	{r7, pc}
 80074c2:	bf00      	nop
 80074c4:	00100002 	.word	0x00100002
 80074c8:	ffff0000 	.word	0xffff0000

080074cc <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80074cc:	b580      	push	{r7, lr}
 80074ce:	b08c      	sub	sp, #48	; 0x30
 80074d0:	af02      	add	r7, sp, #8
 80074d2:	60f8      	str	r0, [r7, #12]
 80074d4:	607a      	str	r2, [r7, #4]
 80074d6:	461a      	mov	r2, r3
 80074d8:	460b      	mov	r3, r1
 80074da:	817b      	strh	r3, [r7, #10]
 80074dc:	4613      	mov	r3, r2
 80074de:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80074e0:	f7ff faca 	bl	8006a78 <HAL_GetTick>
 80074e4:	6278      	str	r0, [r7, #36]	; 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80074ec:	b2db      	uxtb	r3, r3
 80074ee:	2b20      	cmp	r3, #32
 80074f0:	f040 820b 	bne.w	800790a <HAL_I2C_Master_Receive+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80074f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80074f6:	9300      	str	r3, [sp, #0]
 80074f8:	2319      	movs	r3, #25
 80074fa:	2201      	movs	r2, #1
 80074fc:	497c      	ldr	r1, [pc, #496]	; (80076f0 <HAL_I2C_Master_Receive+0x224>)
 80074fe:	68f8      	ldr	r0, [r7, #12]
 8007500:	f000 fe18 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007504:	4603      	mov	r3, r0
 8007506:	2b00      	cmp	r3, #0
 8007508:	d001      	beq.n	800750e <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 800750a:	2302      	movs	r3, #2
 800750c:	e1fe      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800750e:	68fb      	ldr	r3, [r7, #12]
 8007510:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007514:	2b01      	cmp	r3, #1
 8007516:	d101      	bne.n	800751c <HAL_I2C_Master_Receive+0x50>
 8007518:	2302      	movs	r3, #2
 800751a:	e1f7      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
 800751c:	68fb      	ldr	r3, [r7, #12]
 800751e:	2201      	movs	r2, #1
 8007520:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007524:	68fb      	ldr	r3, [r7, #12]
 8007526:	681b      	ldr	r3, [r3, #0]
 8007528:	681b      	ldr	r3, [r3, #0]
 800752a:	f003 0301 	and.w	r3, r3, #1
 800752e:	2b01      	cmp	r3, #1
 8007530:	d007      	beq.n	8007542 <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8007532:	68fb      	ldr	r3, [r7, #12]
 8007534:	681b      	ldr	r3, [r3, #0]
 8007536:	681a      	ldr	r2, [r3, #0]
 8007538:	68fb      	ldr	r3, [r7, #12]
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	f042 0201 	orr.w	r2, r2, #1
 8007540:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	681a      	ldr	r2, [r3, #0]
 8007548:	68fb      	ldr	r3, [r7, #12]
 800754a:	681b      	ldr	r3, [r3, #0]
 800754c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007550:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8007552:	68fb      	ldr	r3, [r7, #12]
 8007554:	2222      	movs	r2, #34	; 0x22
 8007556:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800755a:	68fb      	ldr	r3, [r7, #12]
 800755c:	2210      	movs	r2, #16
 800755e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8007562:	68fb      	ldr	r3, [r7, #12]
 8007564:	2200      	movs	r2, #0
 8007566:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8007568:	68fb      	ldr	r3, [r7, #12]
 800756a:	687a      	ldr	r2, [r7, #4]
 800756c:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	893a      	ldrh	r2, [r7, #8]
 8007572:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007574:	68fb      	ldr	r3, [r7, #12]
 8007576:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007578:	b29a      	uxth	r2, r3
 800757a:	68fb      	ldr	r3, [r7, #12]
 800757c:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800757e:	68fb      	ldr	r3, [r7, #12]
 8007580:	4a5c      	ldr	r2, [pc, #368]	; (80076f4 <HAL_I2C_Master_Receive+0x228>)
 8007582:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 8007584:	8979      	ldrh	r1, [r7, #10]
 8007586:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007588:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800758a:	68f8      	ldr	r0, [r7, #12]
 800758c:	f000 fc6e 	bl	8007e6c <I2C_MasterRequestRead>
 8007590:	4603      	mov	r3, r0
 8007592:	2b00      	cmp	r3, #0
 8007594:	d001      	beq.n	800759a <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 8007596:	2301      	movs	r3, #1
 8007598:	e1b8      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
    }

    if (hi2c->XferSize == 0U)
 800759a:	68fb      	ldr	r3, [r7, #12]
 800759c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800759e:	2b00      	cmp	r3, #0
 80075a0:	d113      	bne.n	80075ca <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80075a2:	2300      	movs	r3, #0
 80075a4:	623b      	str	r3, [r7, #32]
 80075a6:	68fb      	ldr	r3, [r7, #12]
 80075a8:	681b      	ldr	r3, [r3, #0]
 80075aa:	695b      	ldr	r3, [r3, #20]
 80075ac:	623b      	str	r3, [r7, #32]
 80075ae:	68fb      	ldr	r3, [r7, #12]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	699b      	ldr	r3, [r3, #24]
 80075b4:	623b      	str	r3, [r7, #32]
 80075b6:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80075b8:	68fb      	ldr	r3, [r7, #12]
 80075ba:	681b      	ldr	r3, [r3, #0]
 80075bc:	681a      	ldr	r2, [r3, #0]
 80075be:	68fb      	ldr	r3, [r7, #12]
 80075c0:	681b      	ldr	r3, [r3, #0]
 80075c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80075c6:	601a      	str	r2, [r3, #0]
 80075c8:	e18c      	b.n	80078e4 <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 1U)
 80075ca:	68fb      	ldr	r3, [r7, #12]
 80075cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80075ce:	2b01      	cmp	r3, #1
 80075d0:	d11b      	bne.n	800760a <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80075d2:	68fb      	ldr	r3, [r7, #12]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	681a      	ldr	r2, [r3, #0]
 80075d8:	68fb      	ldr	r3, [r7, #12]
 80075da:	681b      	ldr	r3, [r3, #0]
 80075dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80075e0:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80075e2:	2300      	movs	r3, #0
 80075e4:	61fb      	str	r3, [r7, #28]
 80075e6:	68fb      	ldr	r3, [r7, #12]
 80075e8:	681b      	ldr	r3, [r3, #0]
 80075ea:	695b      	ldr	r3, [r3, #20]
 80075ec:	61fb      	str	r3, [r7, #28]
 80075ee:	68fb      	ldr	r3, [r7, #12]
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	699b      	ldr	r3, [r3, #24]
 80075f4:	61fb      	str	r3, [r7, #28]
 80075f6:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80075f8:	68fb      	ldr	r3, [r7, #12]
 80075fa:	681b      	ldr	r3, [r3, #0]
 80075fc:	681a      	ldr	r2, [r3, #0]
 80075fe:	68fb      	ldr	r3, [r7, #12]
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007606:	601a      	str	r2, [r3, #0]
 8007608:	e16c      	b.n	80078e4 <HAL_I2C_Master_Receive+0x418>
    }
    else if (hi2c->XferSize == 2U)
 800760a:	68fb      	ldr	r3, [r7, #12]
 800760c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800760e:	2b02      	cmp	r3, #2
 8007610:	d11b      	bne.n	800764a <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007612:	68fb      	ldr	r3, [r7, #12]
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	681a      	ldr	r2, [r3, #0]
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007620:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007622:	68fb      	ldr	r3, [r7, #12]
 8007624:	681b      	ldr	r3, [r3, #0]
 8007626:	681a      	ldr	r2, [r3, #0]
 8007628:	68fb      	ldr	r3, [r7, #12]
 800762a:	681b      	ldr	r3, [r3, #0]
 800762c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007630:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007632:	2300      	movs	r3, #0
 8007634:	61bb      	str	r3, [r7, #24]
 8007636:	68fb      	ldr	r3, [r7, #12]
 8007638:	681b      	ldr	r3, [r3, #0]
 800763a:	695b      	ldr	r3, [r3, #20]
 800763c:	61bb      	str	r3, [r7, #24]
 800763e:	68fb      	ldr	r3, [r7, #12]
 8007640:	681b      	ldr	r3, [r3, #0]
 8007642:	699b      	ldr	r3, [r3, #24]
 8007644:	61bb      	str	r3, [r7, #24]
 8007646:	69bb      	ldr	r3, [r7, #24]
 8007648:	e14c      	b.n	80078e4 <HAL_I2C_Master_Receive+0x418>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800764a:	68fb      	ldr	r3, [r7, #12]
 800764c:	681b      	ldr	r3, [r3, #0]
 800764e:	681a      	ldr	r2, [r3, #0]
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007658:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800765a:	2300      	movs	r3, #0
 800765c:	617b      	str	r3, [r7, #20]
 800765e:	68fb      	ldr	r3, [r7, #12]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	695b      	ldr	r3, [r3, #20]
 8007664:	617b      	str	r3, [r7, #20]
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	699b      	ldr	r3, [r3, #24]
 800766c:	617b      	str	r3, [r7, #20]
 800766e:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8007670:	e138      	b.n	80078e4 <HAL_I2C_Master_Receive+0x418>
    {
      if (hi2c->XferSize <= 3U)
 8007672:	68fb      	ldr	r3, [r7, #12]
 8007674:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007676:	2b03      	cmp	r3, #3
 8007678:	f200 80f1 	bhi.w	800785e <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 800767c:	68fb      	ldr	r3, [r7, #12]
 800767e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007680:	2b01      	cmp	r3, #1
 8007682:	d123      	bne.n	80076cc <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007684:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007686:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8007688:	68f8      	ldr	r0, [r7, #12]
 800768a:	f000 feab 	bl	80083e4 <I2C_WaitOnRXNEFlagUntilTimeout>
 800768e:	4603      	mov	r3, r0
 8007690:	2b00      	cmp	r3, #0
 8007692:	d001      	beq.n	8007698 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 8007694:	2301      	movs	r3, #1
 8007696:	e139      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007698:	68fb      	ldr	r3, [r7, #12]
 800769a:	681b      	ldr	r3, [r3, #0]
 800769c:	691a      	ldr	r2, [r3, #16]
 800769e:	68fb      	ldr	r3, [r7, #12]
 80076a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80076a2:	b2d2      	uxtb	r2, r2
 80076a4:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80076aa:	1c5a      	adds	r2, r3, #1
 80076ac:	68fb      	ldr	r3, [r7, #12]
 80076ae:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80076b0:	68fb      	ldr	r3, [r7, #12]
 80076b2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80076b4:	3b01      	subs	r3, #1
 80076b6:	b29a      	uxth	r2, r3
 80076b8:	68fb      	ldr	r3, [r7, #12]
 80076ba:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80076c0:	b29b      	uxth	r3, r3
 80076c2:	3b01      	subs	r3, #1
 80076c4:	b29a      	uxth	r2, r3
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80076ca:	e10b      	b.n	80078e4 <HAL_I2C_Master_Receive+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 80076cc:	68fb      	ldr	r3, [r7, #12]
 80076ce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80076d0:	2b02      	cmp	r3, #2
 80076d2:	d14e      	bne.n	8007772 <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80076d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80076d6:	9300      	str	r3, [sp, #0]
 80076d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80076da:	2200      	movs	r2, #0
 80076dc:	4906      	ldr	r1, [pc, #24]	; (80076f8 <HAL_I2C_Master_Receive+0x22c>)
 80076de:	68f8      	ldr	r0, [r7, #12]
 80076e0:	f000 fd28 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 80076e4:	4603      	mov	r3, r0
 80076e6:	2b00      	cmp	r3, #0
 80076e8:	d008      	beq.n	80076fc <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 80076ea:	2301      	movs	r3, #1
 80076ec:	e10e      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
 80076ee:	bf00      	nop
 80076f0:	00100002 	.word	0x00100002
 80076f4:	ffff0000 	.word	0xffff0000
 80076f8:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80076fc:	68fb      	ldr	r3, [r7, #12]
 80076fe:	681b      	ldr	r3, [r3, #0]
 8007700:	681a      	ldr	r2, [r3, #0]
 8007702:	68fb      	ldr	r3, [r7, #12]
 8007704:	681b      	ldr	r3, [r3, #0]
 8007706:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800770a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800770c:	68fb      	ldr	r3, [r7, #12]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	691a      	ldr	r2, [r3, #16]
 8007712:	68fb      	ldr	r3, [r7, #12]
 8007714:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007716:	b2d2      	uxtb	r2, r2
 8007718:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800771a:	68fb      	ldr	r3, [r7, #12]
 800771c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800771e:	1c5a      	adds	r2, r3, #1
 8007720:	68fb      	ldr	r3, [r7, #12]
 8007722:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8007724:	68fb      	ldr	r3, [r7, #12]
 8007726:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007728:	3b01      	subs	r3, #1
 800772a:	b29a      	uxth	r2, r3
 800772c:	68fb      	ldr	r3, [r7, #12]
 800772e:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8007730:	68fb      	ldr	r3, [r7, #12]
 8007732:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007734:	b29b      	uxth	r3, r3
 8007736:	3b01      	subs	r3, #1
 8007738:	b29a      	uxth	r2, r3
 800773a:	68fb      	ldr	r3, [r7, #12]
 800773c:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800773e:	68fb      	ldr	r3, [r7, #12]
 8007740:	681b      	ldr	r3, [r3, #0]
 8007742:	691a      	ldr	r2, [r3, #16]
 8007744:	68fb      	ldr	r3, [r7, #12]
 8007746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007748:	b2d2      	uxtb	r2, r2
 800774a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800774c:	68fb      	ldr	r3, [r7, #12]
 800774e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007750:	1c5a      	adds	r2, r3, #1
 8007752:	68fb      	ldr	r3, [r7, #12]
 8007754:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8007756:	68fb      	ldr	r3, [r7, #12]
 8007758:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800775a:	3b01      	subs	r3, #1
 800775c:	b29a      	uxth	r2, r3
 800775e:	68fb      	ldr	r3, [r7, #12]
 8007760:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8007762:	68fb      	ldr	r3, [r7, #12]
 8007764:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007766:	b29b      	uxth	r3, r3
 8007768:	3b01      	subs	r3, #1
 800776a:	b29a      	uxth	r2, r3
 800776c:	68fb      	ldr	r3, [r7, #12]
 800776e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007770:	e0b8      	b.n	80078e4 <HAL_I2C_Master_Receive+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007772:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007774:	9300      	str	r3, [sp, #0]
 8007776:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007778:	2200      	movs	r2, #0
 800777a:	4966      	ldr	r1, [pc, #408]	; (8007914 <HAL_I2C_Master_Receive+0x448>)
 800777c:	68f8      	ldr	r0, [r7, #12]
 800777e:	f000 fcd9 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007782:	4603      	mov	r3, r0
 8007784:	2b00      	cmp	r3, #0
 8007786:	d001      	beq.n	800778c <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 8007788:	2301      	movs	r3, #1
 800778a:	e0bf      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800778c:	68fb      	ldr	r3, [r7, #12]
 800778e:	681b      	ldr	r3, [r3, #0]
 8007790:	681a      	ldr	r2, [r3, #0]
 8007792:	68fb      	ldr	r3, [r7, #12]
 8007794:	681b      	ldr	r3, [r3, #0]
 8007796:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800779a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800779c:	68fb      	ldr	r3, [r7, #12]
 800779e:	681b      	ldr	r3, [r3, #0]
 80077a0:	691a      	ldr	r2, [r3, #16]
 80077a2:	68fb      	ldr	r3, [r7, #12]
 80077a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077a6:	b2d2      	uxtb	r2, r2
 80077a8:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80077aa:	68fb      	ldr	r3, [r7, #12]
 80077ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077ae:	1c5a      	adds	r2, r3, #1
 80077b0:	68fb      	ldr	r3, [r7, #12]
 80077b2:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80077b4:	68fb      	ldr	r3, [r7, #12]
 80077b6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80077b8:	3b01      	subs	r3, #1
 80077ba:	b29a      	uxth	r2, r3
 80077bc:	68fb      	ldr	r3, [r7, #12]
 80077be:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80077c0:	68fb      	ldr	r3, [r7, #12]
 80077c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80077c4:	b29b      	uxth	r3, r3
 80077c6:	3b01      	subs	r3, #1
 80077c8:	b29a      	uxth	r2, r3
 80077ca:	68fb      	ldr	r3, [r7, #12]
 80077cc:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80077ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80077d0:	9300      	str	r3, [sp, #0]
 80077d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80077d4:	2200      	movs	r2, #0
 80077d6:	494f      	ldr	r1, [pc, #316]	; (8007914 <HAL_I2C_Master_Receive+0x448>)
 80077d8:	68f8      	ldr	r0, [r7, #12]
 80077da:	f000 fcab 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 80077de:	4603      	mov	r3, r0
 80077e0:	2b00      	cmp	r3, #0
 80077e2:	d001      	beq.n	80077e8 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 80077e4:	2301      	movs	r3, #1
 80077e6:	e091      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80077e8:	68fb      	ldr	r3, [r7, #12]
 80077ea:	681b      	ldr	r3, [r3, #0]
 80077ec:	681a      	ldr	r2, [r3, #0]
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	681b      	ldr	r3, [r3, #0]
 80077f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80077f6:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80077f8:	68fb      	ldr	r3, [r7, #12]
 80077fa:	681b      	ldr	r3, [r3, #0]
 80077fc:	691a      	ldr	r2, [r3, #16]
 80077fe:	68fb      	ldr	r3, [r7, #12]
 8007800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007802:	b2d2      	uxtb	r2, r2
 8007804:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8007806:	68fb      	ldr	r3, [r7, #12]
 8007808:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800780a:	1c5a      	adds	r2, r3, #1
 800780c:	68fb      	ldr	r3, [r7, #12]
 800780e:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8007810:	68fb      	ldr	r3, [r7, #12]
 8007812:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007814:	3b01      	subs	r3, #1
 8007816:	b29a      	uxth	r2, r3
 8007818:	68fb      	ldr	r3, [r7, #12]
 800781a:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007820:	b29b      	uxth	r3, r3
 8007822:	3b01      	subs	r3, #1
 8007824:	b29a      	uxth	r2, r3
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800782a:	68fb      	ldr	r3, [r7, #12]
 800782c:	681b      	ldr	r3, [r3, #0]
 800782e:	691a      	ldr	r2, [r3, #16]
 8007830:	68fb      	ldr	r3, [r7, #12]
 8007832:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007834:	b2d2      	uxtb	r2, r2
 8007836:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8007838:	68fb      	ldr	r3, [r7, #12]
 800783a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800783c:	1c5a      	adds	r2, r3, #1
 800783e:	68fb      	ldr	r3, [r7, #12]
 8007840:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8007842:	68fb      	ldr	r3, [r7, #12]
 8007844:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007846:	3b01      	subs	r3, #1
 8007848:	b29a      	uxth	r2, r3
 800784a:	68fb      	ldr	r3, [r7, #12]
 800784c:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 800784e:	68fb      	ldr	r3, [r7, #12]
 8007850:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007852:	b29b      	uxth	r3, r3
 8007854:	3b01      	subs	r3, #1
 8007856:	b29a      	uxth	r2, r3
 8007858:	68fb      	ldr	r3, [r7, #12]
 800785a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800785c:	e042      	b.n	80078e4 <HAL_I2C_Master_Receive+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800785e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007860:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8007862:	68f8      	ldr	r0, [r7, #12]
 8007864:	f000 fdbe 	bl	80083e4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007868:	4603      	mov	r3, r0
 800786a:	2b00      	cmp	r3, #0
 800786c:	d001      	beq.n	8007872 <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 800786e:	2301      	movs	r3, #1
 8007870:	e04c      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007872:	68fb      	ldr	r3, [r7, #12]
 8007874:	681b      	ldr	r3, [r3, #0]
 8007876:	691a      	ldr	r2, [r3, #16]
 8007878:	68fb      	ldr	r3, [r7, #12]
 800787a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800787c:	b2d2      	uxtb	r2, r2
 800787e:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8007880:	68fb      	ldr	r3, [r7, #12]
 8007882:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007884:	1c5a      	adds	r2, r3, #1
 8007886:	68fb      	ldr	r3, [r7, #12]
 8007888:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 800788a:	68fb      	ldr	r3, [r7, #12]
 800788c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800788e:	3b01      	subs	r3, #1
 8007890:	b29a      	uxth	r2, r3
 8007892:	68fb      	ldr	r3, [r7, #12]
 8007894:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8007896:	68fb      	ldr	r3, [r7, #12]
 8007898:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800789a:	b29b      	uxth	r3, r3
 800789c:	3b01      	subs	r3, #1
 800789e:	b29a      	uxth	r2, r3
 80078a0:	68fb      	ldr	r3, [r7, #12]
 80078a2:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80078a4:	68fb      	ldr	r3, [r7, #12]
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	695b      	ldr	r3, [r3, #20]
 80078aa:	f003 0304 	and.w	r3, r3, #4
 80078ae:	2b04      	cmp	r3, #4
 80078b0:	d118      	bne.n	80078e4 <HAL_I2C_Master_Receive+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80078b2:	68fb      	ldr	r3, [r7, #12]
 80078b4:	681b      	ldr	r3, [r3, #0]
 80078b6:	691a      	ldr	r2, [r3, #16]
 80078b8:	68fb      	ldr	r3, [r7, #12]
 80078ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078bc:	b2d2      	uxtb	r2, r2
 80078be:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80078c0:	68fb      	ldr	r3, [r7, #12]
 80078c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078c4:	1c5a      	adds	r2, r3, #1
 80078c6:	68fb      	ldr	r3, [r7, #12]
 80078c8:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80078ca:	68fb      	ldr	r3, [r7, #12]
 80078cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80078ce:	3b01      	subs	r3, #1
 80078d0:	b29a      	uxth	r2, r3
 80078d2:	68fb      	ldr	r3, [r7, #12]
 80078d4:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80078d6:	68fb      	ldr	r3, [r7, #12]
 80078d8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80078da:	b29b      	uxth	r3, r3
 80078dc:	3b01      	subs	r3, #1
 80078de:	b29a      	uxth	r2, r3
 80078e0:	68fb      	ldr	r3, [r7, #12]
 80078e2:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80078e4:	68fb      	ldr	r3, [r7, #12]
 80078e6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80078e8:	2b00      	cmp	r3, #0
 80078ea:	f47f aec2 	bne.w	8007672 <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 80078ee:	68fb      	ldr	r3, [r7, #12]
 80078f0:	2220      	movs	r2, #32
 80078f2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80078f6:	68fb      	ldr	r3, [r7, #12]
 80078f8:	2200      	movs	r2, #0
 80078fa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80078fe:	68fb      	ldr	r3, [r7, #12]
 8007900:	2200      	movs	r2, #0
 8007902:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8007906:	2300      	movs	r3, #0
 8007908:	e000      	b.n	800790c <HAL_I2C_Master_Receive+0x440>
  }
  else
  {
    return HAL_BUSY;
 800790a:	2302      	movs	r3, #2
  }
}
 800790c:	4618      	mov	r0, r3
 800790e:	3728      	adds	r7, #40	; 0x28
 8007910:	46bd      	mov	sp, r7
 8007912:	bd80      	pop	{r7, pc}
 8007914:	00010004 	.word	0x00010004

08007918 <HAL_I2C_Mem_Write>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007918:	b580      	push	{r7, lr}
 800791a:	b088      	sub	sp, #32
 800791c:	af02      	add	r7, sp, #8
 800791e:	60f8      	str	r0, [r7, #12]
 8007920:	4608      	mov	r0, r1
 8007922:	4611      	mov	r1, r2
 8007924:	461a      	mov	r2, r3
 8007926:	4603      	mov	r3, r0
 8007928:	817b      	strh	r3, [r7, #10]
 800792a:	460b      	mov	r3, r1
 800792c:	813b      	strh	r3, [r7, #8]
 800792e:	4613      	mov	r3, r2
 8007930:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8007932:	f7ff f8a1 	bl	8006a78 <HAL_GetTick>
 8007936:	6178      	str	r0, [r7, #20]

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007938:	68fb      	ldr	r3, [r7, #12]
 800793a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800793e:	b2db      	uxtb	r3, r3
 8007940:	2b20      	cmp	r3, #32
 8007942:	f040 80d9 	bne.w	8007af8 <HAL_I2C_Mem_Write+0x1e0>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007946:	697b      	ldr	r3, [r7, #20]
 8007948:	9300      	str	r3, [sp, #0]
 800794a:	2319      	movs	r3, #25
 800794c:	2201      	movs	r2, #1
 800794e:	496d      	ldr	r1, [pc, #436]	; (8007b04 <HAL_I2C_Mem_Write+0x1ec>)
 8007950:	68f8      	ldr	r0, [r7, #12]
 8007952:	f000 fbef 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007956:	4603      	mov	r3, r0
 8007958:	2b00      	cmp	r3, #0
 800795a:	d001      	beq.n	8007960 <HAL_I2C_Mem_Write+0x48>
    {
      return HAL_BUSY;
 800795c:	2302      	movs	r3, #2
 800795e:	e0cc      	b.n	8007afa <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8007960:	68fb      	ldr	r3, [r7, #12]
 8007962:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007966:	2b01      	cmp	r3, #1
 8007968:	d101      	bne.n	800796e <HAL_I2C_Mem_Write+0x56>
 800796a:	2302      	movs	r3, #2
 800796c:	e0c5      	b.n	8007afa <HAL_I2C_Mem_Write+0x1e2>
 800796e:	68fb      	ldr	r3, [r7, #12]
 8007970:	2201      	movs	r2, #1
 8007972:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	681b      	ldr	r3, [r3, #0]
 800797a:	681b      	ldr	r3, [r3, #0]
 800797c:	f003 0301 	and.w	r3, r3, #1
 8007980:	2b01      	cmp	r3, #1
 8007982:	d007      	beq.n	8007994 <HAL_I2C_Mem_Write+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8007984:	68fb      	ldr	r3, [r7, #12]
 8007986:	681b      	ldr	r3, [r3, #0]
 8007988:	681a      	ldr	r2, [r3, #0]
 800798a:	68fb      	ldr	r3, [r7, #12]
 800798c:	681b      	ldr	r3, [r3, #0]
 800798e:	f042 0201 	orr.w	r2, r2, #1
 8007992:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007994:	68fb      	ldr	r3, [r7, #12]
 8007996:	681b      	ldr	r3, [r3, #0]
 8007998:	681a      	ldr	r2, [r3, #0]
 800799a:	68fb      	ldr	r3, [r7, #12]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80079a2:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80079a4:	68fb      	ldr	r3, [r7, #12]
 80079a6:	2221      	movs	r2, #33	; 0x21
 80079a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80079ac:	68fb      	ldr	r3, [r7, #12]
 80079ae:	2240      	movs	r2, #64	; 0x40
 80079b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80079b4:	68fb      	ldr	r3, [r7, #12]
 80079b6:	2200      	movs	r2, #0
 80079b8:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80079ba:	68fb      	ldr	r3, [r7, #12]
 80079bc:	6a3a      	ldr	r2, [r7, #32]
 80079be:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80079c0:	68fb      	ldr	r3, [r7, #12]
 80079c2:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80079c4:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80079c6:	68fb      	ldr	r3, [r7, #12]
 80079c8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80079ca:	b29a      	uxth	r2, r3
 80079cc:	68fb      	ldr	r3, [r7, #12]
 80079ce:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	4a4d      	ldr	r2, [pc, #308]	; (8007b08 <HAL_I2C_Mem_Write+0x1f0>)
 80079d4:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80079d6:	88f8      	ldrh	r0, [r7, #6]
 80079d8:	893a      	ldrh	r2, [r7, #8]
 80079da:	8979      	ldrh	r1, [r7, #10]
 80079dc:	697b      	ldr	r3, [r7, #20]
 80079de:	9301      	str	r3, [sp, #4]
 80079e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80079e2:	9300      	str	r3, [sp, #0]
 80079e4:	4603      	mov	r3, r0
 80079e6:	68f8      	ldr	r0, [r7, #12]
 80079e8:	f000 fb0e 	bl	8008008 <I2C_RequestMemoryWrite>
 80079ec:	4603      	mov	r3, r0
 80079ee:	2b00      	cmp	r3, #0
 80079f0:	d052      	beq.n	8007a98 <HAL_I2C_Mem_Write+0x180>
    {
      return HAL_ERROR;
 80079f2:	2301      	movs	r3, #1
 80079f4:	e081      	b.n	8007afa <HAL_I2C_Mem_Write+0x1e2>
    }

    while (hi2c->XferSize > 0U)
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80079f6:	697a      	ldr	r2, [r7, #20]
 80079f8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80079fa:	68f8      	ldr	r0, [r7, #12]
 80079fc:	f000 fc70 	bl	80082e0 <I2C_WaitOnTXEFlagUntilTimeout>
 8007a00:	4603      	mov	r3, r0
 8007a02:	2b00      	cmp	r3, #0
 8007a04:	d00d      	beq.n	8007a22 <HAL_I2C_Mem_Write+0x10a>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007a06:	68fb      	ldr	r3, [r7, #12]
 8007a08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a0a:	2b04      	cmp	r3, #4
 8007a0c:	d107      	bne.n	8007a1e <HAL_I2C_Mem_Write+0x106>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007a0e:	68fb      	ldr	r3, [r7, #12]
 8007a10:	681b      	ldr	r3, [r3, #0]
 8007a12:	681a      	ldr	r2, [r3, #0]
 8007a14:	68fb      	ldr	r3, [r7, #12]
 8007a16:	681b      	ldr	r3, [r3, #0]
 8007a18:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007a1c:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8007a1e:	2301      	movs	r3, #1
 8007a20:	e06b      	b.n	8007afa <HAL_I2C_Mem_Write+0x1e2>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007a22:	68fb      	ldr	r3, [r7, #12]
 8007a24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007a26:	781a      	ldrb	r2, [r3, #0]
 8007a28:	68fb      	ldr	r3, [r7, #12]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8007a2e:	68fb      	ldr	r3, [r7, #12]
 8007a30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007a32:	1c5a      	adds	r2, r3, #1
 8007a34:	68fb      	ldr	r3, [r7, #12]
 8007a36:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferSize--;
 8007a38:	68fb      	ldr	r3, [r7, #12]
 8007a3a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007a3c:	3b01      	subs	r3, #1
 8007a3e:	b29a      	uxth	r2, r3
 8007a40:	68fb      	ldr	r3, [r7, #12]
 8007a42:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8007a44:	68fb      	ldr	r3, [r7, #12]
 8007a46:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007a48:	b29b      	uxth	r3, r3
 8007a4a:	3b01      	subs	r3, #1
 8007a4c:	b29a      	uxth	r2, r3
 8007a4e:	68fb      	ldr	r3, [r7, #12]
 8007a50:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007a52:	68fb      	ldr	r3, [r7, #12]
 8007a54:	681b      	ldr	r3, [r3, #0]
 8007a56:	695b      	ldr	r3, [r3, #20]
 8007a58:	f003 0304 	and.w	r3, r3, #4
 8007a5c:	2b04      	cmp	r3, #4
 8007a5e:	d11b      	bne.n	8007a98 <HAL_I2C_Mem_Write+0x180>
 8007a60:	68fb      	ldr	r3, [r7, #12]
 8007a62:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007a64:	2b00      	cmp	r3, #0
 8007a66:	d017      	beq.n	8007a98 <HAL_I2C_Mem_Write+0x180>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007a6c:	781a      	ldrb	r2, [r3, #0]
 8007a6e:	68fb      	ldr	r3, [r7, #12]
 8007a70:	681b      	ldr	r3, [r3, #0]
 8007a72:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8007a74:	68fb      	ldr	r3, [r7, #12]
 8007a76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007a78:	1c5a      	adds	r2, r3, #1
 8007a7a:	68fb      	ldr	r3, [r7, #12]
 8007a7c:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8007a7e:	68fb      	ldr	r3, [r7, #12]
 8007a80:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007a82:	3b01      	subs	r3, #1
 8007a84:	b29a      	uxth	r2, r3
 8007a86:	68fb      	ldr	r3, [r7, #12]
 8007a88:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8007a8a:	68fb      	ldr	r3, [r7, #12]
 8007a8c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007a8e:	b29b      	uxth	r3, r3
 8007a90:	3b01      	subs	r3, #1
 8007a92:	b29a      	uxth	r2, r3
 8007a94:	68fb      	ldr	r3, [r7, #12]
 8007a96:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8007a98:	68fb      	ldr	r3, [r7, #12]
 8007a9a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007a9c:	2b00      	cmp	r3, #0
 8007a9e:	d1aa      	bne.n	80079f6 <HAL_I2C_Mem_Write+0xde>
      }
    }

    /* Wait until BTF flag is set */
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007aa0:	697a      	ldr	r2, [r7, #20]
 8007aa2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007aa4:	68f8      	ldr	r0, [r7, #12]
 8007aa6:	f000 fc5c 	bl	8008362 <I2C_WaitOnBTFFlagUntilTimeout>
 8007aaa:	4603      	mov	r3, r0
 8007aac:	2b00      	cmp	r3, #0
 8007aae:	d00d      	beq.n	8007acc <HAL_I2C_Mem_Write+0x1b4>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007ab0:	68fb      	ldr	r3, [r7, #12]
 8007ab2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ab4:	2b04      	cmp	r3, #4
 8007ab6:	d107      	bne.n	8007ac8 <HAL_I2C_Mem_Write+0x1b0>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007ab8:	68fb      	ldr	r3, [r7, #12]
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	681a      	ldr	r2, [r3, #0]
 8007abe:	68fb      	ldr	r3, [r7, #12]
 8007ac0:	681b      	ldr	r3, [r3, #0]
 8007ac2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007ac6:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8007ac8:	2301      	movs	r3, #1
 8007aca:	e016      	b.n	8007afa <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007acc:	68fb      	ldr	r3, [r7, #12]
 8007ace:	681b      	ldr	r3, [r3, #0]
 8007ad0:	681a      	ldr	r2, [r3, #0]
 8007ad2:	68fb      	ldr	r3, [r7, #12]
 8007ad4:	681b      	ldr	r3, [r3, #0]
 8007ad6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007ada:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8007adc:	68fb      	ldr	r3, [r7, #12]
 8007ade:	2220      	movs	r2, #32
 8007ae0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	2200      	movs	r2, #0
 8007ae8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007aec:	68fb      	ldr	r3, [r7, #12]
 8007aee:	2200      	movs	r2, #0
 8007af0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8007af4:	2300      	movs	r3, #0
 8007af6:	e000      	b.n	8007afa <HAL_I2C_Mem_Write+0x1e2>
  }
  else
  {
    return HAL_BUSY;
 8007af8:	2302      	movs	r3, #2
  }
}
 8007afa:	4618      	mov	r0, r3
 8007afc:	3718      	adds	r7, #24
 8007afe:	46bd      	mov	sp, r7
 8007b00:	bd80      	pop	{r7, pc}
 8007b02:	bf00      	nop
 8007b04:	00100002 	.word	0x00100002
 8007b08:	ffff0000 	.word	0xffff0000

08007b0c <HAL_I2C_IsDeviceReady>:
  * @param  Trials Number of trials
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Trials, uint32_t Timeout)
{
 8007b0c:	b580      	push	{r7, lr}
 8007b0e:	b08a      	sub	sp, #40	; 0x28
 8007b10:	af02      	add	r7, sp, #8
 8007b12:	60f8      	str	r0, [r7, #12]
 8007b14:	607a      	str	r2, [r7, #4]
 8007b16:	603b      	str	r3, [r7, #0]
 8007b18:	460b      	mov	r3, r1
 8007b1a:	817b      	strh	r3, [r7, #10]
  /* Get tick */
  uint32_t tickstart = HAL_GetTick();
 8007b1c:	f7fe ffac 	bl	8006a78 <HAL_GetTick>
 8007b20:	61f8      	str	r0, [r7, #28]
  uint32_t I2C_Trials = 1U;
 8007b22:	2301      	movs	r3, #1
 8007b24:	61bb      	str	r3, [r7, #24]
  FlagStatus tmp1;
  FlagStatus tmp2;

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007b26:	68fb      	ldr	r3, [r7, #12]
 8007b28:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007b2c:	b2db      	uxtb	r3, r3
 8007b2e:	2b20      	cmp	r3, #32
 8007b30:	f040 8111 	bne.w	8007d56 <HAL_I2C_IsDeviceReady+0x24a>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007b34:	69fb      	ldr	r3, [r7, #28]
 8007b36:	9300      	str	r3, [sp, #0]
 8007b38:	2319      	movs	r3, #25
 8007b3a:	2201      	movs	r2, #1
 8007b3c:	4988      	ldr	r1, [pc, #544]	; (8007d60 <HAL_I2C_IsDeviceReady+0x254>)
 8007b3e:	68f8      	ldr	r0, [r7, #12]
 8007b40:	f000 faf8 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007b44:	4603      	mov	r3, r0
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d001      	beq.n	8007b4e <HAL_I2C_IsDeviceReady+0x42>
    {
      return HAL_BUSY;
 8007b4a:	2302      	movs	r3, #2
 8007b4c:	e104      	b.n	8007d58 <HAL_I2C_IsDeviceReady+0x24c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8007b4e:	68fb      	ldr	r3, [r7, #12]
 8007b50:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007b54:	2b01      	cmp	r3, #1
 8007b56:	d101      	bne.n	8007b5c <HAL_I2C_IsDeviceReady+0x50>
 8007b58:	2302      	movs	r3, #2
 8007b5a:	e0fd      	b.n	8007d58 <HAL_I2C_IsDeviceReady+0x24c>
 8007b5c:	68fb      	ldr	r3, [r7, #12]
 8007b5e:	2201      	movs	r2, #1
 8007b60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007b64:	68fb      	ldr	r3, [r7, #12]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	681b      	ldr	r3, [r3, #0]
 8007b6a:	f003 0301 	and.w	r3, r3, #1
 8007b6e:	2b01      	cmp	r3, #1
 8007b70:	d007      	beq.n	8007b82 <HAL_I2C_IsDeviceReady+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8007b72:	68fb      	ldr	r3, [r7, #12]
 8007b74:	681b      	ldr	r3, [r3, #0]
 8007b76:	681a      	ldr	r2, [r3, #0]
 8007b78:	68fb      	ldr	r3, [r7, #12]
 8007b7a:	681b      	ldr	r3, [r3, #0]
 8007b7c:	f042 0201 	orr.w	r2, r2, #1
 8007b80:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007b82:	68fb      	ldr	r3, [r7, #12]
 8007b84:	681b      	ldr	r3, [r3, #0]
 8007b86:	681a      	ldr	r2, [r3, #0]
 8007b88:	68fb      	ldr	r3, [r7, #12]
 8007b8a:	681b      	ldr	r3, [r3, #0]
 8007b8c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007b90:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_BUSY;
 8007b92:	68fb      	ldr	r3, [r7, #12]
 8007b94:	2224      	movs	r2, #36	; 0x24
 8007b96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007b9a:	68fb      	ldr	r3, [r7, #12]
 8007b9c:	2200      	movs	r2, #0
 8007b9e:	641a      	str	r2, [r3, #64]	; 0x40
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8007ba0:	68fb      	ldr	r3, [r7, #12]
 8007ba2:	4a70      	ldr	r2, [pc, #448]	; (8007d64 <HAL_I2C_IsDeviceReady+0x258>)
 8007ba4:	62da      	str	r2, [r3, #44]	; 0x2c

    do
    {
      /* Generate Start */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007ba6:	68fb      	ldr	r3, [r7, #12]
 8007ba8:	681b      	ldr	r3, [r3, #0]
 8007baa:	681a      	ldr	r2, [r3, #0]
 8007bac:	68fb      	ldr	r3, [r7, #12]
 8007bae:	681b      	ldr	r3, [r3, #0]
 8007bb0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007bb4:	601a      	str	r2, [r3, #0]

      /* Wait until SB flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, tickstart) != HAL_OK)
 8007bb6:	69fb      	ldr	r3, [r7, #28]
 8007bb8:	9300      	str	r3, [sp, #0]
 8007bba:	683b      	ldr	r3, [r7, #0]
 8007bbc:	2200      	movs	r2, #0
 8007bbe:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007bc2:	68f8      	ldr	r0, [r7, #12]
 8007bc4:	f000 fab6 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007bc8:	4603      	mov	r3, r0
 8007bca:	2b00      	cmp	r3, #0
 8007bcc:	d00d      	beq.n	8007bea <HAL_I2C_IsDeviceReady+0xde>
      {
        if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007bce:	68fb      	ldr	r3, [r7, #12]
 8007bd0:	681b      	ldr	r3, [r3, #0]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007bd8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007bdc:	d103      	bne.n	8007be6 <HAL_I2C_IsDeviceReady+0xda>
        {
          hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007bde:	68fb      	ldr	r3, [r7, #12]
 8007be0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007be4:	641a      	str	r2, [r3, #64]	; 0x40
        }
        return HAL_TIMEOUT;
 8007be6:	2303      	movs	r3, #3
 8007be8:	e0b6      	b.n	8007d58 <HAL_I2C_IsDeviceReady+0x24c>
      }

      /* Send slave address */
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007bea:	897b      	ldrh	r3, [r7, #10]
 8007bec:	b2db      	uxtb	r3, r3
 8007bee:	461a      	mov	r2, r3
 8007bf0:	68fb      	ldr	r3, [r7, #12]
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007bf8:	611a      	str	r2, [r3, #16]

      /* Wait until ADDR or AF flag are set */
      /* Get tick */
      tickstart = HAL_GetTick();
 8007bfa:	f7fe ff3d 	bl	8006a78 <HAL_GetTick>
 8007bfe:	61f8      	str	r0, [r7, #28]

      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 8007c00:	68fb      	ldr	r3, [r7, #12]
 8007c02:	681b      	ldr	r3, [r3, #0]
 8007c04:	695b      	ldr	r3, [r3, #20]
 8007c06:	f003 0302 	and.w	r3, r3, #2
 8007c0a:	2b02      	cmp	r3, #2
 8007c0c:	bf0c      	ite	eq
 8007c0e:	2301      	moveq	r3, #1
 8007c10:	2300      	movne	r3, #0
 8007c12:	b2db      	uxtb	r3, r3
 8007c14:	75fb      	strb	r3, [r7, #23]
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8007c16:	68fb      	ldr	r3, [r7, #12]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	695b      	ldr	r3, [r3, #20]
 8007c1c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007c20:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007c24:	bf0c      	ite	eq
 8007c26:	2301      	moveq	r3, #1
 8007c28:	2300      	movne	r3, #0
 8007c2a:	b2db      	uxtb	r3, r3
 8007c2c:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 8007c2e:	e025      	b.n	8007c7c <HAL_I2C_IsDeviceReady+0x170>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8007c30:	f7fe ff22 	bl	8006a78 <HAL_GetTick>
 8007c34:	4602      	mov	r2, r0
 8007c36:	69fb      	ldr	r3, [r7, #28]
 8007c38:	1ad3      	subs	r3, r2, r3
 8007c3a:	683a      	ldr	r2, [r7, #0]
 8007c3c:	429a      	cmp	r2, r3
 8007c3e:	d302      	bcc.n	8007c46 <HAL_I2C_IsDeviceReady+0x13a>
 8007c40:	683b      	ldr	r3, [r7, #0]
 8007c42:	2b00      	cmp	r3, #0
 8007c44:	d103      	bne.n	8007c4e <HAL_I2C_IsDeviceReady+0x142>
        {
          hi2c->State = HAL_I2C_STATE_TIMEOUT;
 8007c46:	68fb      	ldr	r3, [r7, #12]
 8007c48:	22a0      	movs	r2, #160	; 0xa0
 8007c4a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        }
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 8007c4e:	68fb      	ldr	r3, [r7, #12]
 8007c50:	681b      	ldr	r3, [r3, #0]
 8007c52:	695b      	ldr	r3, [r3, #20]
 8007c54:	f003 0302 	and.w	r3, r3, #2
 8007c58:	2b02      	cmp	r3, #2
 8007c5a:	bf0c      	ite	eq
 8007c5c:	2301      	moveq	r3, #1
 8007c5e:	2300      	movne	r3, #0
 8007c60:	b2db      	uxtb	r3, r3
 8007c62:	75fb      	strb	r3, [r7, #23]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8007c64:	68fb      	ldr	r3, [r7, #12]
 8007c66:	681b      	ldr	r3, [r3, #0]
 8007c68:	695b      	ldr	r3, [r3, #20]
 8007c6a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007c6e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007c72:	bf0c      	ite	eq
 8007c74:	2301      	moveq	r3, #1
 8007c76:	2300      	movne	r3, #0
 8007c78:	b2db      	uxtb	r3, r3
 8007c7a:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 8007c7c:	68fb      	ldr	r3, [r7, #12]
 8007c7e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007c82:	b2db      	uxtb	r3, r3
 8007c84:	2ba0      	cmp	r3, #160	; 0xa0
 8007c86:	d005      	beq.n	8007c94 <HAL_I2C_IsDeviceReady+0x188>
 8007c88:	7dfb      	ldrb	r3, [r7, #23]
 8007c8a:	2b00      	cmp	r3, #0
 8007c8c:	d102      	bne.n	8007c94 <HAL_I2C_IsDeviceReady+0x188>
 8007c8e:	7dbb      	ldrb	r3, [r7, #22]
 8007c90:	2b00      	cmp	r3, #0
 8007c92:	d0cd      	beq.n	8007c30 <HAL_I2C_IsDeviceReady+0x124>
      }

      hi2c->State = HAL_I2C_STATE_READY;
 8007c94:	68fb      	ldr	r3, [r7, #12]
 8007c96:	2220      	movs	r2, #32
 8007c98:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

      /* Check if the ADDR flag has been set */
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR) == SET)
 8007c9c:	68fb      	ldr	r3, [r7, #12]
 8007c9e:	681b      	ldr	r3, [r3, #0]
 8007ca0:	695b      	ldr	r3, [r3, #20]
 8007ca2:	f003 0302 	and.w	r3, r3, #2
 8007ca6:	2b02      	cmp	r3, #2
 8007ca8:	d129      	bne.n	8007cfe <HAL_I2C_IsDeviceReady+0x1f2>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007caa:	68fb      	ldr	r3, [r7, #12]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	681a      	ldr	r2, [r3, #0]
 8007cb0:	68fb      	ldr	r3, [r7, #12]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007cb8:	601a      	str	r2, [r3, #0]

        /* Clear ADDR Flag */
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007cba:	2300      	movs	r3, #0
 8007cbc:	613b      	str	r3, [r7, #16]
 8007cbe:	68fb      	ldr	r3, [r7, #12]
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	695b      	ldr	r3, [r3, #20]
 8007cc4:	613b      	str	r3, [r7, #16]
 8007cc6:	68fb      	ldr	r3, [r7, #12]
 8007cc8:	681b      	ldr	r3, [r3, #0]
 8007cca:	699b      	ldr	r3, [r3, #24]
 8007ccc:	613b      	str	r3, [r7, #16]
 8007cce:	693b      	ldr	r3, [r7, #16]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007cd0:	69fb      	ldr	r3, [r7, #28]
 8007cd2:	9300      	str	r3, [sp, #0]
 8007cd4:	2319      	movs	r3, #25
 8007cd6:	2201      	movs	r2, #1
 8007cd8:	4921      	ldr	r1, [pc, #132]	; (8007d60 <HAL_I2C_IsDeviceReady+0x254>)
 8007cda:	68f8      	ldr	r0, [r7, #12]
 8007cdc:	f000 fa2a 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007ce0:	4603      	mov	r3, r0
 8007ce2:	2b00      	cmp	r3, #0
 8007ce4:	d001      	beq.n	8007cea <HAL_I2C_IsDeviceReady+0x1de>
        {
          return HAL_ERROR;
 8007ce6:	2301      	movs	r3, #1
 8007ce8:	e036      	b.n	8007d58 <HAL_I2C_IsDeviceReady+0x24c>
        }

        hi2c->State = HAL_I2C_STATE_READY;
 8007cea:	68fb      	ldr	r3, [r7, #12]
 8007cec:	2220      	movs	r2, #32
 8007cee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8007cf2:	68fb      	ldr	r3, [r7, #12]
 8007cf4:	2200      	movs	r2, #0
 8007cf6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_OK;
 8007cfa:	2300      	movs	r3, #0
 8007cfc:	e02c      	b.n	8007d58 <HAL_I2C_IsDeviceReady+0x24c>
      }
      else
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007cfe:	68fb      	ldr	r3, [r7, #12]
 8007d00:	681b      	ldr	r3, [r3, #0]
 8007d02:	681a      	ldr	r2, [r3, #0]
 8007d04:	68fb      	ldr	r3, [r7, #12]
 8007d06:	681b      	ldr	r3, [r3, #0]
 8007d08:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007d0c:	601a      	str	r2, [r3, #0]

        /* Clear AF Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007d0e:	68fb      	ldr	r3, [r7, #12]
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007d16:	615a      	str	r2, [r3, #20]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007d18:	69fb      	ldr	r3, [r7, #28]
 8007d1a:	9300      	str	r3, [sp, #0]
 8007d1c:	2319      	movs	r3, #25
 8007d1e:	2201      	movs	r2, #1
 8007d20:	490f      	ldr	r1, [pc, #60]	; (8007d60 <HAL_I2C_IsDeviceReady+0x254>)
 8007d22:	68f8      	ldr	r0, [r7, #12]
 8007d24:	f000 fa06 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007d28:	4603      	mov	r3, r0
 8007d2a:	2b00      	cmp	r3, #0
 8007d2c:	d001      	beq.n	8007d32 <HAL_I2C_IsDeviceReady+0x226>
        {
          return HAL_ERROR;
 8007d2e:	2301      	movs	r3, #1
 8007d30:	e012      	b.n	8007d58 <HAL_I2C_IsDeviceReady+0x24c>
        }
      }

      /* Increment Trials */
      I2C_Trials++;
 8007d32:	69bb      	ldr	r3, [r7, #24]
 8007d34:	3301      	adds	r3, #1
 8007d36:	61bb      	str	r3, [r7, #24]
    }
    while (I2C_Trials < Trials);
 8007d38:	69ba      	ldr	r2, [r7, #24]
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	429a      	cmp	r2, r3
 8007d3e:	f4ff af32 	bcc.w	8007ba6 <HAL_I2C_IsDeviceReady+0x9a>

    hi2c->State = HAL_I2C_STATE_READY;
 8007d42:	68fb      	ldr	r3, [r7, #12]
 8007d44:	2220      	movs	r2, #32
 8007d46:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007d4a:	68fb      	ldr	r3, [r7, #12]
 8007d4c:	2200      	movs	r2, #0
 8007d4e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8007d52:	2301      	movs	r3, #1
 8007d54:	e000      	b.n	8007d58 <HAL_I2C_IsDeviceReady+0x24c>
  }
  else
  {
    return HAL_BUSY;
 8007d56:	2302      	movs	r3, #2
  }
}
 8007d58:	4618      	mov	r0, r3
 8007d5a:	3720      	adds	r7, #32
 8007d5c:	46bd      	mov	sp, r7
 8007d5e:	bd80      	pop	{r7, pc}
 8007d60:	00100002 	.word	0x00100002
 8007d64:	ffff0000 	.word	0xffff0000

08007d68 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8007d68:	b580      	push	{r7, lr}
 8007d6a:	b088      	sub	sp, #32
 8007d6c:	af02      	add	r7, sp, #8
 8007d6e:	60f8      	str	r0, [r7, #12]
 8007d70:	607a      	str	r2, [r7, #4]
 8007d72:	603b      	str	r3, [r7, #0]
 8007d74:	460b      	mov	r3, r1
 8007d76:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8007d78:	68fb      	ldr	r3, [r7, #12]
 8007d7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d7c:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8007d7e:	697b      	ldr	r3, [r7, #20]
 8007d80:	2b08      	cmp	r3, #8
 8007d82:	d006      	beq.n	8007d92 <I2C_MasterRequestWrite+0x2a>
 8007d84:	697b      	ldr	r3, [r7, #20]
 8007d86:	2b01      	cmp	r3, #1
 8007d88:	d003      	beq.n	8007d92 <I2C_MasterRequestWrite+0x2a>
 8007d8a:	697b      	ldr	r3, [r7, #20]
 8007d8c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007d90:	d108      	bne.n	8007da4 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	681b      	ldr	r3, [r3, #0]
 8007d96:	681a      	ldr	r2, [r3, #0]
 8007d98:	68fb      	ldr	r3, [r7, #12]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007da0:	601a      	str	r2, [r3, #0]
 8007da2:	e00b      	b.n	8007dbc <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8007da4:	68fb      	ldr	r3, [r7, #12]
 8007da6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007da8:	2b12      	cmp	r3, #18
 8007daa:	d107      	bne.n	8007dbc <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007dac:	68fb      	ldr	r3, [r7, #12]
 8007dae:	681b      	ldr	r3, [r3, #0]
 8007db0:	681a      	ldr	r2, [r3, #0]
 8007db2:	68fb      	ldr	r3, [r7, #12]
 8007db4:	681b      	ldr	r3, [r3, #0]
 8007db6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007dba:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007dbc:	683b      	ldr	r3, [r7, #0]
 8007dbe:	9300      	str	r3, [sp, #0]
 8007dc0:	687b      	ldr	r3, [r7, #4]
 8007dc2:	2200      	movs	r2, #0
 8007dc4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007dc8:	68f8      	ldr	r0, [r7, #12]
 8007dca:	f000 f9b3 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007dce:	4603      	mov	r3, r0
 8007dd0:	2b00      	cmp	r3, #0
 8007dd2:	d00d      	beq.n	8007df0 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007dd4:	68fb      	ldr	r3, [r7, #12]
 8007dd6:	681b      	ldr	r3, [r3, #0]
 8007dd8:	681b      	ldr	r3, [r3, #0]
 8007dda:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007dde:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007de2:	d103      	bne.n	8007dec <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007de4:	68fb      	ldr	r3, [r7, #12]
 8007de6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007dea:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8007dec:	2303      	movs	r3, #3
 8007dee:	e035      	b.n	8007e5c <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8007df0:	68fb      	ldr	r3, [r7, #12]
 8007df2:	691b      	ldr	r3, [r3, #16]
 8007df4:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007df8:	d108      	bne.n	8007e0c <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007dfa:	897b      	ldrh	r3, [r7, #10]
 8007dfc:	b2db      	uxtb	r3, r3
 8007dfe:	461a      	mov	r2, r3
 8007e00:	68fb      	ldr	r3, [r7, #12]
 8007e02:	681b      	ldr	r3, [r3, #0]
 8007e04:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007e08:	611a      	str	r2, [r3, #16]
 8007e0a:	e01b      	b.n	8007e44 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8007e0c:	897b      	ldrh	r3, [r7, #10]
 8007e0e:	11db      	asrs	r3, r3, #7
 8007e10:	b2db      	uxtb	r3, r3
 8007e12:	f003 0306 	and.w	r3, r3, #6
 8007e16:	b2db      	uxtb	r3, r3
 8007e18:	f063 030f 	orn	r3, r3, #15
 8007e1c:	b2da      	uxtb	r2, r3
 8007e1e:	68fb      	ldr	r3, [r7, #12]
 8007e20:	681b      	ldr	r3, [r3, #0]
 8007e22:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8007e24:	683b      	ldr	r3, [r7, #0]
 8007e26:	687a      	ldr	r2, [r7, #4]
 8007e28:	490e      	ldr	r1, [pc, #56]	; (8007e64 <I2C_MasterRequestWrite+0xfc>)
 8007e2a:	68f8      	ldr	r0, [r7, #12]
 8007e2c:	f000 f9d9 	bl	80081e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007e30:	4603      	mov	r3, r0
 8007e32:	2b00      	cmp	r3, #0
 8007e34:	d001      	beq.n	8007e3a <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8007e36:	2301      	movs	r3, #1
 8007e38:	e010      	b.n	8007e5c <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8007e3a:	897b      	ldrh	r3, [r7, #10]
 8007e3c:	b2da      	uxtb	r2, r3
 8007e3e:	68fb      	ldr	r3, [r7, #12]
 8007e40:	681b      	ldr	r3, [r3, #0]
 8007e42:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007e44:	683b      	ldr	r3, [r7, #0]
 8007e46:	687a      	ldr	r2, [r7, #4]
 8007e48:	4907      	ldr	r1, [pc, #28]	; (8007e68 <I2C_MasterRequestWrite+0x100>)
 8007e4a:	68f8      	ldr	r0, [r7, #12]
 8007e4c:	f000 f9c9 	bl	80081e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007e50:	4603      	mov	r3, r0
 8007e52:	2b00      	cmp	r3, #0
 8007e54:	d001      	beq.n	8007e5a <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8007e56:	2301      	movs	r3, #1
 8007e58:	e000      	b.n	8007e5c <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8007e5a:	2300      	movs	r3, #0
}
 8007e5c:	4618      	mov	r0, r3
 8007e5e:	3718      	adds	r7, #24
 8007e60:	46bd      	mov	sp, r7
 8007e62:	bd80      	pop	{r7, pc}
 8007e64:	00010008 	.word	0x00010008
 8007e68:	00010002 	.word	0x00010002

08007e6c <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8007e6c:	b580      	push	{r7, lr}
 8007e6e:	b088      	sub	sp, #32
 8007e70:	af02      	add	r7, sp, #8
 8007e72:	60f8      	str	r0, [r7, #12]
 8007e74:	607a      	str	r2, [r7, #4]
 8007e76:	603b      	str	r3, [r7, #0]
 8007e78:	460b      	mov	r3, r1
 8007e7a:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8007e7c:	68fb      	ldr	r3, [r7, #12]
 8007e7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e80:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007e82:	68fb      	ldr	r3, [r7, #12]
 8007e84:	681b      	ldr	r3, [r3, #0]
 8007e86:	681a      	ldr	r2, [r3, #0]
 8007e88:	68fb      	ldr	r3, [r7, #12]
 8007e8a:	681b      	ldr	r3, [r3, #0]
 8007e8c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007e90:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8007e92:	697b      	ldr	r3, [r7, #20]
 8007e94:	2b08      	cmp	r3, #8
 8007e96:	d006      	beq.n	8007ea6 <I2C_MasterRequestRead+0x3a>
 8007e98:	697b      	ldr	r3, [r7, #20]
 8007e9a:	2b01      	cmp	r3, #1
 8007e9c:	d003      	beq.n	8007ea6 <I2C_MasterRequestRead+0x3a>
 8007e9e:	697b      	ldr	r3, [r7, #20]
 8007ea0:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007ea4:	d108      	bne.n	8007eb8 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007ea6:	68fb      	ldr	r3, [r7, #12]
 8007ea8:	681b      	ldr	r3, [r3, #0]
 8007eaa:	681a      	ldr	r2, [r3, #0]
 8007eac:	68fb      	ldr	r3, [r7, #12]
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007eb4:	601a      	str	r2, [r3, #0]
 8007eb6:	e00b      	b.n	8007ed0 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8007eb8:	68fb      	ldr	r3, [r7, #12]
 8007eba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ebc:	2b11      	cmp	r3, #17
 8007ebe:	d107      	bne.n	8007ed0 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007ec0:	68fb      	ldr	r3, [r7, #12]
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	681a      	ldr	r2, [r3, #0]
 8007ec6:	68fb      	ldr	r3, [r7, #12]
 8007ec8:	681b      	ldr	r3, [r3, #0]
 8007eca:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007ece:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007ed0:	683b      	ldr	r3, [r7, #0]
 8007ed2:	9300      	str	r3, [sp, #0]
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	2200      	movs	r2, #0
 8007ed8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007edc:	68f8      	ldr	r0, [r7, #12]
 8007ede:	f000 f929 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007ee2:	4603      	mov	r3, r0
 8007ee4:	2b00      	cmp	r3, #0
 8007ee6:	d00d      	beq.n	8007f04 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007ee8:	68fb      	ldr	r3, [r7, #12]
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	681b      	ldr	r3, [r3, #0]
 8007eee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007ef2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007ef6:	d103      	bne.n	8007f00 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007ef8:	68fb      	ldr	r3, [r7, #12]
 8007efa:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007efe:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8007f00:	2303      	movs	r3, #3
 8007f02:	e079      	b.n	8007ff8 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8007f04:	68fb      	ldr	r3, [r7, #12]
 8007f06:	691b      	ldr	r3, [r3, #16]
 8007f08:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007f0c:	d108      	bne.n	8007f20 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8007f0e:	897b      	ldrh	r3, [r7, #10]
 8007f10:	b2db      	uxtb	r3, r3
 8007f12:	f043 0301 	orr.w	r3, r3, #1
 8007f16:	b2da      	uxtb	r2, r3
 8007f18:	68fb      	ldr	r3, [r7, #12]
 8007f1a:	681b      	ldr	r3, [r3, #0]
 8007f1c:	611a      	str	r2, [r3, #16]
 8007f1e:	e05f      	b.n	8007fe0 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8007f20:	897b      	ldrh	r3, [r7, #10]
 8007f22:	11db      	asrs	r3, r3, #7
 8007f24:	b2db      	uxtb	r3, r3
 8007f26:	f003 0306 	and.w	r3, r3, #6
 8007f2a:	b2db      	uxtb	r3, r3
 8007f2c:	f063 030f 	orn	r3, r3, #15
 8007f30:	b2da      	uxtb	r2, r3
 8007f32:	68fb      	ldr	r3, [r7, #12]
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8007f38:	683b      	ldr	r3, [r7, #0]
 8007f3a:	687a      	ldr	r2, [r7, #4]
 8007f3c:	4930      	ldr	r1, [pc, #192]	; (8008000 <I2C_MasterRequestRead+0x194>)
 8007f3e:	68f8      	ldr	r0, [r7, #12]
 8007f40:	f000 f94f 	bl	80081e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007f44:	4603      	mov	r3, r0
 8007f46:	2b00      	cmp	r3, #0
 8007f48:	d001      	beq.n	8007f4e <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8007f4a:	2301      	movs	r3, #1
 8007f4c:	e054      	b.n	8007ff8 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8007f4e:	897b      	ldrh	r3, [r7, #10]
 8007f50:	b2da      	uxtb	r2, r3
 8007f52:	68fb      	ldr	r3, [r7, #12]
 8007f54:	681b      	ldr	r3, [r3, #0]
 8007f56:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007f58:	683b      	ldr	r3, [r7, #0]
 8007f5a:	687a      	ldr	r2, [r7, #4]
 8007f5c:	4929      	ldr	r1, [pc, #164]	; (8008004 <I2C_MasterRequestRead+0x198>)
 8007f5e:	68f8      	ldr	r0, [r7, #12]
 8007f60:	f000 f93f 	bl	80081e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007f64:	4603      	mov	r3, r0
 8007f66:	2b00      	cmp	r3, #0
 8007f68:	d001      	beq.n	8007f6e <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8007f6a:	2301      	movs	r3, #1
 8007f6c:	e044      	b.n	8007ff8 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007f6e:	2300      	movs	r3, #0
 8007f70:	613b      	str	r3, [r7, #16]
 8007f72:	68fb      	ldr	r3, [r7, #12]
 8007f74:	681b      	ldr	r3, [r3, #0]
 8007f76:	695b      	ldr	r3, [r3, #20]
 8007f78:	613b      	str	r3, [r7, #16]
 8007f7a:	68fb      	ldr	r3, [r7, #12]
 8007f7c:	681b      	ldr	r3, [r3, #0]
 8007f7e:	699b      	ldr	r3, [r3, #24]
 8007f80:	613b      	str	r3, [r7, #16]
 8007f82:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f84:	68fb      	ldr	r3, [r7, #12]
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	681a      	ldr	r2, [r3, #0]
 8007f8a:	68fb      	ldr	r3, [r7, #12]
 8007f8c:	681b      	ldr	r3, [r3, #0]
 8007f8e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007f92:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007f94:	683b      	ldr	r3, [r7, #0]
 8007f96:	9300      	str	r3, [sp, #0]
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	2200      	movs	r2, #0
 8007f9c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007fa0:	68f8      	ldr	r0, [r7, #12]
 8007fa2:	f000 f8c7 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8007fa6:	4603      	mov	r3, r0
 8007fa8:	2b00      	cmp	r3, #0
 8007faa:	d00d      	beq.n	8007fc8 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007fac:	68fb      	ldr	r3, [r7, #12]
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	681b      	ldr	r3, [r3, #0]
 8007fb2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007fb6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007fba:	d103      	bne.n	8007fc4 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007fbc:	68fb      	ldr	r3, [r7, #12]
 8007fbe:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007fc2:	641a      	str	r2, [r3, #64]	; 0x40
      }
      return HAL_TIMEOUT;
 8007fc4:	2303      	movs	r3, #3
 8007fc6:	e017      	b.n	8007ff8 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8007fc8:	897b      	ldrh	r3, [r7, #10]
 8007fca:	11db      	asrs	r3, r3, #7
 8007fcc:	b2db      	uxtb	r3, r3
 8007fce:	f003 0306 	and.w	r3, r3, #6
 8007fd2:	b2db      	uxtb	r3, r3
 8007fd4:	f063 030e 	orn	r3, r3, #14
 8007fd8:	b2da      	uxtb	r2, r3
 8007fda:	68fb      	ldr	r3, [r7, #12]
 8007fdc:	681b      	ldr	r3, [r3, #0]
 8007fde:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007fe0:	683b      	ldr	r3, [r7, #0]
 8007fe2:	687a      	ldr	r2, [r7, #4]
 8007fe4:	4907      	ldr	r1, [pc, #28]	; (8008004 <I2C_MasterRequestRead+0x198>)
 8007fe6:	68f8      	ldr	r0, [r7, #12]
 8007fe8:	f000 f8fb 	bl	80081e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007fec:	4603      	mov	r3, r0
 8007fee:	2b00      	cmp	r3, #0
 8007ff0:	d001      	beq.n	8007ff6 <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8007ff2:	2301      	movs	r3, #1
 8007ff4:	e000      	b.n	8007ff8 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8007ff6:	2300      	movs	r3, #0
}
 8007ff8:	4618      	mov	r0, r3
 8007ffa:	3718      	adds	r7, #24
 8007ffc:	46bd      	mov	sp, r7
 8007ffe:	bd80      	pop	{r7, pc}
 8008000:	00010008 	.word	0x00010008
 8008004:	00010002 	.word	0x00010002

08008008 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8008008:	b580      	push	{r7, lr}
 800800a:	b088      	sub	sp, #32
 800800c:	af02      	add	r7, sp, #8
 800800e:	60f8      	str	r0, [r7, #12]
 8008010:	4608      	mov	r0, r1
 8008012:	4611      	mov	r1, r2
 8008014:	461a      	mov	r2, r3
 8008016:	4603      	mov	r3, r0
 8008018:	817b      	strh	r3, [r7, #10]
 800801a:	460b      	mov	r3, r1
 800801c:	813b      	strh	r3, [r7, #8]
 800801e:	4613      	mov	r3, r2
 8008020:	80fb      	strh	r3, [r7, #6]
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008022:	68fb      	ldr	r3, [r7, #12]
 8008024:	681b      	ldr	r3, [r3, #0]
 8008026:	681a      	ldr	r2, [r3, #0]
 8008028:	68fb      	ldr	r3, [r7, #12]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8008030:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008032:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008034:	9300      	str	r3, [sp, #0]
 8008036:	6a3b      	ldr	r3, [r7, #32]
 8008038:	2200      	movs	r2, #0
 800803a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800803e:	68f8      	ldr	r0, [r7, #12]
 8008040:	f000 f878 	bl	8008134 <I2C_WaitOnFlagUntilTimeout>
 8008044:	4603      	mov	r3, r0
 8008046:	2b00      	cmp	r3, #0
 8008048:	d00d      	beq.n	8008066 <I2C_RequestMemoryWrite+0x5e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800804a:	68fb      	ldr	r3, [r7, #12]
 800804c:	681b      	ldr	r3, [r3, #0]
 800804e:	681b      	ldr	r3, [r3, #0]
 8008050:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008054:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008058:	d103      	bne.n	8008062 <I2C_RequestMemoryWrite+0x5a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800805a:	68fb      	ldr	r3, [r7, #12]
 800805c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8008060:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8008062:	2303      	movs	r3, #3
 8008064:	e05f      	b.n	8008126 <I2C_RequestMemoryWrite+0x11e>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008066:	897b      	ldrh	r3, [r7, #10]
 8008068:	b2db      	uxtb	r3, r3
 800806a:	461a      	mov	r2, r3
 800806c:	68fb      	ldr	r3, [r7, #12]
 800806e:	681b      	ldr	r3, [r3, #0]
 8008070:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8008074:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8008076:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008078:	6a3a      	ldr	r2, [r7, #32]
 800807a:	492d      	ldr	r1, [pc, #180]	; (8008130 <I2C_RequestMemoryWrite+0x128>)
 800807c:	68f8      	ldr	r0, [r7, #12]
 800807e:	f000 f8b0 	bl	80081e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8008082:	4603      	mov	r3, r0
 8008084:	2b00      	cmp	r3, #0
 8008086:	d001      	beq.n	800808c <I2C_RequestMemoryWrite+0x84>
  {
    return HAL_ERROR;
 8008088:	2301      	movs	r3, #1
 800808a:	e04c      	b.n	8008126 <I2C_RequestMemoryWrite+0x11e>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800808c:	2300      	movs	r3, #0
 800808e:	617b      	str	r3, [r7, #20]
 8008090:	68fb      	ldr	r3, [r7, #12]
 8008092:	681b      	ldr	r3, [r3, #0]
 8008094:	695b      	ldr	r3, [r3, #20]
 8008096:	617b      	str	r3, [r7, #20]
 8008098:	68fb      	ldr	r3, [r7, #12]
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	699b      	ldr	r3, [r3, #24]
 800809e:	617b      	str	r3, [r7, #20]
 80080a0:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80080a2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80080a4:	6a39      	ldr	r1, [r7, #32]
 80080a6:	68f8      	ldr	r0, [r7, #12]
 80080a8:	f000 f91a 	bl	80082e0 <I2C_WaitOnTXEFlagUntilTimeout>
 80080ac:	4603      	mov	r3, r0
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	d00d      	beq.n	80080ce <I2C_RequestMemoryWrite+0xc6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80080b2:	68fb      	ldr	r3, [r7, #12]
 80080b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80080b6:	2b04      	cmp	r3, #4
 80080b8:	d107      	bne.n	80080ca <I2C_RequestMemoryWrite+0xc2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80080ba:	68fb      	ldr	r3, [r7, #12]
 80080bc:	681b      	ldr	r3, [r3, #0]
 80080be:	681a      	ldr	r2, [r3, #0]
 80080c0:	68fb      	ldr	r3, [r7, #12]
 80080c2:	681b      	ldr	r3, [r3, #0]
 80080c4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80080c8:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 80080ca:	2301      	movs	r3, #1
 80080cc:	e02b      	b.n	8008126 <I2C_RequestMemoryWrite+0x11e>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80080ce:	88fb      	ldrh	r3, [r7, #6]
 80080d0:	2b01      	cmp	r3, #1
 80080d2:	d105      	bne.n	80080e0 <I2C_RequestMemoryWrite+0xd8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80080d4:	893b      	ldrh	r3, [r7, #8]
 80080d6:	b2da      	uxtb	r2, r3
 80080d8:	68fb      	ldr	r3, [r7, #12]
 80080da:	681b      	ldr	r3, [r3, #0]
 80080dc:	611a      	str	r2, [r3, #16]
 80080de:	e021      	b.n	8008124 <I2C_RequestMemoryWrite+0x11c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80080e0:	893b      	ldrh	r3, [r7, #8]
 80080e2:	0a1b      	lsrs	r3, r3, #8
 80080e4:	b29b      	uxth	r3, r3
 80080e6:	b2da      	uxtb	r2, r3
 80080e8:	68fb      	ldr	r3, [r7, #12]
 80080ea:	681b      	ldr	r3, [r3, #0]
 80080ec:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80080ee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80080f0:	6a39      	ldr	r1, [r7, #32]
 80080f2:	68f8      	ldr	r0, [r7, #12]
 80080f4:	f000 f8f4 	bl	80082e0 <I2C_WaitOnTXEFlagUntilTimeout>
 80080f8:	4603      	mov	r3, r0
 80080fa:	2b00      	cmp	r3, #0
 80080fc:	d00d      	beq.n	800811a <I2C_RequestMemoryWrite+0x112>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80080fe:	68fb      	ldr	r3, [r7, #12]
 8008100:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008102:	2b04      	cmp	r3, #4
 8008104:	d107      	bne.n	8008116 <I2C_RequestMemoryWrite+0x10e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008106:	68fb      	ldr	r3, [r7, #12]
 8008108:	681b      	ldr	r3, [r3, #0]
 800810a:	681a      	ldr	r2, [r3, #0]
 800810c:	68fb      	ldr	r3, [r7, #12]
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008114:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8008116:	2301      	movs	r3, #1
 8008118:	e005      	b.n	8008126 <I2C_RequestMemoryWrite+0x11e>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800811a:	893b      	ldrh	r3, [r7, #8]
 800811c:	b2da      	uxtb	r2, r3
 800811e:	68fb      	ldr	r3, [r7, #12]
 8008120:	681b      	ldr	r3, [r3, #0]
 8008122:	611a      	str	r2, [r3, #16]
  }

  return HAL_OK;
 8008124:	2300      	movs	r3, #0
}
 8008126:	4618      	mov	r0, r3
 8008128:	3718      	adds	r7, #24
 800812a:	46bd      	mov	sp, r7
 800812c:	bd80      	pop	{r7, pc}
 800812e:	bf00      	nop
 8008130:	00010002 	.word	0x00010002

08008134 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8008134:	b580      	push	{r7, lr}
 8008136:	b084      	sub	sp, #16
 8008138:	af00      	add	r7, sp, #0
 800813a:	60f8      	str	r0, [r7, #12]
 800813c:	60b9      	str	r1, [r7, #8]
 800813e:	603b      	str	r3, [r7, #0]
 8008140:	4613      	mov	r3, r2
 8008142:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008144:	e025      	b.n	8008192 <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8008146:	683b      	ldr	r3, [r7, #0]
 8008148:	f1b3 3fff 	cmp.w	r3, #4294967295
 800814c:	d021      	beq.n	8008192 <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800814e:	f7fe fc93 	bl	8006a78 <HAL_GetTick>
 8008152:	4602      	mov	r2, r0
 8008154:	69bb      	ldr	r3, [r7, #24]
 8008156:	1ad3      	subs	r3, r2, r3
 8008158:	683a      	ldr	r2, [r7, #0]
 800815a:	429a      	cmp	r2, r3
 800815c:	d302      	bcc.n	8008164 <I2C_WaitOnFlagUntilTimeout+0x30>
 800815e:	683b      	ldr	r3, [r7, #0]
 8008160:	2b00      	cmp	r3, #0
 8008162:	d116      	bne.n	8008192 <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008164:	68fb      	ldr	r3, [r7, #12]
 8008166:	2200      	movs	r2, #0
 8008168:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800816a:	68fb      	ldr	r3, [r7, #12]
 800816c:	2220      	movs	r2, #32
 800816e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008172:	68fb      	ldr	r3, [r7, #12]
 8008174:	2200      	movs	r2, #0
 8008176:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800817a:	68fb      	ldr	r3, [r7, #12]
 800817c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800817e:	f043 0220 	orr.w	r2, r3, #32
 8008182:	68fb      	ldr	r3, [r7, #12]
 8008184:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8008186:	68fb      	ldr	r3, [r7, #12]
 8008188:	2200      	movs	r2, #0
 800818a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800818e:	2301      	movs	r3, #1
 8008190:	e023      	b.n	80081da <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008192:	68bb      	ldr	r3, [r7, #8]
 8008194:	0c1b      	lsrs	r3, r3, #16
 8008196:	b2db      	uxtb	r3, r3
 8008198:	2b01      	cmp	r3, #1
 800819a:	d10d      	bne.n	80081b8 <I2C_WaitOnFlagUntilTimeout+0x84>
 800819c:	68fb      	ldr	r3, [r7, #12]
 800819e:	681b      	ldr	r3, [r3, #0]
 80081a0:	695b      	ldr	r3, [r3, #20]
 80081a2:	43da      	mvns	r2, r3
 80081a4:	68bb      	ldr	r3, [r7, #8]
 80081a6:	4013      	ands	r3, r2
 80081a8:	b29b      	uxth	r3, r3
 80081aa:	2b00      	cmp	r3, #0
 80081ac:	bf0c      	ite	eq
 80081ae:	2301      	moveq	r3, #1
 80081b0:	2300      	movne	r3, #0
 80081b2:	b2db      	uxtb	r3, r3
 80081b4:	461a      	mov	r2, r3
 80081b6:	e00c      	b.n	80081d2 <I2C_WaitOnFlagUntilTimeout+0x9e>
 80081b8:	68fb      	ldr	r3, [r7, #12]
 80081ba:	681b      	ldr	r3, [r3, #0]
 80081bc:	699b      	ldr	r3, [r3, #24]
 80081be:	43da      	mvns	r2, r3
 80081c0:	68bb      	ldr	r3, [r7, #8]
 80081c2:	4013      	ands	r3, r2
 80081c4:	b29b      	uxth	r3, r3
 80081c6:	2b00      	cmp	r3, #0
 80081c8:	bf0c      	ite	eq
 80081ca:	2301      	moveq	r3, #1
 80081cc:	2300      	movne	r3, #0
 80081ce:	b2db      	uxtb	r3, r3
 80081d0:	461a      	mov	r2, r3
 80081d2:	79fb      	ldrb	r3, [r7, #7]
 80081d4:	429a      	cmp	r2, r3
 80081d6:	d0b6      	beq.n	8008146 <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80081d8:	2300      	movs	r3, #0
}
 80081da:	4618      	mov	r0, r3
 80081dc:	3710      	adds	r7, #16
 80081de:	46bd      	mov	sp, r7
 80081e0:	bd80      	pop	{r7, pc}

080081e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 80081e2:	b580      	push	{r7, lr}
 80081e4:	b084      	sub	sp, #16
 80081e6:	af00      	add	r7, sp, #0
 80081e8:	60f8      	str	r0, [r7, #12]
 80081ea:	60b9      	str	r1, [r7, #8]
 80081ec:	607a      	str	r2, [r7, #4]
 80081ee:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80081f0:	e051      	b.n	8008296 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80081f2:	68fb      	ldr	r3, [r7, #12]
 80081f4:	681b      	ldr	r3, [r3, #0]
 80081f6:	695b      	ldr	r3, [r3, #20]
 80081f8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80081fc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008200:	d123      	bne.n	800824a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008202:	68fb      	ldr	r3, [r7, #12]
 8008204:	681b      	ldr	r3, [r3, #0]
 8008206:	681a      	ldr	r2, [r3, #0]
 8008208:	68fb      	ldr	r3, [r7, #12]
 800820a:	681b      	ldr	r3, [r3, #0]
 800820c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8008210:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008212:	68fb      	ldr	r3, [r7, #12]
 8008214:	681b      	ldr	r3, [r3, #0]
 8008216:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800821a:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800821c:	68fb      	ldr	r3, [r7, #12]
 800821e:	2200      	movs	r2, #0
 8008220:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008222:	68fb      	ldr	r3, [r7, #12]
 8008224:	2220      	movs	r2, #32
 8008226:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800822a:	68fb      	ldr	r3, [r7, #12]
 800822c:	2200      	movs	r2, #0
 800822e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008232:	68fb      	ldr	r3, [r7, #12]
 8008234:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008236:	f043 0204 	orr.w	r2, r3, #4
 800823a:	68fb      	ldr	r3, [r7, #12]
 800823c:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800823e:	68fb      	ldr	r3, [r7, #12]
 8008240:	2200      	movs	r2, #0
 8008242:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8008246:	2301      	movs	r3, #1
 8008248:	e046      	b.n	80082d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800824a:	687b      	ldr	r3, [r7, #4]
 800824c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008250:	d021      	beq.n	8008296 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008252:	f7fe fc11 	bl	8006a78 <HAL_GetTick>
 8008256:	4602      	mov	r2, r0
 8008258:	683b      	ldr	r3, [r7, #0]
 800825a:	1ad3      	subs	r3, r2, r3
 800825c:	687a      	ldr	r2, [r7, #4]
 800825e:	429a      	cmp	r2, r3
 8008260:	d302      	bcc.n	8008268 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	2b00      	cmp	r3, #0
 8008266:	d116      	bne.n	8008296 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008268:	68fb      	ldr	r3, [r7, #12]
 800826a:	2200      	movs	r2, #0
 800826c:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800826e:	68fb      	ldr	r3, [r7, #12]
 8008270:	2220      	movs	r2, #32
 8008272:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008276:	68fb      	ldr	r3, [r7, #12]
 8008278:	2200      	movs	r2, #0
 800827a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800827e:	68fb      	ldr	r3, [r7, #12]
 8008280:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008282:	f043 0220 	orr.w	r2, r3, #32
 8008286:	68fb      	ldr	r3, [r7, #12]
 8008288:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800828a:	68fb      	ldr	r3, [r7, #12]
 800828c:	2200      	movs	r2, #0
 800828e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8008292:	2301      	movs	r3, #1
 8008294:	e020      	b.n	80082d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8008296:	68bb      	ldr	r3, [r7, #8]
 8008298:	0c1b      	lsrs	r3, r3, #16
 800829a:	b2db      	uxtb	r3, r3
 800829c:	2b01      	cmp	r3, #1
 800829e:	d10c      	bne.n	80082ba <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 80082a0:	68fb      	ldr	r3, [r7, #12]
 80082a2:	681b      	ldr	r3, [r3, #0]
 80082a4:	695b      	ldr	r3, [r3, #20]
 80082a6:	43da      	mvns	r2, r3
 80082a8:	68bb      	ldr	r3, [r7, #8]
 80082aa:	4013      	ands	r3, r2
 80082ac:	b29b      	uxth	r3, r3
 80082ae:	2b00      	cmp	r3, #0
 80082b0:	bf14      	ite	ne
 80082b2:	2301      	movne	r3, #1
 80082b4:	2300      	moveq	r3, #0
 80082b6:	b2db      	uxtb	r3, r3
 80082b8:	e00b      	b.n	80082d2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 80082ba:	68fb      	ldr	r3, [r7, #12]
 80082bc:	681b      	ldr	r3, [r3, #0]
 80082be:	699b      	ldr	r3, [r3, #24]
 80082c0:	43da      	mvns	r2, r3
 80082c2:	68bb      	ldr	r3, [r7, #8]
 80082c4:	4013      	ands	r3, r2
 80082c6:	b29b      	uxth	r3, r3
 80082c8:	2b00      	cmp	r3, #0
 80082ca:	bf14      	ite	ne
 80082cc:	2301      	movne	r3, #1
 80082ce:	2300      	moveq	r3, #0
 80082d0:	b2db      	uxtb	r3, r3
 80082d2:	2b00      	cmp	r3, #0
 80082d4:	d18d      	bne.n	80081f2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 80082d6:	2300      	movs	r3, #0
}
 80082d8:	4618      	mov	r0, r3
 80082da:	3710      	adds	r7, #16
 80082dc:	46bd      	mov	sp, r7
 80082de:	bd80      	pop	{r7, pc}

080082e0 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80082e0:	b580      	push	{r7, lr}
 80082e2:	b084      	sub	sp, #16
 80082e4:	af00      	add	r7, sp, #0
 80082e6:	60f8      	str	r0, [r7, #12]
 80082e8:	60b9      	str	r1, [r7, #8]
 80082ea:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80082ec:	e02d      	b.n	800834a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80082ee:	68f8      	ldr	r0, [r7, #12]
 80082f0:	f000 f8ce 	bl	8008490 <I2C_IsAcknowledgeFailed>
 80082f4:	4603      	mov	r3, r0
 80082f6:	2b00      	cmp	r3, #0
 80082f8:	d001      	beq.n	80082fe <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80082fa:	2301      	movs	r3, #1
 80082fc:	e02d      	b.n	800835a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80082fe:	68bb      	ldr	r3, [r7, #8]
 8008300:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008304:	d021      	beq.n	800834a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008306:	f7fe fbb7 	bl	8006a78 <HAL_GetTick>
 800830a:	4602      	mov	r2, r0
 800830c:	687b      	ldr	r3, [r7, #4]
 800830e:	1ad3      	subs	r3, r2, r3
 8008310:	68ba      	ldr	r2, [r7, #8]
 8008312:	429a      	cmp	r2, r3
 8008314:	d302      	bcc.n	800831c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8008316:	68bb      	ldr	r3, [r7, #8]
 8008318:	2b00      	cmp	r3, #0
 800831a:	d116      	bne.n	800834a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 800831c:	68fb      	ldr	r3, [r7, #12]
 800831e:	2200      	movs	r2, #0
 8008320:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008322:	68fb      	ldr	r3, [r7, #12]
 8008324:	2220      	movs	r2, #32
 8008326:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800832a:	68fb      	ldr	r3, [r7, #12]
 800832c:	2200      	movs	r2, #0
 800832e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008332:	68fb      	ldr	r3, [r7, #12]
 8008334:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008336:	f043 0220 	orr.w	r2, r3, #32
 800833a:	68fb      	ldr	r3, [r7, #12]
 800833c:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800833e:	68fb      	ldr	r3, [r7, #12]
 8008340:	2200      	movs	r2, #0
 8008342:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8008346:	2301      	movs	r3, #1
 8008348:	e007      	b.n	800835a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800834a:	68fb      	ldr	r3, [r7, #12]
 800834c:	681b      	ldr	r3, [r3, #0]
 800834e:	695b      	ldr	r3, [r3, #20]
 8008350:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008354:	2b80      	cmp	r3, #128	; 0x80
 8008356:	d1ca      	bne.n	80082ee <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8008358:	2300      	movs	r3, #0
}
 800835a:	4618      	mov	r0, r3
 800835c:	3710      	adds	r7, #16
 800835e:	46bd      	mov	sp, r7
 8008360:	bd80      	pop	{r7, pc}

08008362 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8008362:	b580      	push	{r7, lr}
 8008364:	b084      	sub	sp, #16
 8008366:	af00      	add	r7, sp, #0
 8008368:	60f8      	str	r0, [r7, #12]
 800836a:	60b9      	str	r1, [r7, #8]
 800836c:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800836e:	e02d      	b.n	80083cc <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8008370:	68f8      	ldr	r0, [r7, #12]
 8008372:	f000 f88d 	bl	8008490 <I2C_IsAcknowledgeFailed>
 8008376:	4603      	mov	r3, r0
 8008378:	2b00      	cmp	r3, #0
 800837a:	d001      	beq.n	8008380 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800837c:	2301      	movs	r3, #1
 800837e:	e02d      	b.n	80083dc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8008380:	68bb      	ldr	r3, [r7, #8]
 8008382:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008386:	d021      	beq.n	80083cc <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008388:	f7fe fb76 	bl	8006a78 <HAL_GetTick>
 800838c:	4602      	mov	r2, r0
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	1ad3      	subs	r3, r2, r3
 8008392:	68ba      	ldr	r2, [r7, #8]
 8008394:	429a      	cmp	r2, r3
 8008396:	d302      	bcc.n	800839e <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8008398:	68bb      	ldr	r3, [r7, #8]
 800839a:	2b00      	cmp	r3, #0
 800839c:	d116      	bne.n	80083cc <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 800839e:	68fb      	ldr	r3, [r7, #12]
 80083a0:	2200      	movs	r2, #0
 80083a2:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80083a4:	68fb      	ldr	r3, [r7, #12]
 80083a6:	2220      	movs	r2, #32
 80083a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80083ac:	68fb      	ldr	r3, [r7, #12]
 80083ae:	2200      	movs	r2, #0
 80083b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80083b4:	68fb      	ldr	r3, [r7, #12]
 80083b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80083b8:	f043 0220 	orr.w	r2, r3, #32
 80083bc:	68fb      	ldr	r3, [r7, #12]
 80083be:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80083c0:	68fb      	ldr	r3, [r7, #12]
 80083c2:	2200      	movs	r2, #0
 80083c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80083c8:	2301      	movs	r3, #1
 80083ca:	e007      	b.n	80083dc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80083cc:	68fb      	ldr	r3, [r7, #12]
 80083ce:	681b      	ldr	r3, [r3, #0]
 80083d0:	695b      	ldr	r3, [r3, #20]
 80083d2:	f003 0304 	and.w	r3, r3, #4
 80083d6:	2b04      	cmp	r3, #4
 80083d8:	d1ca      	bne.n	8008370 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80083da:	2300      	movs	r3, #0
}
 80083dc:	4618      	mov	r0, r3
 80083de:	3710      	adds	r7, #16
 80083e0:	46bd      	mov	sp, r7
 80083e2:	bd80      	pop	{r7, pc}

080083e4 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80083e4:	b580      	push	{r7, lr}
 80083e6:	b084      	sub	sp, #16
 80083e8:	af00      	add	r7, sp, #0
 80083ea:	60f8      	str	r0, [r7, #12]
 80083ec:	60b9      	str	r1, [r7, #8]
 80083ee:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80083f0:	e042      	b.n	8008478 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80083f2:	68fb      	ldr	r3, [r7, #12]
 80083f4:	681b      	ldr	r3, [r3, #0]
 80083f6:	695b      	ldr	r3, [r3, #20]
 80083f8:	f003 0310 	and.w	r3, r3, #16
 80083fc:	2b10      	cmp	r3, #16
 80083fe:	d119      	bne.n	8008434 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008400:	68fb      	ldr	r3, [r7, #12]
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	f06f 0210 	mvn.w	r2, #16
 8008408:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800840a:	68fb      	ldr	r3, [r7, #12]
 800840c:	2200      	movs	r2, #0
 800840e:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008410:	68fb      	ldr	r3, [r7, #12]
 8008412:	2220      	movs	r2, #32
 8008414:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008418:	68fb      	ldr	r3, [r7, #12]
 800841a:	2200      	movs	r2, #0
 800841c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8008420:	68fb      	ldr	r3, [r7, #12]
 8008422:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008424:	68fb      	ldr	r3, [r7, #12]
 8008426:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8008428:	68fb      	ldr	r3, [r7, #12]
 800842a:	2200      	movs	r2, #0
 800842c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8008430:	2301      	movs	r3, #1
 8008432:	e029      	b.n	8008488 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008434:	f7fe fb20 	bl	8006a78 <HAL_GetTick>
 8008438:	4602      	mov	r2, r0
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	1ad3      	subs	r3, r2, r3
 800843e:	68ba      	ldr	r2, [r7, #8]
 8008440:	429a      	cmp	r2, r3
 8008442:	d302      	bcc.n	800844a <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8008444:	68bb      	ldr	r3, [r7, #8]
 8008446:	2b00      	cmp	r3, #0
 8008448:	d116      	bne.n	8008478 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
    {
      hi2c->PreviousState       = I2C_STATE_NONE;
 800844a:	68fb      	ldr	r3, [r7, #12]
 800844c:	2200      	movs	r2, #0
 800844e:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008450:	68fb      	ldr	r3, [r7, #12]
 8008452:	2220      	movs	r2, #32
 8008454:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008458:	68fb      	ldr	r3, [r7, #12]
 800845a:	2200      	movs	r2, #0
 800845c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008460:	68fb      	ldr	r3, [r7, #12]
 8008462:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008464:	f043 0220 	orr.w	r2, r3, #32
 8008468:	68fb      	ldr	r3, [r7, #12]
 800846a:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800846c:	68fb      	ldr	r3, [r7, #12]
 800846e:	2200      	movs	r2, #0
 8008470:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8008474:	2301      	movs	r3, #1
 8008476:	e007      	b.n	8008488 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8008478:	68fb      	ldr	r3, [r7, #12]
 800847a:	681b      	ldr	r3, [r3, #0]
 800847c:	695b      	ldr	r3, [r3, #20]
 800847e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008482:	2b40      	cmp	r3, #64	; 0x40
 8008484:	d1b5      	bne.n	80083f2 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 8008486:	2300      	movs	r3, #0
}
 8008488:	4618      	mov	r0, r3
 800848a:	3710      	adds	r7, #16
 800848c:	46bd      	mov	sp, r7
 800848e:	bd80      	pop	{r7, pc}

08008490 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8008490:	b480      	push	{r7}
 8008492:	b083      	sub	sp, #12
 8008494:	af00      	add	r7, sp, #0
 8008496:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	681b      	ldr	r3, [r3, #0]
 800849c:	695b      	ldr	r3, [r3, #20]
 800849e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80084a2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80084a6:	d11b      	bne.n	80084e0 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	681b      	ldr	r3, [r3, #0]
 80084ac:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80084b0:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 80084b2:	687b      	ldr	r3, [r7, #4]
 80084b4:	2200      	movs	r2, #0
 80084b6:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80084b8:	687b      	ldr	r3, [r7, #4]
 80084ba:	2220      	movs	r2, #32
 80084bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	2200      	movs	r2, #0
 80084c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80084c8:	687b      	ldr	r3, [r7, #4]
 80084ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80084cc:	f043 0204 	orr.w	r2, r3, #4
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80084d4:	687b      	ldr	r3, [r7, #4]
 80084d6:	2200      	movs	r2, #0
 80084d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 80084dc:	2301      	movs	r3, #1
 80084de:	e000      	b.n	80084e2 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 80084e0:	2300      	movs	r3, #0
}
 80084e2:	4618      	mov	r0, r3
 80084e4:	370c      	adds	r7, #12
 80084e6:	46bd      	mov	sp, r7
 80084e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ec:	4770      	bx	lr
	...

080084f0 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80084f0:	b580      	push	{r7, lr}
 80084f2:	b086      	sub	sp, #24
 80084f4:	af00      	add	r7, sp, #0
 80084f6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80084f8:	687b      	ldr	r3, [r7, #4]
 80084fa:	2b00      	cmp	r3, #0
 80084fc:	d101      	bne.n	8008502 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80084fe:	2301      	movs	r3, #1
 8008500:	e25b      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	f003 0301 	and.w	r3, r3, #1
 800850a:	2b00      	cmp	r3, #0
 800850c:	d075      	beq.n	80085fa <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800850e:	4ba3      	ldr	r3, [pc, #652]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008510:	689b      	ldr	r3, [r3, #8]
 8008512:	f003 030c 	and.w	r3, r3, #12
 8008516:	2b04      	cmp	r3, #4
 8008518:	d00c      	beq.n	8008534 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800851a:	4ba0      	ldr	r3, [pc, #640]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800851c:	689b      	ldr	r3, [r3, #8]
 800851e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8008522:	2b08      	cmp	r3, #8
 8008524:	d112      	bne.n	800854c <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008526:	4b9d      	ldr	r3, [pc, #628]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008528:	685b      	ldr	r3, [r3, #4]
 800852a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800852e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008532:	d10b      	bne.n	800854c <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8008534:	4b99      	ldr	r3, [pc, #612]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008536:	681b      	ldr	r3, [r3, #0]
 8008538:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800853c:	2b00      	cmp	r3, #0
 800853e:	d05b      	beq.n	80085f8 <HAL_RCC_OscConfig+0x108>
 8008540:	687b      	ldr	r3, [r7, #4]
 8008542:	685b      	ldr	r3, [r3, #4]
 8008544:	2b00      	cmp	r3, #0
 8008546:	d157      	bne.n	80085f8 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8008548:	2301      	movs	r3, #1
 800854a:	e236      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800854c:	687b      	ldr	r3, [r7, #4]
 800854e:	685b      	ldr	r3, [r3, #4]
 8008550:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008554:	d106      	bne.n	8008564 <HAL_RCC_OscConfig+0x74>
 8008556:	4b91      	ldr	r3, [pc, #580]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008558:	681b      	ldr	r3, [r3, #0]
 800855a:	4a90      	ldr	r2, [pc, #576]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800855c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008560:	6013      	str	r3, [r2, #0]
 8008562:	e01d      	b.n	80085a0 <HAL_RCC_OscConfig+0xb0>
 8008564:	687b      	ldr	r3, [r7, #4]
 8008566:	685b      	ldr	r3, [r3, #4]
 8008568:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800856c:	d10c      	bne.n	8008588 <HAL_RCC_OscConfig+0x98>
 800856e:	4b8b      	ldr	r3, [pc, #556]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008570:	681b      	ldr	r3, [r3, #0]
 8008572:	4a8a      	ldr	r2, [pc, #552]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008574:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008578:	6013      	str	r3, [r2, #0]
 800857a:	4b88      	ldr	r3, [pc, #544]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800857c:	681b      	ldr	r3, [r3, #0]
 800857e:	4a87      	ldr	r2, [pc, #540]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008580:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008584:	6013      	str	r3, [r2, #0]
 8008586:	e00b      	b.n	80085a0 <HAL_RCC_OscConfig+0xb0>
 8008588:	4b84      	ldr	r3, [pc, #528]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800858a:	681b      	ldr	r3, [r3, #0]
 800858c:	4a83      	ldr	r2, [pc, #524]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800858e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008592:	6013      	str	r3, [r2, #0]
 8008594:	4b81      	ldr	r3, [pc, #516]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008596:	681b      	ldr	r3, [r3, #0]
 8008598:	4a80      	ldr	r2, [pc, #512]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800859a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800859e:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80085a0:	687b      	ldr	r3, [r7, #4]
 80085a2:	685b      	ldr	r3, [r3, #4]
 80085a4:	2b00      	cmp	r3, #0
 80085a6:	d013      	beq.n	80085d0 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80085a8:	f7fe fa66 	bl	8006a78 <HAL_GetTick>
 80085ac:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80085ae:	e008      	b.n	80085c2 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80085b0:	f7fe fa62 	bl	8006a78 <HAL_GetTick>
 80085b4:	4602      	mov	r2, r0
 80085b6:	693b      	ldr	r3, [r7, #16]
 80085b8:	1ad3      	subs	r3, r2, r3
 80085ba:	2b64      	cmp	r3, #100	; 0x64
 80085bc:	d901      	bls.n	80085c2 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 80085be:	2303      	movs	r3, #3
 80085c0:	e1fb      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80085c2:	4b76      	ldr	r3, [pc, #472]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80085ca:	2b00      	cmp	r3, #0
 80085cc:	d0f0      	beq.n	80085b0 <HAL_RCC_OscConfig+0xc0>
 80085ce:	e014      	b.n	80085fa <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80085d0:	f7fe fa52 	bl	8006a78 <HAL_GetTick>
 80085d4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80085d6:	e008      	b.n	80085ea <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80085d8:	f7fe fa4e 	bl	8006a78 <HAL_GetTick>
 80085dc:	4602      	mov	r2, r0
 80085de:	693b      	ldr	r3, [r7, #16]
 80085e0:	1ad3      	subs	r3, r2, r3
 80085e2:	2b64      	cmp	r3, #100	; 0x64
 80085e4:	d901      	bls.n	80085ea <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80085e6:	2303      	movs	r3, #3
 80085e8:	e1e7      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80085ea:	4b6c      	ldr	r3, [pc, #432]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 80085ec:	681b      	ldr	r3, [r3, #0]
 80085ee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80085f2:	2b00      	cmp	r3, #0
 80085f4:	d1f0      	bne.n	80085d8 <HAL_RCC_OscConfig+0xe8>
 80085f6:	e000      	b.n	80085fa <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80085f8:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80085fa:	687b      	ldr	r3, [r7, #4]
 80085fc:	681b      	ldr	r3, [r3, #0]
 80085fe:	f003 0302 	and.w	r3, r3, #2
 8008602:	2b00      	cmp	r3, #0
 8008604:	d063      	beq.n	80086ce <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8008606:	4b65      	ldr	r3, [pc, #404]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008608:	689b      	ldr	r3, [r3, #8]
 800860a:	f003 030c 	and.w	r3, r3, #12
 800860e:	2b00      	cmp	r3, #0
 8008610:	d00b      	beq.n	800862a <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008612:	4b62      	ldr	r3, [pc, #392]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008614:	689b      	ldr	r3, [r3, #8]
 8008616:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800861a:	2b08      	cmp	r3, #8
 800861c:	d11c      	bne.n	8008658 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800861e:	4b5f      	ldr	r3, [pc, #380]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008620:	685b      	ldr	r3, [r3, #4]
 8008622:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008626:	2b00      	cmp	r3, #0
 8008628:	d116      	bne.n	8008658 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800862a:	4b5c      	ldr	r3, [pc, #368]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800862c:	681b      	ldr	r3, [r3, #0]
 800862e:	f003 0302 	and.w	r3, r3, #2
 8008632:	2b00      	cmp	r3, #0
 8008634:	d005      	beq.n	8008642 <HAL_RCC_OscConfig+0x152>
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	68db      	ldr	r3, [r3, #12]
 800863a:	2b01      	cmp	r3, #1
 800863c:	d001      	beq.n	8008642 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 800863e:	2301      	movs	r3, #1
 8008640:	e1bb      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008642:	4b56      	ldr	r3, [pc, #344]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008644:	681b      	ldr	r3, [r3, #0]
 8008646:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800864a:	687b      	ldr	r3, [r7, #4]
 800864c:	691b      	ldr	r3, [r3, #16]
 800864e:	00db      	lsls	r3, r3, #3
 8008650:	4952      	ldr	r1, [pc, #328]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008652:	4313      	orrs	r3, r2
 8008654:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008656:	e03a      	b.n	80086ce <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8008658:	687b      	ldr	r3, [r7, #4]
 800865a:	68db      	ldr	r3, [r3, #12]
 800865c:	2b00      	cmp	r3, #0
 800865e:	d020      	beq.n	80086a2 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8008660:	4b4f      	ldr	r3, [pc, #316]	; (80087a0 <HAL_RCC_OscConfig+0x2b0>)
 8008662:	2201      	movs	r2, #1
 8008664:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8008666:	f7fe fa07 	bl	8006a78 <HAL_GetTick>
 800866a:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800866c:	e008      	b.n	8008680 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800866e:	f7fe fa03 	bl	8006a78 <HAL_GetTick>
 8008672:	4602      	mov	r2, r0
 8008674:	693b      	ldr	r3, [r7, #16]
 8008676:	1ad3      	subs	r3, r2, r3
 8008678:	2b02      	cmp	r3, #2
 800867a:	d901      	bls.n	8008680 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 800867c:	2303      	movs	r3, #3
 800867e:	e19c      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008680:	4b46      	ldr	r3, [pc, #280]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008682:	681b      	ldr	r3, [r3, #0]
 8008684:	f003 0302 	and.w	r3, r3, #2
 8008688:	2b00      	cmp	r3, #0
 800868a:	d0f0      	beq.n	800866e <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800868c:	4b43      	ldr	r3, [pc, #268]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800868e:	681b      	ldr	r3, [r3, #0]
 8008690:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008694:	687b      	ldr	r3, [r7, #4]
 8008696:	691b      	ldr	r3, [r3, #16]
 8008698:	00db      	lsls	r3, r3, #3
 800869a:	4940      	ldr	r1, [pc, #256]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800869c:	4313      	orrs	r3, r2
 800869e:	600b      	str	r3, [r1, #0]
 80086a0:	e015      	b.n	80086ce <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80086a2:	4b3f      	ldr	r3, [pc, #252]	; (80087a0 <HAL_RCC_OscConfig+0x2b0>)
 80086a4:	2200      	movs	r2, #0
 80086a6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80086a8:	f7fe f9e6 	bl	8006a78 <HAL_GetTick>
 80086ac:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80086ae:	e008      	b.n	80086c2 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80086b0:	f7fe f9e2 	bl	8006a78 <HAL_GetTick>
 80086b4:	4602      	mov	r2, r0
 80086b6:	693b      	ldr	r3, [r7, #16]
 80086b8:	1ad3      	subs	r3, r2, r3
 80086ba:	2b02      	cmp	r3, #2
 80086bc:	d901      	bls.n	80086c2 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 80086be:	2303      	movs	r3, #3
 80086c0:	e17b      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80086c2:	4b36      	ldr	r3, [pc, #216]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 80086c4:	681b      	ldr	r3, [r3, #0]
 80086c6:	f003 0302 	and.w	r3, r3, #2
 80086ca:	2b00      	cmp	r3, #0
 80086cc:	d1f0      	bne.n	80086b0 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80086ce:	687b      	ldr	r3, [r7, #4]
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	f003 0308 	and.w	r3, r3, #8
 80086d6:	2b00      	cmp	r3, #0
 80086d8:	d030      	beq.n	800873c <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80086da:	687b      	ldr	r3, [r7, #4]
 80086dc:	695b      	ldr	r3, [r3, #20]
 80086de:	2b00      	cmp	r3, #0
 80086e0:	d016      	beq.n	8008710 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80086e2:	4b30      	ldr	r3, [pc, #192]	; (80087a4 <HAL_RCC_OscConfig+0x2b4>)
 80086e4:	2201      	movs	r2, #1
 80086e6:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80086e8:	f7fe f9c6 	bl	8006a78 <HAL_GetTick>
 80086ec:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80086ee:	e008      	b.n	8008702 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80086f0:	f7fe f9c2 	bl	8006a78 <HAL_GetTick>
 80086f4:	4602      	mov	r2, r0
 80086f6:	693b      	ldr	r3, [r7, #16]
 80086f8:	1ad3      	subs	r3, r2, r3
 80086fa:	2b02      	cmp	r3, #2
 80086fc:	d901      	bls.n	8008702 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 80086fe:	2303      	movs	r3, #3
 8008700:	e15b      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008702:	4b26      	ldr	r3, [pc, #152]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008704:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008706:	f003 0302 	and.w	r3, r3, #2
 800870a:	2b00      	cmp	r3, #0
 800870c:	d0f0      	beq.n	80086f0 <HAL_RCC_OscConfig+0x200>
 800870e:	e015      	b.n	800873c <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8008710:	4b24      	ldr	r3, [pc, #144]	; (80087a4 <HAL_RCC_OscConfig+0x2b4>)
 8008712:	2200      	movs	r2, #0
 8008714:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8008716:	f7fe f9af 	bl	8006a78 <HAL_GetTick>
 800871a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800871c:	e008      	b.n	8008730 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800871e:	f7fe f9ab 	bl	8006a78 <HAL_GetTick>
 8008722:	4602      	mov	r2, r0
 8008724:	693b      	ldr	r3, [r7, #16]
 8008726:	1ad3      	subs	r3, r2, r3
 8008728:	2b02      	cmp	r3, #2
 800872a:	d901      	bls.n	8008730 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 800872c:	2303      	movs	r3, #3
 800872e:	e144      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008730:	4b1a      	ldr	r3, [pc, #104]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008732:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008734:	f003 0302 	and.w	r3, r3, #2
 8008738:	2b00      	cmp	r3, #0
 800873a:	d1f0      	bne.n	800871e <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800873c:	687b      	ldr	r3, [r7, #4]
 800873e:	681b      	ldr	r3, [r3, #0]
 8008740:	f003 0304 	and.w	r3, r3, #4
 8008744:	2b00      	cmp	r3, #0
 8008746:	f000 80a0 	beq.w	800888a <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 800874a:	2300      	movs	r3, #0
 800874c:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800874e:	4b13      	ldr	r3, [pc, #76]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008750:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008752:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008756:	2b00      	cmp	r3, #0
 8008758:	d10f      	bne.n	800877a <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800875a:	2300      	movs	r3, #0
 800875c:	60bb      	str	r3, [r7, #8]
 800875e:	4b0f      	ldr	r3, [pc, #60]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008760:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008762:	4a0e      	ldr	r2, [pc, #56]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 8008764:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008768:	6413      	str	r3, [r2, #64]	; 0x40
 800876a:	4b0c      	ldr	r3, [pc, #48]	; (800879c <HAL_RCC_OscConfig+0x2ac>)
 800876c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800876e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008772:	60bb      	str	r3, [r7, #8]
 8008774:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8008776:	2301      	movs	r3, #1
 8008778:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800877a:	4b0b      	ldr	r3, [pc, #44]	; (80087a8 <HAL_RCC_OscConfig+0x2b8>)
 800877c:	681b      	ldr	r3, [r3, #0]
 800877e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008782:	2b00      	cmp	r3, #0
 8008784:	d121      	bne.n	80087ca <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008786:	4b08      	ldr	r3, [pc, #32]	; (80087a8 <HAL_RCC_OscConfig+0x2b8>)
 8008788:	681b      	ldr	r3, [r3, #0]
 800878a:	4a07      	ldr	r2, [pc, #28]	; (80087a8 <HAL_RCC_OscConfig+0x2b8>)
 800878c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008790:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8008792:	f7fe f971 	bl	8006a78 <HAL_GetTick>
 8008796:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008798:	e011      	b.n	80087be <HAL_RCC_OscConfig+0x2ce>
 800879a:	bf00      	nop
 800879c:	40023800 	.word	0x40023800
 80087a0:	42470000 	.word	0x42470000
 80087a4:	42470e80 	.word	0x42470e80
 80087a8:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80087ac:	f7fe f964 	bl	8006a78 <HAL_GetTick>
 80087b0:	4602      	mov	r2, r0
 80087b2:	693b      	ldr	r3, [r7, #16]
 80087b4:	1ad3      	subs	r3, r2, r3
 80087b6:	2b02      	cmp	r3, #2
 80087b8:	d901      	bls.n	80087be <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 80087ba:	2303      	movs	r3, #3
 80087bc:	e0fd      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80087be:	4b81      	ldr	r3, [pc, #516]	; (80089c4 <HAL_RCC_OscConfig+0x4d4>)
 80087c0:	681b      	ldr	r3, [r3, #0]
 80087c2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80087c6:	2b00      	cmp	r3, #0
 80087c8:	d0f0      	beq.n	80087ac <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80087ca:	687b      	ldr	r3, [r7, #4]
 80087cc:	689b      	ldr	r3, [r3, #8]
 80087ce:	2b01      	cmp	r3, #1
 80087d0:	d106      	bne.n	80087e0 <HAL_RCC_OscConfig+0x2f0>
 80087d2:	4b7d      	ldr	r3, [pc, #500]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80087d4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80087d6:	4a7c      	ldr	r2, [pc, #496]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80087d8:	f043 0301 	orr.w	r3, r3, #1
 80087dc:	6713      	str	r3, [r2, #112]	; 0x70
 80087de:	e01c      	b.n	800881a <HAL_RCC_OscConfig+0x32a>
 80087e0:	687b      	ldr	r3, [r7, #4]
 80087e2:	689b      	ldr	r3, [r3, #8]
 80087e4:	2b05      	cmp	r3, #5
 80087e6:	d10c      	bne.n	8008802 <HAL_RCC_OscConfig+0x312>
 80087e8:	4b77      	ldr	r3, [pc, #476]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80087ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80087ec:	4a76      	ldr	r2, [pc, #472]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80087ee:	f043 0304 	orr.w	r3, r3, #4
 80087f2:	6713      	str	r3, [r2, #112]	; 0x70
 80087f4:	4b74      	ldr	r3, [pc, #464]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80087f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80087f8:	4a73      	ldr	r2, [pc, #460]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80087fa:	f043 0301 	orr.w	r3, r3, #1
 80087fe:	6713      	str	r3, [r2, #112]	; 0x70
 8008800:	e00b      	b.n	800881a <HAL_RCC_OscConfig+0x32a>
 8008802:	4b71      	ldr	r3, [pc, #452]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008804:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008806:	4a70      	ldr	r2, [pc, #448]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008808:	f023 0301 	bic.w	r3, r3, #1
 800880c:	6713      	str	r3, [r2, #112]	; 0x70
 800880e:	4b6e      	ldr	r3, [pc, #440]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008810:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008812:	4a6d      	ldr	r2, [pc, #436]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008814:	f023 0304 	bic.w	r3, r3, #4
 8008818:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800881a:	687b      	ldr	r3, [r7, #4]
 800881c:	689b      	ldr	r3, [r3, #8]
 800881e:	2b00      	cmp	r3, #0
 8008820:	d015      	beq.n	800884e <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8008822:	f7fe f929 	bl	8006a78 <HAL_GetTick>
 8008826:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008828:	e00a      	b.n	8008840 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800882a:	f7fe f925 	bl	8006a78 <HAL_GetTick>
 800882e:	4602      	mov	r2, r0
 8008830:	693b      	ldr	r3, [r7, #16]
 8008832:	1ad3      	subs	r3, r2, r3
 8008834:	f241 3288 	movw	r2, #5000	; 0x1388
 8008838:	4293      	cmp	r3, r2
 800883a:	d901      	bls.n	8008840 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 800883c:	2303      	movs	r3, #3
 800883e:	e0bc      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008840:	4b61      	ldr	r3, [pc, #388]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008842:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008844:	f003 0302 	and.w	r3, r3, #2
 8008848:	2b00      	cmp	r3, #0
 800884a:	d0ee      	beq.n	800882a <HAL_RCC_OscConfig+0x33a>
 800884c:	e014      	b.n	8008878 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800884e:	f7fe f913 	bl	8006a78 <HAL_GetTick>
 8008852:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008854:	e00a      	b.n	800886c <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008856:	f7fe f90f 	bl	8006a78 <HAL_GetTick>
 800885a:	4602      	mov	r2, r0
 800885c:	693b      	ldr	r3, [r7, #16]
 800885e:	1ad3      	subs	r3, r2, r3
 8008860:	f241 3288 	movw	r2, #5000	; 0x1388
 8008864:	4293      	cmp	r3, r2
 8008866:	d901      	bls.n	800886c <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 8008868:	2303      	movs	r3, #3
 800886a:	e0a6      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800886c:	4b56      	ldr	r3, [pc, #344]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 800886e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008870:	f003 0302 	and.w	r3, r3, #2
 8008874:	2b00      	cmp	r3, #0
 8008876:	d1ee      	bne.n	8008856 <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8008878:	7dfb      	ldrb	r3, [r7, #23]
 800887a:	2b01      	cmp	r3, #1
 800887c:	d105      	bne.n	800888a <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800887e:	4b52      	ldr	r3, [pc, #328]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008880:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008882:	4a51      	ldr	r2, [pc, #324]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008884:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008888:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800888a:	687b      	ldr	r3, [r7, #4]
 800888c:	699b      	ldr	r3, [r3, #24]
 800888e:	2b00      	cmp	r3, #0
 8008890:	f000 8092 	beq.w	80089b8 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8008894:	4b4c      	ldr	r3, [pc, #304]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008896:	689b      	ldr	r3, [r3, #8]
 8008898:	f003 030c 	and.w	r3, r3, #12
 800889c:	2b08      	cmp	r3, #8
 800889e:	d05c      	beq.n	800895a <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80088a0:	687b      	ldr	r3, [r7, #4]
 80088a2:	699b      	ldr	r3, [r3, #24]
 80088a4:	2b02      	cmp	r3, #2
 80088a6:	d141      	bne.n	800892c <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80088a8:	4b48      	ldr	r3, [pc, #288]	; (80089cc <HAL_RCC_OscConfig+0x4dc>)
 80088aa:	2200      	movs	r2, #0
 80088ac:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80088ae:	f7fe f8e3 	bl	8006a78 <HAL_GetTick>
 80088b2:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80088b4:	e008      	b.n	80088c8 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80088b6:	f7fe f8df 	bl	8006a78 <HAL_GetTick>
 80088ba:	4602      	mov	r2, r0
 80088bc:	693b      	ldr	r3, [r7, #16]
 80088be:	1ad3      	subs	r3, r2, r3
 80088c0:	2b02      	cmp	r3, #2
 80088c2:	d901      	bls.n	80088c8 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 80088c4:	2303      	movs	r3, #3
 80088c6:	e078      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80088c8:	4b3f      	ldr	r3, [pc, #252]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80088ca:	681b      	ldr	r3, [r3, #0]
 80088cc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80088d0:	2b00      	cmp	r3, #0
 80088d2:	d1f0      	bne.n	80088b6 <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80088d4:	687b      	ldr	r3, [r7, #4]
 80088d6:	69da      	ldr	r2, [r3, #28]
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	6a1b      	ldr	r3, [r3, #32]
 80088dc:	431a      	orrs	r2, r3
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80088e2:	019b      	lsls	r3, r3, #6
 80088e4:	431a      	orrs	r2, r3
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80088ea:	085b      	lsrs	r3, r3, #1
 80088ec:	3b01      	subs	r3, #1
 80088ee:	041b      	lsls	r3, r3, #16
 80088f0:	431a      	orrs	r2, r3
 80088f2:	687b      	ldr	r3, [r7, #4]
 80088f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80088f6:	061b      	lsls	r3, r3, #24
 80088f8:	4933      	ldr	r1, [pc, #204]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 80088fa:	4313      	orrs	r3, r2
 80088fc:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80088fe:	4b33      	ldr	r3, [pc, #204]	; (80089cc <HAL_RCC_OscConfig+0x4dc>)
 8008900:	2201      	movs	r2, #1
 8008902:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8008904:	f7fe f8b8 	bl	8006a78 <HAL_GetTick>
 8008908:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800890a:	e008      	b.n	800891e <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800890c:	f7fe f8b4 	bl	8006a78 <HAL_GetTick>
 8008910:	4602      	mov	r2, r0
 8008912:	693b      	ldr	r3, [r7, #16]
 8008914:	1ad3      	subs	r3, r2, r3
 8008916:	2b02      	cmp	r3, #2
 8008918:	d901      	bls.n	800891e <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 800891a:	2303      	movs	r3, #3
 800891c:	e04d      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800891e:	4b2a      	ldr	r3, [pc, #168]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008920:	681b      	ldr	r3, [r3, #0]
 8008922:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008926:	2b00      	cmp	r3, #0
 8008928:	d0f0      	beq.n	800890c <HAL_RCC_OscConfig+0x41c>
 800892a:	e045      	b.n	80089b8 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800892c:	4b27      	ldr	r3, [pc, #156]	; (80089cc <HAL_RCC_OscConfig+0x4dc>)
 800892e:	2200      	movs	r2, #0
 8008930:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8008932:	f7fe f8a1 	bl	8006a78 <HAL_GetTick>
 8008936:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008938:	e008      	b.n	800894c <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800893a:	f7fe f89d 	bl	8006a78 <HAL_GetTick>
 800893e:	4602      	mov	r2, r0
 8008940:	693b      	ldr	r3, [r7, #16]
 8008942:	1ad3      	subs	r3, r2, r3
 8008944:	2b02      	cmp	r3, #2
 8008946:	d901      	bls.n	800894c <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 8008948:	2303      	movs	r3, #3
 800894a:	e036      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800894c:	4b1e      	ldr	r3, [pc, #120]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 800894e:	681b      	ldr	r3, [r3, #0]
 8008950:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008954:	2b00      	cmp	r3, #0
 8008956:	d1f0      	bne.n	800893a <HAL_RCC_OscConfig+0x44a>
 8008958:	e02e      	b.n	80089b8 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	699b      	ldr	r3, [r3, #24]
 800895e:	2b01      	cmp	r3, #1
 8008960:	d101      	bne.n	8008966 <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 8008962:	2301      	movs	r3, #1
 8008964:	e029      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8008966:	4b18      	ldr	r3, [pc, #96]	; (80089c8 <HAL_RCC_OscConfig+0x4d8>)
 8008968:	685b      	ldr	r3, [r3, #4]
 800896a:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800896c:	68fb      	ldr	r3, [r7, #12]
 800896e:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	69db      	ldr	r3, [r3, #28]
 8008976:	429a      	cmp	r2, r3
 8008978:	d11c      	bne.n	80089b4 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800897a:	68fb      	ldr	r3, [r7, #12]
 800897c:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008984:	429a      	cmp	r2, r3
 8008986:	d115      	bne.n	80089b4 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8008988:	68fa      	ldr	r2, [r7, #12]
 800898a:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800898e:	4013      	ands	r3, r2
 8008990:	687a      	ldr	r2, [r7, #4]
 8008992:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8008994:	4293      	cmp	r3, r2
 8008996:	d10d      	bne.n	80089b4 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8008998:	68fb      	ldr	r3, [r7, #12]
 800899a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800899e:	687b      	ldr	r3, [r7, #4]
 80089a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80089a2:	429a      	cmp	r2, r3
 80089a4:	d106      	bne.n	80089b4 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 80089a6:	68fb      	ldr	r3, [r7, #12]
 80089a8:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80089ac:	687b      	ldr	r3, [r7, #4]
 80089ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80089b0:	429a      	cmp	r2, r3
 80089b2:	d001      	beq.n	80089b8 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 80089b4:	2301      	movs	r3, #1
 80089b6:	e000      	b.n	80089ba <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 80089b8:	2300      	movs	r3, #0
}
 80089ba:	4618      	mov	r0, r3
 80089bc:	3718      	adds	r7, #24
 80089be:	46bd      	mov	sp, r7
 80089c0:	bd80      	pop	{r7, pc}
 80089c2:	bf00      	nop
 80089c4:	40007000 	.word	0x40007000
 80089c8:	40023800 	.word	0x40023800
 80089cc:	42470060 	.word	0x42470060

080089d0 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80089d0:	b580      	push	{r7, lr}
 80089d2:	b084      	sub	sp, #16
 80089d4:	af00      	add	r7, sp, #0
 80089d6:	6078      	str	r0, [r7, #4]
 80089d8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	2b00      	cmp	r3, #0
 80089de:	d101      	bne.n	80089e4 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80089e0:	2301      	movs	r3, #1
 80089e2:	e0cc      	b.n	8008b7e <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80089e4:	4b68      	ldr	r3, [pc, #416]	; (8008b88 <HAL_RCC_ClockConfig+0x1b8>)
 80089e6:	681b      	ldr	r3, [r3, #0]
 80089e8:	f003 030f 	and.w	r3, r3, #15
 80089ec:	683a      	ldr	r2, [r7, #0]
 80089ee:	429a      	cmp	r2, r3
 80089f0:	d90c      	bls.n	8008a0c <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80089f2:	4b65      	ldr	r3, [pc, #404]	; (8008b88 <HAL_RCC_ClockConfig+0x1b8>)
 80089f4:	683a      	ldr	r2, [r7, #0]
 80089f6:	b2d2      	uxtb	r2, r2
 80089f8:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80089fa:	4b63      	ldr	r3, [pc, #396]	; (8008b88 <HAL_RCC_ClockConfig+0x1b8>)
 80089fc:	681b      	ldr	r3, [r3, #0]
 80089fe:	f003 030f 	and.w	r3, r3, #15
 8008a02:	683a      	ldr	r2, [r7, #0]
 8008a04:	429a      	cmp	r2, r3
 8008a06:	d001      	beq.n	8008a0c <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8008a08:	2301      	movs	r3, #1
 8008a0a:	e0b8      	b.n	8008b7e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008a0c:	687b      	ldr	r3, [r7, #4]
 8008a0e:	681b      	ldr	r3, [r3, #0]
 8008a10:	f003 0302 	and.w	r3, r3, #2
 8008a14:	2b00      	cmp	r3, #0
 8008a16:	d020      	beq.n	8008a5a <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	681b      	ldr	r3, [r3, #0]
 8008a1c:	f003 0304 	and.w	r3, r3, #4
 8008a20:	2b00      	cmp	r3, #0
 8008a22:	d005      	beq.n	8008a30 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8008a24:	4b59      	ldr	r3, [pc, #356]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a26:	689b      	ldr	r3, [r3, #8]
 8008a28:	4a58      	ldr	r2, [pc, #352]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a2a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8008a2e:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	681b      	ldr	r3, [r3, #0]
 8008a34:	f003 0308 	and.w	r3, r3, #8
 8008a38:	2b00      	cmp	r3, #0
 8008a3a:	d005      	beq.n	8008a48 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8008a3c:	4b53      	ldr	r3, [pc, #332]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a3e:	689b      	ldr	r3, [r3, #8]
 8008a40:	4a52      	ldr	r2, [pc, #328]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a42:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8008a46:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008a48:	4b50      	ldr	r3, [pc, #320]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a4a:	689b      	ldr	r3, [r3, #8]
 8008a4c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	689b      	ldr	r3, [r3, #8]
 8008a54:	494d      	ldr	r1, [pc, #308]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a56:	4313      	orrs	r3, r2
 8008a58:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	681b      	ldr	r3, [r3, #0]
 8008a5e:	f003 0301 	and.w	r3, r3, #1
 8008a62:	2b00      	cmp	r3, #0
 8008a64:	d044      	beq.n	8008af0 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	685b      	ldr	r3, [r3, #4]
 8008a6a:	2b01      	cmp	r3, #1
 8008a6c:	d107      	bne.n	8008a7e <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008a6e:	4b47      	ldr	r3, [pc, #284]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a70:	681b      	ldr	r3, [r3, #0]
 8008a72:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008a76:	2b00      	cmp	r3, #0
 8008a78:	d119      	bne.n	8008aae <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8008a7a:	2301      	movs	r3, #1
 8008a7c:	e07f      	b.n	8008b7e <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008a7e:	687b      	ldr	r3, [r7, #4]
 8008a80:	685b      	ldr	r3, [r3, #4]
 8008a82:	2b02      	cmp	r3, #2
 8008a84:	d003      	beq.n	8008a8e <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008a8a:	2b03      	cmp	r3, #3
 8008a8c:	d107      	bne.n	8008a9e <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008a8e:	4b3f      	ldr	r3, [pc, #252]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008a90:	681b      	ldr	r3, [r3, #0]
 8008a92:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008a96:	2b00      	cmp	r3, #0
 8008a98:	d109      	bne.n	8008aae <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8008a9a:	2301      	movs	r3, #1
 8008a9c:	e06f      	b.n	8008b7e <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008a9e:	4b3b      	ldr	r3, [pc, #236]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008aa0:	681b      	ldr	r3, [r3, #0]
 8008aa2:	f003 0302 	and.w	r3, r3, #2
 8008aa6:	2b00      	cmp	r3, #0
 8008aa8:	d101      	bne.n	8008aae <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8008aaa:	2301      	movs	r3, #1
 8008aac:	e067      	b.n	8008b7e <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008aae:	4b37      	ldr	r3, [pc, #220]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008ab0:	689b      	ldr	r3, [r3, #8]
 8008ab2:	f023 0203 	bic.w	r2, r3, #3
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	685b      	ldr	r3, [r3, #4]
 8008aba:	4934      	ldr	r1, [pc, #208]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008abc:	4313      	orrs	r3, r2
 8008abe:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8008ac0:	f7fd ffda 	bl	8006a78 <HAL_GetTick>
 8008ac4:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008ac6:	e00a      	b.n	8008ade <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008ac8:	f7fd ffd6 	bl	8006a78 <HAL_GetTick>
 8008acc:	4602      	mov	r2, r0
 8008ace:	68fb      	ldr	r3, [r7, #12]
 8008ad0:	1ad3      	subs	r3, r2, r3
 8008ad2:	f241 3288 	movw	r2, #5000	; 0x1388
 8008ad6:	4293      	cmp	r3, r2
 8008ad8:	d901      	bls.n	8008ade <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8008ada:	2303      	movs	r3, #3
 8008adc:	e04f      	b.n	8008b7e <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008ade:	4b2b      	ldr	r3, [pc, #172]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008ae0:	689b      	ldr	r3, [r3, #8]
 8008ae2:	f003 020c 	and.w	r2, r3, #12
 8008ae6:	687b      	ldr	r3, [r7, #4]
 8008ae8:	685b      	ldr	r3, [r3, #4]
 8008aea:	009b      	lsls	r3, r3, #2
 8008aec:	429a      	cmp	r2, r3
 8008aee:	d1eb      	bne.n	8008ac8 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8008af0:	4b25      	ldr	r3, [pc, #148]	; (8008b88 <HAL_RCC_ClockConfig+0x1b8>)
 8008af2:	681b      	ldr	r3, [r3, #0]
 8008af4:	f003 030f 	and.w	r3, r3, #15
 8008af8:	683a      	ldr	r2, [r7, #0]
 8008afa:	429a      	cmp	r2, r3
 8008afc:	d20c      	bcs.n	8008b18 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008afe:	4b22      	ldr	r3, [pc, #136]	; (8008b88 <HAL_RCC_ClockConfig+0x1b8>)
 8008b00:	683a      	ldr	r2, [r7, #0]
 8008b02:	b2d2      	uxtb	r2, r2
 8008b04:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008b06:	4b20      	ldr	r3, [pc, #128]	; (8008b88 <HAL_RCC_ClockConfig+0x1b8>)
 8008b08:	681b      	ldr	r3, [r3, #0]
 8008b0a:	f003 030f 	and.w	r3, r3, #15
 8008b0e:	683a      	ldr	r2, [r7, #0]
 8008b10:	429a      	cmp	r2, r3
 8008b12:	d001      	beq.n	8008b18 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8008b14:	2301      	movs	r3, #1
 8008b16:	e032      	b.n	8008b7e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	681b      	ldr	r3, [r3, #0]
 8008b1c:	f003 0304 	and.w	r3, r3, #4
 8008b20:	2b00      	cmp	r3, #0
 8008b22:	d008      	beq.n	8008b36 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8008b24:	4b19      	ldr	r3, [pc, #100]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008b26:	689b      	ldr	r3, [r3, #8]
 8008b28:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	68db      	ldr	r3, [r3, #12]
 8008b30:	4916      	ldr	r1, [pc, #88]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008b32:	4313      	orrs	r3, r2
 8008b34:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	681b      	ldr	r3, [r3, #0]
 8008b3a:	f003 0308 	and.w	r3, r3, #8
 8008b3e:	2b00      	cmp	r3, #0
 8008b40:	d009      	beq.n	8008b56 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8008b42:	4b12      	ldr	r3, [pc, #72]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008b44:	689b      	ldr	r3, [r3, #8]
 8008b46:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	691b      	ldr	r3, [r3, #16]
 8008b4e:	00db      	lsls	r3, r3, #3
 8008b50:	490e      	ldr	r1, [pc, #56]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008b52:	4313      	orrs	r3, r2
 8008b54:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8008b56:	f000 f821 	bl	8008b9c <HAL_RCC_GetSysClockFreq>
 8008b5a:	4601      	mov	r1, r0
 8008b5c:	4b0b      	ldr	r3, [pc, #44]	; (8008b8c <HAL_RCC_ClockConfig+0x1bc>)
 8008b5e:	689b      	ldr	r3, [r3, #8]
 8008b60:	091b      	lsrs	r3, r3, #4
 8008b62:	f003 030f 	and.w	r3, r3, #15
 8008b66:	4a0a      	ldr	r2, [pc, #40]	; (8008b90 <HAL_RCC_ClockConfig+0x1c0>)
 8008b68:	5cd3      	ldrb	r3, [r2, r3]
 8008b6a:	fa21 f303 	lsr.w	r3, r1, r3
 8008b6e:	4a09      	ldr	r2, [pc, #36]	; (8008b94 <HAL_RCC_ClockConfig+0x1c4>)
 8008b70:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8008b72:	4b09      	ldr	r3, [pc, #36]	; (8008b98 <HAL_RCC_ClockConfig+0x1c8>)
 8008b74:	681b      	ldr	r3, [r3, #0]
 8008b76:	4618      	mov	r0, r3
 8008b78:	f7fd ff3a 	bl	80069f0 <HAL_InitTick>

  return HAL_OK;
 8008b7c:	2300      	movs	r3, #0
}
 8008b7e:	4618      	mov	r0, r3
 8008b80:	3710      	adds	r7, #16
 8008b82:	46bd      	mov	sp, r7
 8008b84:	bd80      	pop	{r7, pc}
 8008b86:	bf00      	nop
 8008b88:	40023c00 	.word	0x40023c00
 8008b8c:	40023800 	.word	0x40023800
 8008b90:	0800a91c 	.word	0x0800a91c
 8008b94:	20000004 	.word	0x20000004
 8008b98:	20000008 	.word	0x20000008

08008b9c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8008b9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b9e:	b085      	sub	sp, #20
 8008ba0:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8008ba2:	2300      	movs	r3, #0
 8008ba4:	607b      	str	r3, [r7, #4]
 8008ba6:	2300      	movs	r3, #0
 8008ba8:	60fb      	str	r3, [r7, #12]
 8008baa:	2300      	movs	r3, #0
 8008bac:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 8008bae:	2300      	movs	r3, #0
 8008bb0:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008bb2:	4b63      	ldr	r3, [pc, #396]	; (8008d40 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8008bb4:	689b      	ldr	r3, [r3, #8]
 8008bb6:	f003 030c 	and.w	r3, r3, #12
 8008bba:	2b04      	cmp	r3, #4
 8008bbc:	d007      	beq.n	8008bce <HAL_RCC_GetSysClockFreq+0x32>
 8008bbe:	2b08      	cmp	r3, #8
 8008bc0:	d008      	beq.n	8008bd4 <HAL_RCC_GetSysClockFreq+0x38>
 8008bc2:	2b00      	cmp	r3, #0
 8008bc4:	f040 80b4 	bne.w	8008d30 <HAL_RCC_GetSysClockFreq+0x194>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8008bc8:	4b5e      	ldr	r3, [pc, #376]	; (8008d44 <HAL_RCC_GetSysClockFreq+0x1a8>)
 8008bca:	60bb      	str	r3, [r7, #8]
       break;
 8008bcc:	e0b3      	b.n	8008d36 <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8008bce:	4b5e      	ldr	r3, [pc, #376]	; (8008d48 <HAL_RCC_GetSysClockFreq+0x1ac>)
 8008bd0:	60bb      	str	r3, [r7, #8]
      break;
 8008bd2:	e0b0      	b.n	8008d36 <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008bd4:	4b5a      	ldr	r3, [pc, #360]	; (8008d40 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8008bd6:	685b      	ldr	r3, [r3, #4]
 8008bd8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008bdc:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008bde:	4b58      	ldr	r3, [pc, #352]	; (8008d40 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8008be0:	685b      	ldr	r3, [r3, #4]
 8008be2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008be6:	2b00      	cmp	r3, #0
 8008be8:	d04a      	beq.n	8008c80 <HAL_RCC_GetSysClockFreq+0xe4>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008bea:	4b55      	ldr	r3, [pc, #340]	; (8008d40 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8008bec:	685b      	ldr	r3, [r3, #4]
 8008bee:	099b      	lsrs	r3, r3, #6
 8008bf0:	f04f 0400 	mov.w	r4, #0
 8008bf4:	f240 11ff 	movw	r1, #511	; 0x1ff
 8008bf8:	f04f 0200 	mov.w	r2, #0
 8008bfc:	ea03 0501 	and.w	r5, r3, r1
 8008c00:	ea04 0602 	and.w	r6, r4, r2
 8008c04:	4629      	mov	r1, r5
 8008c06:	4632      	mov	r2, r6
 8008c08:	f04f 0300 	mov.w	r3, #0
 8008c0c:	f04f 0400 	mov.w	r4, #0
 8008c10:	0154      	lsls	r4, r2, #5
 8008c12:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8008c16:	014b      	lsls	r3, r1, #5
 8008c18:	4619      	mov	r1, r3
 8008c1a:	4622      	mov	r2, r4
 8008c1c:	1b49      	subs	r1, r1, r5
 8008c1e:	eb62 0206 	sbc.w	r2, r2, r6
 8008c22:	f04f 0300 	mov.w	r3, #0
 8008c26:	f04f 0400 	mov.w	r4, #0
 8008c2a:	0194      	lsls	r4, r2, #6
 8008c2c:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8008c30:	018b      	lsls	r3, r1, #6
 8008c32:	1a5b      	subs	r3, r3, r1
 8008c34:	eb64 0402 	sbc.w	r4, r4, r2
 8008c38:	f04f 0100 	mov.w	r1, #0
 8008c3c:	f04f 0200 	mov.w	r2, #0
 8008c40:	00e2      	lsls	r2, r4, #3
 8008c42:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8008c46:	00d9      	lsls	r1, r3, #3
 8008c48:	460b      	mov	r3, r1
 8008c4a:	4614      	mov	r4, r2
 8008c4c:	195b      	adds	r3, r3, r5
 8008c4e:	eb44 0406 	adc.w	r4, r4, r6
 8008c52:	f04f 0100 	mov.w	r1, #0
 8008c56:	f04f 0200 	mov.w	r2, #0
 8008c5a:	0262      	lsls	r2, r4, #9
 8008c5c:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 8008c60:	0259      	lsls	r1, r3, #9
 8008c62:	460b      	mov	r3, r1
 8008c64:	4614      	mov	r4, r2
 8008c66:	4618      	mov	r0, r3
 8008c68:	4621      	mov	r1, r4
 8008c6a:	687b      	ldr	r3, [r7, #4]
 8008c6c:	f04f 0400 	mov.w	r4, #0
 8008c70:	461a      	mov	r2, r3
 8008c72:	4623      	mov	r3, r4
 8008c74:	f7f7 ff64 	bl	8000b40 <__aeabi_uldivmod>
 8008c78:	4603      	mov	r3, r0
 8008c7a:	460c      	mov	r4, r1
 8008c7c:	60fb      	str	r3, [r7, #12]
 8008c7e:	e049      	b.n	8008d14 <HAL_RCC_GetSysClockFreq+0x178>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008c80:	4b2f      	ldr	r3, [pc, #188]	; (8008d40 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8008c82:	685b      	ldr	r3, [r3, #4]
 8008c84:	099b      	lsrs	r3, r3, #6
 8008c86:	f04f 0400 	mov.w	r4, #0
 8008c8a:	f240 11ff 	movw	r1, #511	; 0x1ff
 8008c8e:	f04f 0200 	mov.w	r2, #0
 8008c92:	ea03 0501 	and.w	r5, r3, r1
 8008c96:	ea04 0602 	and.w	r6, r4, r2
 8008c9a:	4629      	mov	r1, r5
 8008c9c:	4632      	mov	r2, r6
 8008c9e:	f04f 0300 	mov.w	r3, #0
 8008ca2:	f04f 0400 	mov.w	r4, #0
 8008ca6:	0154      	lsls	r4, r2, #5
 8008ca8:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8008cac:	014b      	lsls	r3, r1, #5
 8008cae:	4619      	mov	r1, r3
 8008cb0:	4622      	mov	r2, r4
 8008cb2:	1b49      	subs	r1, r1, r5
 8008cb4:	eb62 0206 	sbc.w	r2, r2, r6
 8008cb8:	f04f 0300 	mov.w	r3, #0
 8008cbc:	f04f 0400 	mov.w	r4, #0
 8008cc0:	0194      	lsls	r4, r2, #6
 8008cc2:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8008cc6:	018b      	lsls	r3, r1, #6
 8008cc8:	1a5b      	subs	r3, r3, r1
 8008cca:	eb64 0402 	sbc.w	r4, r4, r2
 8008cce:	f04f 0100 	mov.w	r1, #0
 8008cd2:	f04f 0200 	mov.w	r2, #0
 8008cd6:	00e2      	lsls	r2, r4, #3
 8008cd8:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8008cdc:	00d9      	lsls	r1, r3, #3
 8008cde:	460b      	mov	r3, r1
 8008ce0:	4614      	mov	r4, r2
 8008ce2:	195b      	adds	r3, r3, r5
 8008ce4:	eb44 0406 	adc.w	r4, r4, r6
 8008ce8:	f04f 0100 	mov.w	r1, #0
 8008cec:	f04f 0200 	mov.w	r2, #0
 8008cf0:	02a2      	lsls	r2, r4, #10
 8008cf2:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8008cf6:	0299      	lsls	r1, r3, #10
 8008cf8:	460b      	mov	r3, r1
 8008cfa:	4614      	mov	r4, r2
 8008cfc:	4618      	mov	r0, r3
 8008cfe:	4621      	mov	r1, r4
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	f04f 0400 	mov.w	r4, #0
 8008d06:	461a      	mov	r2, r3
 8008d08:	4623      	mov	r3, r4
 8008d0a:	f7f7 ff19 	bl	8000b40 <__aeabi_uldivmod>
 8008d0e:	4603      	mov	r3, r0
 8008d10:	460c      	mov	r4, r1
 8008d12:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8008d14:	4b0a      	ldr	r3, [pc, #40]	; (8008d40 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8008d16:	685b      	ldr	r3, [r3, #4]
 8008d18:	0c1b      	lsrs	r3, r3, #16
 8008d1a:	f003 0303 	and.w	r3, r3, #3
 8008d1e:	3301      	adds	r3, #1
 8008d20:	005b      	lsls	r3, r3, #1
 8008d22:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 8008d24:	68fa      	ldr	r2, [r7, #12]
 8008d26:	683b      	ldr	r3, [r7, #0]
 8008d28:	fbb2 f3f3 	udiv	r3, r2, r3
 8008d2c:	60bb      	str	r3, [r7, #8]
      break;
 8008d2e:	e002      	b.n	8008d36 <HAL_RCC_GetSysClockFreq+0x19a>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8008d30:	4b04      	ldr	r3, [pc, #16]	; (8008d44 <HAL_RCC_GetSysClockFreq+0x1a8>)
 8008d32:	60bb      	str	r3, [r7, #8]
      break;
 8008d34:	bf00      	nop
    }
  }
  return sysclockfreq;
 8008d36:	68bb      	ldr	r3, [r7, #8]
}
 8008d38:	4618      	mov	r0, r3
 8008d3a:	3714      	adds	r7, #20
 8008d3c:	46bd      	mov	sp, r7
 8008d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d40:	40023800 	.word	0x40023800
 8008d44:	00f42400 	.word	0x00f42400
 8008d48:	007a1200 	.word	0x007a1200

08008d4c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8008d4c:	b480      	push	{r7}
 8008d4e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8008d50:	4b03      	ldr	r3, [pc, #12]	; (8008d60 <HAL_RCC_GetHCLKFreq+0x14>)
 8008d52:	681b      	ldr	r3, [r3, #0]
}
 8008d54:	4618      	mov	r0, r3
 8008d56:	46bd      	mov	sp, r7
 8008d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d5c:	4770      	bx	lr
 8008d5e:	bf00      	nop
 8008d60:	20000004 	.word	0x20000004

08008d64 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8008d64:	b580      	push	{r7, lr}
 8008d66:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8008d68:	f7ff fff0 	bl	8008d4c <HAL_RCC_GetHCLKFreq>
 8008d6c:	4601      	mov	r1, r0
 8008d6e:	4b05      	ldr	r3, [pc, #20]	; (8008d84 <HAL_RCC_GetPCLK1Freq+0x20>)
 8008d70:	689b      	ldr	r3, [r3, #8]
 8008d72:	0a9b      	lsrs	r3, r3, #10
 8008d74:	f003 0307 	and.w	r3, r3, #7
 8008d78:	4a03      	ldr	r2, [pc, #12]	; (8008d88 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008d7a:	5cd3      	ldrb	r3, [r2, r3]
 8008d7c:	fa21 f303 	lsr.w	r3, r1, r3
}
 8008d80:	4618      	mov	r0, r3
 8008d82:	bd80      	pop	{r7, pc}
 8008d84:	40023800 	.word	0x40023800
 8008d88:	0800a92c 	.word	0x0800a92c

08008d8c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8008d8c:	b580      	push	{r7, lr}
 8008d8e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8008d90:	f7ff ffdc 	bl	8008d4c <HAL_RCC_GetHCLKFreq>
 8008d94:	4601      	mov	r1, r0
 8008d96:	4b05      	ldr	r3, [pc, #20]	; (8008dac <HAL_RCC_GetPCLK2Freq+0x20>)
 8008d98:	689b      	ldr	r3, [r3, #8]
 8008d9a:	0b5b      	lsrs	r3, r3, #13
 8008d9c:	f003 0307 	and.w	r3, r3, #7
 8008da0:	4a03      	ldr	r2, [pc, #12]	; (8008db0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8008da2:	5cd3      	ldrb	r3, [r2, r3]
 8008da4:	fa21 f303 	lsr.w	r3, r1, r3
}
 8008da8:	4618      	mov	r0, r3
 8008daa:	bd80      	pop	{r7, pc}
 8008dac:	40023800 	.word	0x40023800
 8008db0:	0800a92c 	.word	0x0800a92c

08008db4 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8008db4:	b580      	push	{r7, lr}
 8008db6:	b082      	sub	sp, #8
 8008db8:	af00      	add	r7, sp, #0
 8008dba:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	d101      	bne.n	8008dc6 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8008dc2:	2301      	movs	r3, #1
 8008dc4:	e01d      	b.n	8008e02 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008dcc:	b2db      	uxtb	r3, r3
 8008dce:	2b00      	cmp	r3, #0
 8008dd0:	d106      	bne.n	8008de0 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008dd2:	687b      	ldr	r3, [r7, #4]
 8008dd4:	2200      	movs	r2, #0
 8008dd6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8008dda:	6878      	ldr	r0, [r7, #4]
 8008ddc:	f7fd fcaa 	bl	8006734 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	2202      	movs	r2, #2
 8008de4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008de8:	687b      	ldr	r3, [r7, #4]
 8008dea:	681a      	ldr	r2, [r3, #0]
 8008dec:	687b      	ldr	r3, [r7, #4]
 8008dee:	3304      	adds	r3, #4
 8008df0:	4619      	mov	r1, r3
 8008df2:	4610      	mov	r0, r2
 8008df4:	f000 fb3c 	bl	8009470 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8008df8:	687b      	ldr	r3, [r7, #4]
 8008dfa:	2201      	movs	r2, #1
 8008dfc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8008e00:	2300      	movs	r3, #0
}
 8008e02:	4618      	mov	r0, r3
 8008e04:	3708      	adds	r7, #8
 8008e06:	46bd      	mov	sp, r7
 8008e08:	bd80      	pop	{r7, pc}
	...

08008e0c <HAL_TIM_IC_Start_IT>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8008e0c:	b580      	push	{r7, lr}
 8008e0e:	b084      	sub	sp, #16
 8008e10:	af00      	add	r7, sp, #0
 8008e12:	6078      	str	r0, [r7, #4]
 8008e14:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  switch (Channel)
 8008e16:	683b      	ldr	r3, [r7, #0]
 8008e18:	2b0c      	cmp	r3, #12
 8008e1a:	d841      	bhi.n	8008ea0 <HAL_TIM_IC_Start_IT+0x94>
 8008e1c:	a201      	add	r2, pc, #4	; (adr r2, 8008e24 <HAL_TIM_IC_Start_IT+0x18>)
 8008e1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008e22:	bf00      	nop
 8008e24:	08008e59 	.word	0x08008e59
 8008e28:	08008ea1 	.word	0x08008ea1
 8008e2c:	08008ea1 	.word	0x08008ea1
 8008e30:	08008ea1 	.word	0x08008ea1
 8008e34:	08008e6b 	.word	0x08008e6b
 8008e38:	08008ea1 	.word	0x08008ea1
 8008e3c:	08008ea1 	.word	0x08008ea1
 8008e40:	08008ea1 	.word	0x08008ea1
 8008e44:	08008e7d 	.word	0x08008e7d
 8008e48:	08008ea1 	.word	0x08008ea1
 8008e4c:	08008ea1 	.word	0x08008ea1
 8008e50:	08008ea1 	.word	0x08008ea1
 8008e54:	08008e8f 	.word	0x08008e8f
  {
    case TIM_CHANNEL_1:
    {
      /* Enable the TIM Capture/Compare 1 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8008e58:	687b      	ldr	r3, [r7, #4]
 8008e5a:	681b      	ldr	r3, [r3, #0]
 8008e5c:	68da      	ldr	r2, [r3, #12]
 8008e5e:	687b      	ldr	r3, [r7, #4]
 8008e60:	681b      	ldr	r3, [r3, #0]
 8008e62:	f042 0202 	orr.w	r2, r2, #2
 8008e66:	60da      	str	r2, [r3, #12]
      break;
 8008e68:	e01b      	b.n	8008ea2 <HAL_TIM_IC_Start_IT+0x96>
    }

    case TIM_CHANNEL_2:
    {
      /* Enable the TIM Capture/Compare 2 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	681b      	ldr	r3, [r3, #0]
 8008e6e:	68da      	ldr	r2, [r3, #12]
 8008e70:	687b      	ldr	r3, [r7, #4]
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	f042 0204 	orr.w	r2, r2, #4
 8008e78:	60da      	str	r2, [r3, #12]
      break;
 8008e7a:	e012      	b.n	8008ea2 <HAL_TIM_IC_Start_IT+0x96>
    }

    case TIM_CHANNEL_3:
    {
      /* Enable the TIM Capture/Compare 3 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 8008e7c:	687b      	ldr	r3, [r7, #4]
 8008e7e:	681b      	ldr	r3, [r3, #0]
 8008e80:	68da      	ldr	r2, [r3, #12]
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	681b      	ldr	r3, [r3, #0]
 8008e86:	f042 0208 	orr.w	r2, r2, #8
 8008e8a:	60da      	str	r2, [r3, #12]
      break;
 8008e8c:	e009      	b.n	8008ea2 <HAL_TIM_IC_Start_IT+0x96>
    }

    case TIM_CHANNEL_4:
    {
      /* Enable the TIM Capture/Compare 4 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 8008e8e:	687b      	ldr	r3, [r7, #4]
 8008e90:	681b      	ldr	r3, [r3, #0]
 8008e92:	68da      	ldr	r2, [r3, #12]
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	681b      	ldr	r3, [r3, #0]
 8008e98:	f042 0210 	orr.w	r2, r2, #16
 8008e9c:	60da      	str	r2, [r3, #12]
      break;
 8008e9e:	e000      	b.n	8008ea2 <HAL_TIM_IC_Start_IT+0x96>
    }

    default:
      break;
 8008ea0:	bf00      	nop
  }
  /* Enable the Input Capture channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8008ea2:	687b      	ldr	r3, [r7, #4]
 8008ea4:	681b      	ldr	r3, [r3, #0]
 8008ea6:	2201      	movs	r2, #1
 8008ea8:	6839      	ldr	r1, [r7, #0]
 8008eaa:	4618      	mov	r0, r3
 8008eac:	f000 fcec 	bl	8009888 <TIM_CCxChannelCmd>

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008eb0:	687b      	ldr	r3, [r7, #4]
 8008eb2:	681b      	ldr	r3, [r3, #0]
 8008eb4:	689b      	ldr	r3, [r3, #8]
 8008eb6:	f003 0307 	and.w	r3, r3, #7
 8008eba:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008ebc:	68fb      	ldr	r3, [r7, #12]
 8008ebe:	2b06      	cmp	r3, #6
 8008ec0:	d007      	beq.n	8008ed2 <HAL_TIM_IC_Start_IT+0xc6>
  {
    __HAL_TIM_ENABLE(htim);
 8008ec2:	687b      	ldr	r3, [r7, #4]
 8008ec4:	681b      	ldr	r3, [r3, #0]
 8008ec6:	681a      	ldr	r2, [r3, #0]
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	681b      	ldr	r3, [r3, #0]
 8008ecc:	f042 0201 	orr.w	r2, r2, #1
 8008ed0:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8008ed2:	2300      	movs	r3, #0
}
 8008ed4:	4618      	mov	r0, r3
 8008ed6:	3710      	adds	r7, #16
 8008ed8:	46bd      	mov	sp, r7
 8008eda:	bd80      	pop	{r7, pc}

08008edc <HAL_TIM_Encoder_Init>:
  * @param  htim TIM Encoder Interface handle
  * @param  sConfig TIM Encoder Interface configuration structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim,  TIM_Encoder_InitTypeDef *sConfig)
{
 8008edc:	b580      	push	{r7, lr}
 8008ede:	b086      	sub	sp, #24
 8008ee0:	af00      	add	r7, sp, #0
 8008ee2:	6078      	str	r0, [r7, #4]
 8008ee4:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	2b00      	cmp	r3, #0
 8008eea:	d101      	bne.n	8008ef0 <HAL_TIM_Encoder_Init+0x14>
  {
    return HAL_ERROR;
 8008eec:	2301      	movs	r3, #1
 8008eee:	e083      	b.n	8008ff8 <HAL_TIM_Encoder_Init+0x11c>
  assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
  assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
  assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
  assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008ef0:	687b      	ldr	r3, [r7, #4]
 8008ef2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008ef6:	b2db      	uxtb	r3, r3
 8008ef8:	2b00      	cmp	r3, #0
 8008efa:	d106      	bne.n	8008f0a <HAL_TIM_Encoder_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	2200      	movs	r2, #0
 8008f00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Encoder_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_Encoder_MspInit(htim);
 8008f04:	6878      	ldr	r0, [r7, #4]
 8008f06:	f7fd fbcd 	bl	80066a4 <HAL_TIM_Encoder_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008f0a:	687b      	ldr	r3, [r7, #4]
 8008f0c:	2202      	movs	r2, #2
 8008f0e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Reset the SMS and ECE bits */
  htim->Instance->SMCR &= ~(TIM_SMCR_SMS | TIM_SMCR_ECE);
 8008f12:	687b      	ldr	r3, [r7, #4]
 8008f14:	681b      	ldr	r3, [r3, #0]
 8008f16:	689b      	ldr	r3, [r3, #8]
 8008f18:	687a      	ldr	r2, [r7, #4]
 8008f1a:	6812      	ldr	r2, [r2, #0]
 8008f1c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008f20:	f023 0307 	bic.w	r3, r3, #7
 8008f24:	6093      	str	r3, [r2, #8]

  /* Configure the Time base in the Encoder Mode */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008f26:	687b      	ldr	r3, [r7, #4]
 8008f28:	681a      	ldr	r2, [r3, #0]
 8008f2a:	687b      	ldr	r3, [r7, #4]
 8008f2c:	3304      	adds	r3, #4
 8008f2e:	4619      	mov	r1, r3
 8008f30:	4610      	mov	r0, r2
 8008f32:	f000 fa9d 	bl	8009470 <TIM_Base_SetConfig>

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	681b      	ldr	r3, [r3, #0]
 8008f3a:	689b      	ldr	r3, [r3, #8]
 8008f3c:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = htim->Instance->CCMR1;
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	699b      	ldr	r3, [r3, #24]
 8008f44:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCER register value */
  tmpccer = htim->Instance->CCER;
 8008f46:	687b      	ldr	r3, [r7, #4]
 8008f48:	681b      	ldr	r3, [r3, #0]
 8008f4a:	6a1b      	ldr	r3, [r3, #32]
 8008f4c:	60fb      	str	r3, [r7, #12]

  /* Set the encoder Mode */
  tmpsmcr |= sConfig->EncoderMode;
 8008f4e:	683b      	ldr	r3, [r7, #0]
 8008f50:	681b      	ldr	r3, [r3, #0]
 8008f52:	697a      	ldr	r2, [r7, #20]
 8008f54:	4313      	orrs	r3, r2
 8008f56:	617b      	str	r3, [r7, #20]

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
 8008f58:	693b      	ldr	r3, [r7, #16]
 8008f5a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008f5e:	f023 0303 	bic.w	r3, r3, #3
 8008f62:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 8008f64:	683b      	ldr	r3, [r7, #0]
 8008f66:	689a      	ldr	r2, [r3, #8]
 8008f68:	683b      	ldr	r3, [r7, #0]
 8008f6a:	699b      	ldr	r3, [r3, #24]
 8008f6c:	021b      	lsls	r3, r3, #8
 8008f6e:	4313      	orrs	r3, r2
 8008f70:	693a      	ldr	r2, [r7, #16]
 8008f72:	4313      	orrs	r3, r2
 8008f74:	613b      	str	r3, [r7, #16]

  /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
  tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
 8008f76:	693b      	ldr	r3, [r7, #16]
 8008f78:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8008f7c:	f023 030c 	bic.w	r3, r3, #12
 8008f80:	613b      	str	r3, [r7, #16]
  tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
 8008f82:	693b      	ldr	r3, [r7, #16]
 8008f84:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008f88:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008f8c:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
 8008f8e:	683b      	ldr	r3, [r7, #0]
 8008f90:	68da      	ldr	r2, [r3, #12]
 8008f92:	683b      	ldr	r3, [r7, #0]
 8008f94:	69db      	ldr	r3, [r3, #28]
 8008f96:	021b      	lsls	r3, r3, #8
 8008f98:	4313      	orrs	r3, r2
 8008f9a:	693a      	ldr	r2, [r7, #16]
 8008f9c:	4313      	orrs	r3, r2
 8008f9e:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 8008fa0:	683b      	ldr	r3, [r7, #0]
 8008fa2:	691b      	ldr	r3, [r3, #16]
 8008fa4:	011a      	lsls	r2, r3, #4
 8008fa6:	683b      	ldr	r3, [r7, #0]
 8008fa8:	6a1b      	ldr	r3, [r3, #32]
 8008faa:	031b      	lsls	r3, r3, #12
 8008fac:	4313      	orrs	r3, r2
 8008fae:	693a      	ldr	r2, [r7, #16]
 8008fb0:	4313      	orrs	r3, r2
 8008fb2:	613b      	str	r3, [r7, #16]

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
 8008fb4:	68fb      	ldr	r3, [r7, #12]
 8008fb6:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8008fba:	60fb      	str	r3, [r7, #12]
  tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
 8008fbc:	68fb      	ldr	r3, [r7, #12]
 8008fbe:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 8008fc2:	60fb      	str	r3, [r7, #12]
  tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 8008fc4:	683b      	ldr	r3, [r7, #0]
 8008fc6:	685a      	ldr	r2, [r3, #4]
 8008fc8:	683b      	ldr	r3, [r7, #0]
 8008fca:	695b      	ldr	r3, [r3, #20]
 8008fcc:	011b      	lsls	r3, r3, #4
 8008fce:	4313      	orrs	r3, r2
 8008fd0:	68fa      	ldr	r2, [r7, #12]
 8008fd2:	4313      	orrs	r3, r2
 8008fd4:	60fb      	str	r3, [r7, #12]

  /* Write to TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	681b      	ldr	r3, [r3, #0]
 8008fda:	697a      	ldr	r2, [r7, #20]
 8008fdc:	609a      	str	r2, [r3, #8]

  /* Write to TIMx CCMR1 */
  htim->Instance->CCMR1 = tmpccmr1;
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	681b      	ldr	r3, [r3, #0]
 8008fe2:	693a      	ldr	r2, [r7, #16]
 8008fe4:	619a      	str	r2, [r3, #24]

  /* Write to TIMx CCER */
  htim->Instance->CCER = tmpccer;
 8008fe6:	687b      	ldr	r3, [r7, #4]
 8008fe8:	681b      	ldr	r3, [r3, #0]
 8008fea:	68fa      	ldr	r2, [r7, #12]
 8008fec:	621a      	str	r2, [r3, #32]

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	2201      	movs	r2, #1
 8008ff2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8008ff6:	2300      	movs	r3, #0
}
 8008ff8:	4618      	mov	r0, r3
 8008ffa:	3718      	adds	r7, #24
 8008ffc:	46bd      	mov	sp, r7
 8008ffe:	bd80      	pop	{r7, pc}

08009000 <HAL_TIM_Encoder_Start>:
  *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
  *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Encoder_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8009000:	b580      	push	{r7, lr}
 8009002:	b082      	sub	sp, #8
 8009004:	af00      	add	r7, sp, #0
 8009006:	6078      	str	r0, [r7, #4]
 8009008:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

  /* Enable the encoder interface channels */
  switch (Channel)
 800900a:	683b      	ldr	r3, [r7, #0]
 800900c:	2b00      	cmp	r3, #0
 800900e:	d002      	beq.n	8009016 <HAL_TIM_Encoder_Start+0x16>
 8009010:	2b04      	cmp	r3, #4
 8009012:	d008      	beq.n	8009026 <HAL_TIM_Encoder_Start+0x26>
 8009014:	e00f      	b.n	8009036 <HAL_TIM_Encoder_Start+0x36>
  {
    case TIM_CHANNEL_1:
    {
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8009016:	687b      	ldr	r3, [r7, #4]
 8009018:	681b      	ldr	r3, [r3, #0]
 800901a:	2201      	movs	r2, #1
 800901c:	2100      	movs	r1, #0
 800901e:	4618      	mov	r0, r3
 8009020:	f000 fc32 	bl	8009888 <TIM_CCxChannelCmd>
      break;
 8009024:	e016      	b.n	8009054 <HAL_TIM_Encoder_Start+0x54>
    }

    case TIM_CHANNEL_2:
    {
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	681b      	ldr	r3, [r3, #0]
 800902a:	2201      	movs	r2, #1
 800902c:	2104      	movs	r1, #4
 800902e:	4618      	mov	r0, r3
 8009030:	f000 fc2a 	bl	8009888 <TIM_CCxChannelCmd>
      break;
 8009034:	e00e      	b.n	8009054 <HAL_TIM_Encoder_Start+0x54>
    }

    default :
    {
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	681b      	ldr	r3, [r3, #0]
 800903a:	2201      	movs	r2, #1
 800903c:	2100      	movs	r1, #0
 800903e:	4618      	mov	r0, r3
 8009040:	f000 fc22 	bl	8009888 <TIM_CCxChannelCmd>
      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8009044:	687b      	ldr	r3, [r7, #4]
 8009046:	681b      	ldr	r3, [r3, #0]
 8009048:	2201      	movs	r2, #1
 800904a:	2104      	movs	r1, #4
 800904c:	4618      	mov	r0, r3
 800904e:	f000 fc1b 	bl	8009888 <TIM_CCxChannelCmd>
      break;
 8009052:	bf00      	nop
    }
  }
  /* Enable the Peripheral */
  __HAL_TIM_ENABLE(htim);
 8009054:	687b      	ldr	r3, [r7, #4]
 8009056:	681b      	ldr	r3, [r3, #0]
 8009058:	681a      	ldr	r2, [r3, #0]
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	681b      	ldr	r3, [r3, #0]
 800905e:	f042 0201 	orr.w	r2, r2, #1
 8009062:	601a      	str	r2, [r3, #0]

  /* Return function status */
  return HAL_OK;
 8009064:	2300      	movs	r3, #0
}
 8009066:	4618      	mov	r0, r3
 8009068:	3708      	adds	r7, #8
 800906a:	46bd      	mov	sp, r7
 800906c:	bd80      	pop	{r7, pc}

0800906e <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800906e:	b580      	push	{r7, lr}
 8009070:	b082      	sub	sp, #8
 8009072:	af00      	add	r7, sp, #0
 8009074:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009076:	687b      	ldr	r3, [r7, #4]
 8009078:	681b      	ldr	r3, [r3, #0]
 800907a:	691b      	ldr	r3, [r3, #16]
 800907c:	f003 0302 	and.w	r3, r3, #2
 8009080:	2b02      	cmp	r3, #2
 8009082:	d122      	bne.n	80090ca <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	681b      	ldr	r3, [r3, #0]
 8009088:	68db      	ldr	r3, [r3, #12]
 800908a:	f003 0302 	and.w	r3, r3, #2
 800908e:	2b02      	cmp	r3, #2
 8009090:	d11b      	bne.n	80090ca <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8009092:	687b      	ldr	r3, [r7, #4]
 8009094:	681b      	ldr	r3, [r3, #0]
 8009096:	f06f 0202 	mvn.w	r2, #2
 800909a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800909c:	687b      	ldr	r3, [r7, #4]
 800909e:	2201      	movs	r2, #1
 80090a0:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80090a2:	687b      	ldr	r3, [r7, #4]
 80090a4:	681b      	ldr	r3, [r3, #0]
 80090a6:	699b      	ldr	r3, [r3, #24]
 80090a8:	f003 0303 	and.w	r3, r3, #3
 80090ac:	2b00      	cmp	r3, #0
 80090ae:	d003      	beq.n	80090b8 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80090b0:	6878      	ldr	r0, [r7, #4]
 80090b2:	f000 f9bf 	bl	8009434 <HAL_TIM_IC_CaptureCallback>
 80090b6:	e005      	b.n	80090c4 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80090b8:	6878      	ldr	r0, [r7, #4]
 80090ba:	f000 f9b1 	bl	8009420 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80090be:	6878      	ldr	r0, [r7, #4]
 80090c0:	f000 f9c2 	bl	8009448 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80090c4:	687b      	ldr	r3, [r7, #4]
 80090c6:	2200      	movs	r2, #0
 80090c8:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	691b      	ldr	r3, [r3, #16]
 80090d0:	f003 0304 	and.w	r3, r3, #4
 80090d4:	2b04      	cmp	r3, #4
 80090d6:	d122      	bne.n	800911e <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80090d8:	687b      	ldr	r3, [r7, #4]
 80090da:	681b      	ldr	r3, [r3, #0]
 80090dc:	68db      	ldr	r3, [r3, #12]
 80090de:	f003 0304 	and.w	r3, r3, #4
 80090e2:	2b04      	cmp	r3, #4
 80090e4:	d11b      	bne.n	800911e <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80090e6:	687b      	ldr	r3, [r7, #4]
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	f06f 0204 	mvn.w	r2, #4
 80090ee:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	2202      	movs	r2, #2
 80090f4:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	681b      	ldr	r3, [r3, #0]
 80090fa:	699b      	ldr	r3, [r3, #24]
 80090fc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009100:	2b00      	cmp	r3, #0
 8009102:	d003      	beq.n	800910c <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009104:	6878      	ldr	r0, [r7, #4]
 8009106:	f000 f995 	bl	8009434 <HAL_TIM_IC_CaptureCallback>
 800910a:	e005      	b.n	8009118 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800910c:	6878      	ldr	r0, [r7, #4]
 800910e:	f000 f987 	bl	8009420 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009112:	6878      	ldr	r0, [r7, #4]
 8009114:	f000 f998 	bl	8009448 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009118:	687b      	ldr	r3, [r7, #4]
 800911a:	2200      	movs	r2, #0
 800911c:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800911e:	687b      	ldr	r3, [r7, #4]
 8009120:	681b      	ldr	r3, [r3, #0]
 8009122:	691b      	ldr	r3, [r3, #16]
 8009124:	f003 0308 	and.w	r3, r3, #8
 8009128:	2b08      	cmp	r3, #8
 800912a:	d122      	bne.n	8009172 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800912c:	687b      	ldr	r3, [r7, #4]
 800912e:	681b      	ldr	r3, [r3, #0]
 8009130:	68db      	ldr	r3, [r3, #12]
 8009132:	f003 0308 	and.w	r3, r3, #8
 8009136:	2b08      	cmp	r3, #8
 8009138:	d11b      	bne.n	8009172 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800913a:	687b      	ldr	r3, [r7, #4]
 800913c:	681b      	ldr	r3, [r3, #0]
 800913e:	f06f 0208 	mvn.w	r2, #8
 8009142:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	2204      	movs	r2, #4
 8009148:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	681b      	ldr	r3, [r3, #0]
 800914e:	69db      	ldr	r3, [r3, #28]
 8009150:	f003 0303 	and.w	r3, r3, #3
 8009154:	2b00      	cmp	r3, #0
 8009156:	d003      	beq.n	8009160 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009158:	6878      	ldr	r0, [r7, #4]
 800915a:	f000 f96b 	bl	8009434 <HAL_TIM_IC_CaptureCallback>
 800915e:	e005      	b.n	800916c <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009160:	6878      	ldr	r0, [r7, #4]
 8009162:	f000 f95d 	bl	8009420 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009166:	6878      	ldr	r0, [r7, #4]
 8009168:	f000 f96e 	bl	8009448 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800916c:	687b      	ldr	r3, [r7, #4]
 800916e:	2200      	movs	r2, #0
 8009170:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	691b      	ldr	r3, [r3, #16]
 8009178:	f003 0310 	and.w	r3, r3, #16
 800917c:	2b10      	cmp	r3, #16
 800917e:	d122      	bne.n	80091c6 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	681b      	ldr	r3, [r3, #0]
 8009184:	68db      	ldr	r3, [r3, #12]
 8009186:	f003 0310 	and.w	r3, r3, #16
 800918a:	2b10      	cmp	r3, #16
 800918c:	d11b      	bne.n	80091c6 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	f06f 0210 	mvn.w	r2, #16
 8009196:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	2208      	movs	r2, #8
 800919c:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800919e:	687b      	ldr	r3, [r7, #4]
 80091a0:	681b      	ldr	r3, [r3, #0]
 80091a2:	69db      	ldr	r3, [r3, #28]
 80091a4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80091a8:	2b00      	cmp	r3, #0
 80091aa:	d003      	beq.n	80091b4 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80091ac:	6878      	ldr	r0, [r7, #4]
 80091ae:	f000 f941 	bl	8009434 <HAL_TIM_IC_CaptureCallback>
 80091b2:	e005      	b.n	80091c0 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80091b4:	6878      	ldr	r0, [r7, #4]
 80091b6:	f000 f933 	bl	8009420 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80091ba:	6878      	ldr	r0, [r7, #4]
 80091bc:	f000 f944 	bl	8009448 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	2200      	movs	r2, #0
 80091c4:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80091c6:	687b      	ldr	r3, [r7, #4]
 80091c8:	681b      	ldr	r3, [r3, #0]
 80091ca:	691b      	ldr	r3, [r3, #16]
 80091cc:	f003 0301 	and.w	r3, r3, #1
 80091d0:	2b01      	cmp	r3, #1
 80091d2:	d10e      	bne.n	80091f2 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80091d4:	687b      	ldr	r3, [r7, #4]
 80091d6:	681b      	ldr	r3, [r3, #0]
 80091d8:	68db      	ldr	r3, [r3, #12]
 80091da:	f003 0301 	and.w	r3, r3, #1
 80091de:	2b01      	cmp	r3, #1
 80091e0:	d107      	bne.n	80091f2 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	681b      	ldr	r3, [r3, #0]
 80091e6:	f06f 0201 	mvn.w	r2, #1
 80091ea:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80091ec:	6878      	ldr	r0, [r7, #4]
 80091ee:	f000 f90d 	bl	800940c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80091f2:	687b      	ldr	r3, [r7, #4]
 80091f4:	681b      	ldr	r3, [r3, #0]
 80091f6:	691b      	ldr	r3, [r3, #16]
 80091f8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80091fc:	2b80      	cmp	r3, #128	; 0x80
 80091fe:	d10e      	bne.n	800921e <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009200:	687b      	ldr	r3, [r7, #4]
 8009202:	681b      	ldr	r3, [r3, #0]
 8009204:	68db      	ldr	r3, [r3, #12]
 8009206:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800920a:	2b80      	cmp	r3, #128	; 0x80
 800920c:	d107      	bne.n	800921e <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800920e:	687b      	ldr	r3, [r7, #4]
 8009210:	681b      	ldr	r3, [r3, #0]
 8009212:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009216:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8009218:	6878      	ldr	r0, [r7, #4]
 800921a:	f000 fbd3 	bl	80099c4 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	681b      	ldr	r3, [r3, #0]
 8009222:	691b      	ldr	r3, [r3, #16]
 8009224:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009228:	2b40      	cmp	r3, #64	; 0x40
 800922a:	d10e      	bne.n	800924a <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800922c:	687b      	ldr	r3, [r7, #4]
 800922e:	681b      	ldr	r3, [r3, #0]
 8009230:	68db      	ldr	r3, [r3, #12]
 8009232:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009236:	2b40      	cmp	r3, #64	; 0x40
 8009238:	d107      	bne.n	800924a <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800923a:	687b      	ldr	r3, [r7, #4]
 800923c:	681b      	ldr	r3, [r3, #0]
 800923e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009242:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8009244:	6878      	ldr	r0, [r7, #4]
 8009246:	f000 f909 	bl	800945c <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800924a:	687b      	ldr	r3, [r7, #4]
 800924c:	681b      	ldr	r3, [r3, #0]
 800924e:	691b      	ldr	r3, [r3, #16]
 8009250:	f003 0320 	and.w	r3, r3, #32
 8009254:	2b20      	cmp	r3, #32
 8009256:	d10e      	bne.n	8009276 <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8009258:	687b      	ldr	r3, [r7, #4]
 800925a:	681b      	ldr	r3, [r3, #0]
 800925c:	68db      	ldr	r3, [r3, #12]
 800925e:	f003 0320 	and.w	r3, r3, #32
 8009262:	2b20      	cmp	r3, #32
 8009264:	d107      	bne.n	8009276 <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	681b      	ldr	r3, [r3, #0]
 800926a:	f06f 0220 	mvn.w	r2, #32
 800926e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8009270:	6878      	ldr	r0, [r7, #4]
 8009272:	f000 fb9d 	bl	80099b0 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8009276:	bf00      	nop
 8009278:	3708      	adds	r7, #8
 800927a:	46bd      	mov	sp, r7
 800927c:	bd80      	pop	{r7, pc}
	...

08009280 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8009280:	b580      	push	{r7, lr}
 8009282:	b084      	sub	sp, #16
 8009284:	af00      	add	r7, sp, #0
 8009286:	60f8      	str	r0, [r7, #12]
 8009288:	60b9      	str	r1, [r7, #8]
 800928a:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 800928c:	68fb      	ldr	r3, [r7, #12]
 800928e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009292:	2b01      	cmp	r3, #1
 8009294:	d101      	bne.n	800929a <HAL_TIM_PWM_ConfigChannel+0x1a>
 8009296:	2302      	movs	r3, #2
 8009298:	e0b4      	b.n	8009404 <HAL_TIM_PWM_ConfigChannel+0x184>
 800929a:	68fb      	ldr	r3, [r7, #12]
 800929c:	2201      	movs	r2, #1
 800929e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80092a2:	68fb      	ldr	r3, [r7, #12]
 80092a4:	2202      	movs	r2, #2
 80092a6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 80092aa:	687b      	ldr	r3, [r7, #4]
 80092ac:	2b0c      	cmp	r3, #12
 80092ae:	f200 809f 	bhi.w	80093f0 <HAL_TIM_PWM_ConfigChannel+0x170>
 80092b2:	a201      	add	r2, pc, #4	; (adr r2, 80092b8 <HAL_TIM_PWM_ConfigChannel+0x38>)
 80092b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80092b8:	080092ed 	.word	0x080092ed
 80092bc:	080093f1 	.word	0x080093f1
 80092c0:	080093f1 	.word	0x080093f1
 80092c4:	080093f1 	.word	0x080093f1
 80092c8:	0800932d 	.word	0x0800932d
 80092cc:	080093f1 	.word	0x080093f1
 80092d0:	080093f1 	.word	0x080093f1
 80092d4:	080093f1 	.word	0x080093f1
 80092d8:	0800936f 	.word	0x0800936f
 80092dc:	080093f1 	.word	0x080093f1
 80092e0:	080093f1 	.word	0x080093f1
 80092e4:	080093f1 	.word	0x080093f1
 80092e8:	080093af 	.word	0x080093af
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80092ec:	68fb      	ldr	r3, [r7, #12]
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	68b9      	ldr	r1, [r7, #8]
 80092f2:	4618      	mov	r0, r3
 80092f4:	f000 f93c 	bl	8009570 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80092f8:	68fb      	ldr	r3, [r7, #12]
 80092fa:	681b      	ldr	r3, [r3, #0]
 80092fc:	699a      	ldr	r2, [r3, #24]
 80092fe:	68fb      	ldr	r3, [r7, #12]
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	f042 0208 	orr.w	r2, r2, #8
 8009306:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8009308:	68fb      	ldr	r3, [r7, #12]
 800930a:	681b      	ldr	r3, [r3, #0]
 800930c:	699a      	ldr	r2, [r3, #24]
 800930e:	68fb      	ldr	r3, [r7, #12]
 8009310:	681b      	ldr	r3, [r3, #0]
 8009312:	f022 0204 	bic.w	r2, r2, #4
 8009316:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8009318:	68fb      	ldr	r3, [r7, #12]
 800931a:	681b      	ldr	r3, [r3, #0]
 800931c:	6999      	ldr	r1, [r3, #24]
 800931e:	68bb      	ldr	r3, [r7, #8]
 8009320:	691a      	ldr	r2, [r3, #16]
 8009322:	68fb      	ldr	r3, [r7, #12]
 8009324:	681b      	ldr	r3, [r3, #0]
 8009326:	430a      	orrs	r2, r1
 8009328:	619a      	str	r2, [r3, #24]
      break;
 800932a:	e062      	b.n	80093f2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800932c:	68fb      	ldr	r3, [r7, #12]
 800932e:	681b      	ldr	r3, [r3, #0]
 8009330:	68b9      	ldr	r1, [r7, #8]
 8009332:	4618      	mov	r0, r3
 8009334:	f000 f982 	bl	800963c <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8009338:	68fb      	ldr	r3, [r7, #12]
 800933a:	681b      	ldr	r3, [r3, #0]
 800933c:	699a      	ldr	r2, [r3, #24]
 800933e:	68fb      	ldr	r3, [r7, #12]
 8009340:	681b      	ldr	r3, [r3, #0]
 8009342:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009346:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8009348:	68fb      	ldr	r3, [r7, #12]
 800934a:	681b      	ldr	r3, [r3, #0]
 800934c:	699a      	ldr	r2, [r3, #24]
 800934e:	68fb      	ldr	r3, [r7, #12]
 8009350:	681b      	ldr	r3, [r3, #0]
 8009352:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009356:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8009358:	68fb      	ldr	r3, [r7, #12]
 800935a:	681b      	ldr	r3, [r3, #0]
 800935c:	6999      	ldr	r1, [r3, #24]
 800935e:	68bb      	ldr	r3, [r7, #8]
 8009360:	691b      	ldr	r3, [r3, #16]
 8009362:	021a      	lsls	r2, r3, #8
 8009364:	68fb      	ldr	r3, [r7, #12]
 8009366:	681b      	ldr	r3, [r3, #0]
 8009368:	430a      	orrs	r2, r1
 800936a:	619a      	str	r2, [r3, #24]
      break;
 800936c:	e041      	b.n	80093f2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800936e:	68fb      	ldr	r3, [r7, #12]
 8009370:	681b      	ldr	r3, [r3, #0]
 8009372:	68b9      	ldr	r1, [r7, #8]
 8009374:	4618      	mov	r0, r3
 8009376:	f000 f9cd 	bl	8009714 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800937a:	68fb      	ldr	r3, [r7, #12]
 800937c:	681b      	ldr	r3, [r3, #0]
 800937e:	69da      	ldr	r2, [r3, #28]
 8009380:	68fb      	ldr	r3, [r7, #12]
 8009382:	681b      	ldr	r3, [r3, #0]
 8009384:	f042 0208 	orr.w	r2, r2, #8
 8009388:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800938a:	68fb      	ldr	r3, [r7, #12]
 800938c:	681b      	ldr	r3, [r3, #0]
 800938e:	69da      	ldr	r2, [r3, #28]
 8009390:	68fb      	ldr	r3, [r7, #12]
 8009392:	681b      	ldr	r3, [r3, #0]
 8009394:	f022 0204 	bic.w	r2, r2, #4
 8009398:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800939a:	68fb      	ldr	r3, [r7, #12]
 800939c:	681b      	ldr	r3, [r3, #0]
 800939e:	69d9      	ldr	r1, [r3, #28]
 80093a0:	68bb      	ldr	r3, [r7, #8]
 80093a2:	691a      	ldr	r2, [r3, #16]
 80093a4:	68fb      	ldr	r3, [r7, #12]
 80093a6:	681b      	ldr	r3, [r3, #0]
 80093a8:	430a      	orrs	r2, r1
 80093aa:	61da      	str	r2, [r3, #28]
      break;
 80093ac:	e021      	b.n	80093f2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80093ae:	68fb      	ldr	r3, [r7, #12]
 80093b0:	681b      	ldr	r3, [r3, #0]
 80093b2:	68b9      	ldr	r1, [r7, #8]
 80093b4:	4618      	mov	r0, r3
 80093b6:	f000 fa17 	bl	80097e8 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80093ba:	68fb      	ldr	r3, [r7, #12]
 80093bc:	681b      	ldr	r3, [r3, #0]
 80093be:	69da      	ldr	r2, [r3, #28]
 80093c0:	68fb      	ldr	r3, [r7, #12]
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80093c8:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80093ca:	68fb      	ldr	r3, [r7, #12]
 80093cc:	681b      	ldr	r3, [r3, #0]
 80093ce:	69da      	ldr	r2, [r3, #28]
 80093d0:	68fb      	ldr	r3, [r7, #12]
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80093d8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80093da:	68fb      	ldr	r3, [r7, #12]
 80093dc:	681b      	ldr	r3, [r3, #0]
 80093de:	69d9      	ldr	r1, [r3, #28]
 80093e0:	68bb      	ldr	r3, [r7, #8]
 80093e2:	691b      	ldr	r3, [r3, #16]
 80093e4:	021a      	lsls	r2, r3, #8
 80093e6:	68fb      	ldr	r3, [r7, #12]
 80093e8:	681b      	ldr	r3, [r3, #0]
 80093ea:	430a      	orrs	r2, r1
 80093ec:	61da      	str	r2, [r3, #28]
      break;
 80093ee:	e000      	b.n	80093f2 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 80093f0:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 80093f2:	68fb      	ldr	r3, [r7, #12]
 80093f4:	2201      	movs	r2, #1
 80093f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80093fa:	68fb      	ldr	r3, [r7, #12]
 80093fc:	2200      	movs	r2, #0
 80093fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8009402:	2300      	movs	r3, #0
}
 8009404:	4618      	mov	r0, r3
 8009406:	3710      	adds	r7, #16
 8009408:	46bd      	mov	sp, r7
 800940a:	bd80      	pop	{r7, pc}

0800940c <HAL_TIM_PeriodElapsedCallback>:
  * @brief  Period elapsed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800940c:	b480      	push	{r7}
 800940e:	b083      	sub	sp, #12
 8009410:	af00      	add	r7, sp, #0
 8009412:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
   */
}
 8009414:	bf00      	nop
 8009416:	370c      	adds	r7, #12
 8009418:	46bd      	mov	sp, r7
 800941a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800941e:	4770      	bx	lr

08009420 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8009420:	b480      	push	{r7}
 8009422:	b083      	sub	sp, #12
 8009424:	af00      	add	r7, sp, #0
 8009426:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8009428:	bf00      	nop
 800942a:	370c      	adds	r7, #12
 800942c:	46bd      	mov	sp, r7
 800942e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009432:	4770      	bx	lr

08009434 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8009434:	b480      	push	{r7}
 8009436:	b083      	sub	sp, #12
 8009438:	af00      	add	r7, sp, #0
 800943a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800943c:	bf00      	nop
 800943e:	370c      	adds	r7, #12
 8009440:	46bd      	mov	sp, r7
 8009442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009446:	4770      	bx	lr

08009448 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8009448:	b480      	push	{r7}
 800944a:	b083      	sub	sp, #12
 800944c:	af00      	add	r7, sp, #0
 800944e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8009450:	bf00      	nop
 8009452:	370c      	adds	r7, #12
 8009454:	46bd      	mov	sp, r7
 8009456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800945a:	4770      	bx	lr

0800945c <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800945c:	b480      	push	{r7}
 800945e:	b083      	sub	sp, #12
 8009460:	af00      	add	r7, sp, #0
 8009462:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8009464:	bf00      	nop
 8009466:	370c      	adds	r7, #12
 8009468:	46bd      	mov	sp, r7
 800946a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800946e:	4770      	bx	lr

08009470 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8009470:	b480      	push	{r7}
 8009472:	b085      	sub	sp, #20
 8009474:	af00      	add	r7, sp, #0
 8009476:	6078      	str	r0, [r7, #4]
 8009478:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009480:	687b      	ldr	r3, [r7, #4]
 8009482:	4a34      	ldr	r2, [pc, #208]	; (8009554 <TIM_Base_SetConfig+0xe4>)
 8009484:	4293      	cmp	r3, r2
 8009486:	d00f      	beq.n	80094a8 <TIM_Base_SetConfig+0x38>
 8009488:	687b      	ldr	r3, [r7, #4]
 800948a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800948e:	d00b      	beq.n	80094a8 <TIM_Base_SetConfig+0x38>
 8009490:	687b      	ldr	r3, [r7, #4]
 8009492:	4a31      	ldr	r2, [pc, #196]	; (8009558 <TIM_Base_SetConfig+0xe8>)
 8009494:	4293      	cmp	r3, r2
 8009496:	d007      	beq.n	80094a8 <TIM_Base_SetConfig+0x38>
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	4a30      	ldr	r2, [pc, #192]	; (800955c <TIM_Base_SetConfig+0xec>)
 800949c:	4293      	cmp	r3, r2
 800949e:	d003      	beq.n	80094a8 <TIM_Base_SetConfig+0x38>
 80094a0:	687b      	ldr	r3, [r7, #4]
 80094a2:	4a2f      	ldr	r2, [pc, #188]	; (8009560 <TIM_Base_SetConfig+0xf0>)
 80094a4:	4293      	cmp	r3, r2
 80094a6:	d108      	bne.n	80094ba <TIM_Base_SetConfig+0x4a>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80094a8:	68fb      	ldr	r3, [r7, #12]
 80094aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80094ae:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80094b0:	683b      	ldr	r3, [r7, #0]
 80094b2:	685b      	ldr	r3, [r3, #4]
 80094b4:	68fa      	ldr	r2, [r7, #12]
 80094b6:	4313      	orrs	r3, r2
 80094b8:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80094ba:	687b      	ldr	r3, [r7, #4]
 80094bc:	4a25      	ldr	r2, [pc, #148]	; (8009554 <TIM_Base_SetConfig+0xe4>)
 80094be:	4293      	cmp	r3, r2
 80094c0:	d01b      	beq.n	80094fa <TIM_Base_SetConfig+0x8a>
 80094c2:	687b      	ldr	r3, [r7, #4]
 80094c4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80094c8:	d017      	beq.n	80094fa <TIM_Base_SetConfig+0x8a>
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	4a22      	ldr	r2, [pc, #136]	; (8009558 <TIM_Base_SetConfig+0xe8>)
 80094ce:	4293      	cmp	r3, r2
 80094d0:	d013      	beq.n	80094fa <TIM_Base_SetConfig+0x8a>
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	4a21      	ldr	r2, [pc, #132]	; (800955c <TIM_Base_SetConfig+0xec>)
 80094d6:	4293      	cmp	r3, r2
 80094d8:	d00f      	beq.n	80094fa <TIM_Base_SetConfig+0x8a>
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	4a20      	ldr	r2, [pc, #128]	; (8009560 <TIM_Base_SetConfig+0xf0>)
 80094de:	4293      	cmp	r3, r2
 80094e0:	d00b      	beq.n	80094fa <TIM_Base_SetConfig+0x8a>
 80094e2:	687b      	ldr	r3, [r7, #4]
 80094e4:	4a1f      	ldr	r2, [pc, #124]	; (8009564 <TIM_Base_SetConfig+0xf4>)
 80094e6:	4293      	cmp	r3, r2
 80094e8:	d007      	beq.n	80094fa <TIM_Base_SetConfig+0x8a>
 80094ea:	687b      	ldr	r3, [r7, #4]
 80094ec:	4a1e      	ldr	r2, [pc, #120]	; (8009568 <TIM_Base_SetConfig+0xf8>)
 80094ee:	4293      	cmp	r3, r2
 80094f0:	d003      	beq.n	80094fa <TIM_Base_SetConfig+0x8a>
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	4a1d      	ldr	r2, [pc, #116]	; (800956c <TIM_Base_SetConfig+0xfc>)
 80094f6:	4293      	cmp	r3, r2
 80094f8:	d108      	bne.n	800950c <TIM_Base_SetConfig+0x9c>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80094fa:	68fb      	ldr	r3, [r7, #12]
 80094fc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009500:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009502:	683b      	ldr	r3, [r7, #0]
 8009504:	68db      	ldr	r3, [r3, #12]
 8009506:	68fa      	ldr	r2, [r7, #12]
 8009508:	4313      	orrs	r3, r2
 800950a:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800950c:	68fb      	ldr	r3, [r7, #12]
 800950e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8009512:	683b      	ldr	r3, [r7, #0]
 8009514:	695b      	ldr	r3, [r3, #20]
 8009516:	4313      	orrs	r3, r2
 8009518:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	68fa      	ldr	r2, [r7, #12]
 800951e:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009520:	683b      	ldr	r3, [r7, #0]
 8009522:	689a      	ldr	r2, [r3, #8]
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8009528:	683b      	ldr	r3, [r7, #0]
 800952a:	681a      	ldr	r2, [r3, #0]
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009530:	687b      	ldr	r3, [r7, #4]
 8009532:	4a08      	ldr	r2, [pc, #32]	; (8009554 <TIM_Base_SetConfig+0xe4>)
 8009534:	4293      	cmp	r3, r2
 8009536:	d103      	bne.n	8009540 <TIM_Base_SetConfig+0xd0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009538:	683b      	ldr	r3, [r7, #0]
 800953a:	691a      	ldr	r2, [r3, #16]
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009540:	687b      	ldr	r3, [r7, #4]
 8009542:	2201      	movs	r2, #1
 8009544:	615a      	str	r2, [r3, #20]
}
 8009546:	bf00      	nop
 8009548:	3714      	adds	r7, #20
 800954a:	46bd      	mov	sp, r7
 800954c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009550:	4770      	bx	lr
 8009552:	bf00      	nop
 8009554:	40010000 	.word	0x40010000
 8009558:	40000400 	.word	0x40000400
 800955c:	40000800 	.word	0x40000800
 8009560:	40000c00 	.word	0x40000c00
 8009564:	40014000 	.word	0x40014000
 8009568:	40014400 	.word	0x40014400
 800956c:	40014800 	.word	0x40014800

08009570 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8009570:	b480      	push	{r7}
 8009572:	b087      	sub	sp, #28
 8009574:	af00      	add	r7, sp, #0
 8009576:	6078      	str	r0, [r7, #4]
 8009578:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800957a:	687b      	ldr	r3, [r7, #4]
 800957c:	6a1b      	ldr	r3, [r3, #32]
 800957e:	f023 0201 	bic.w	r2, r3, #1
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009586:	687b      	ldr	r3, [r7, #4]
 8009588:	6a1b      	ldr	r3, [r3, #32]
 800958a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	685b      	ldr	r3, [r3, #4]
 8009590:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8009592:	687b      	ldr	r3, [r7, #4]
 8009594:	699b      	ldr	r3, [r3, #24]
 8009596:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8009598:	68fb      	ldr	r3, [r7, #12]
 800959a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800959e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 80095a0:	68fb      	ldr	r3, [r7, #12]
 80095a2:	f023 0303 	bic.w	r3, r3, #3
 80095a6:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80095a8:	683b      	ldr	r3, [r7, #0]
 80095aa:	681b      	ldr	r3, [r3, #0]
 80095ac:	68fa      	ldr	r2, [r7, #12]
 80095ae:	4313      	orrs	r3, r2
 80095b0:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 80095b2:	697b      	ldr	r3, [r7, #20]
 80095b4:	f023 0302 	bic.w	r3, r3, #2
 80095b8:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 80095ba:	683b      	ldr	r3, [r7, #0]
 80095bc:	689b      	ldr	r3, [r3, #8]
 80095be:	697a      	ldr	r2, [r7, #20]
 80095c0:	4313      	orrs	r3, r2
 80095c2:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 80095c4:	687b      	ldr	r3, [r7, #4]
 80095c6:	4a1c      	ldr	r2, [pc, #112]	; (8009638 <TIM_OC1_SetConfig+0xc8>)
 80095c8:	4293      	cmp	r3, r2
 80095ca:	d10c      	bne.n	80095e6 <TIM_OC1_SetConfig+0x76>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 80095cc:	697b      	ldr	r3, [r7, #20]
 80095ce:	f023 0308 	bic.w	r3, r3, #8
 80095d2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 80095d4:	683b      	ldr	r3, [r7, #0]
 80095d6:	68db      	ldr	r3, [r3, #12]
 80095d8:	697a      	ldr	r2, [r7, #20]
 80095da:	4313      	orrs	r3, r2
 80095dc:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 80095de:	697b      	ldr	r3, [r7, #20]
 80095e0:	f023 0304 	bic.w	r3, r3, #4
 80095e4:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80095e6:	687b      	ldr	r3, [r7, #4]
 80095e8:	4a13      	ldr	r2, [pc, #76]	; (8009638 <TIM_OC1_SetConfig+0xc8>)
 80095ea:	4293      	cmp	r3, r2
 80095ec:	d111      	bne.n	8009612 <TIM_OC1_SetConfig+0xa2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 80095ee:	693b      	ldr	r3, [r7, #16]
 80095f0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80095f4:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 80095f6:	693b      	ldr	r3, [r7, #16]
 80095f8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80095fc:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 80095fe:	683b      	ldr	r3, [r7, #0]
 8009600:	695b      	ldr	r3, [r3, #20]
 8009602:	693a      	ldr	r2, [r7, #16]
 8009604:	4313      	orrs	r3, r2
 8009606:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8009608:	683b      	ldr	r3, [r7, #0]
 800960a:	699b      	ldr	r3, [r3, #24]
 800960c:	693a      	ldr	r2, [r7, #16]
 800960e:	4313      	orrs	r3, r2
 8009610:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	693a      	ldr	r2, [r7, #16]
 8009616:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8009618:	687b      	ldr	r3, [r7, #4]
 800961a:	68fa      	ldr	r2, [r7, #12]
 800961c:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800961e:	683b      	ldr	r3, [r7, #0]
 8009620:	685a      	ldr	r2, [r3, #4]
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009626:	687b      	ldr	r3, [r7, #4]
 8009628:	697a      	ldr	r2, [r7, #20]
 800962a:	621a      	str	r2, [r3, #32]
}
 800962c:	bf00      	nop
 800962e:	371c      	adds	r7, #28
 8009630:	46bd      	mov	sp, r7
 8009632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009636:	4770      	bx	lr
 8009638:	40010000 	.word	0x40010000

0800963c <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800963c:	b480      	push	{r7}
 800963e:	b087      	sub	sp, #28
 8009640:	af00      	add	r7, sp, #0
 8009642:	6078      	str	r0, [r7, #4]
 8009644:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	6a1b      	ldr	r3, [r3, #32]
 800964a:	f023 0210 	bic.w	r2, r3, #16
 800964e:	687b      	ldr	r3, [r7, #4]
 8009650:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	6a1b      	ldr	r3, [r3, #32]
 8009656:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009658:	687b      	ldr	r3, [r7, #4]
 800965a:	685b      	ldr	r3, [r3, #4]
 800965c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	699b      	ldr	r3, [r3, #24]
 8009662:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8009664:	68fb      	ldr	r3, [r7, #12]
 8009666:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800966a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800966c:	68fb      	ldr	r3, [r7, #12]
 800966e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009672:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009674:	683b      	ldr	r3, [r7, #0]
 8009676:	681b      	ldr	r3, [r3, #0]
 8009678:	021b      	lsls	r3, r3, #8
 800967a:	68fa      	ldr	r2, [r7, #12]
 800967c:	4313      	orrs	r3, r2
 800967e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8009680:	697b      	ldr	r3, [r7, #20]
 8009682:	f023 0320 	bic.w	r3, r3, #32
 8009686:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8009688:	683b      	ldr	r3, [r7, #0]
 800968a:	689b      	ldr	r3, [r3, #8]
 800968c:	011b      	lsls	r3, r3, #4
 800968e:	697a      	ldr	r2, [r7, #20]
 8009690:	4313      	orrs	r3, r2
 8009692:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	4a1e      	ldr	r2, [pc, #120]	; (8009710 <TIM_OC2_SetConfig+0xd4>)
 8009698:	4293      	cmp	r3, r2
 800969a:	d10d      	bne.n	80096b8 <TIM_OC2_SetConfig+0x7c>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800969c:	697b      	ldr	r3, [r7, #20]
 800969e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80096a2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80096a4:	683b      	ldr	r3, [r7, #0]
 80096a6:	68db      	ldr	r3, [r3, #12]
 80096a8:	011b      	lsls	r3, r3, #4
 80096aa:	697a      	ldr	r2, [r7, #20]
 80096ac:	4313      	orrs	r3, r2
 80096ae:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 80096b0:	697b      	ldr	r3, [r7, #20]
 80096b2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80096b6:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	4a15      	ldr	r2, [pc, #84]	; (8009710 <TIM_OC2_SetConfig+0xd4>)
 80096bc:	4293      	cmp	r3, r2
 80096be:	d113      	bne.n	80096e8 <TIM_OC2_SetConfig+0xac>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 80096c0:	693b      	ldr	r3, [r7, #16]
 80096c2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80096c6:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80096c8:	693b      	ldr	r3, [r7, #16]
 80096ca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80096ce:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 80096d0:	683b      	ldr	r3, [r7, #0]
 80096d2:	695b      	ldr	r3, [r3, #20]
 80096d4:	009b      	lsls	r3, r3, #2
 80096d6:	693a      	ldr	r2, [r7, #16]
 80096d8:	4313      	orrs	r3, r2
 80096da:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80096dc:	683b      	ldr	r3, [r7, #0]
 80096de:	699b      	ldr	r3, [r3, #24]
 80096e0:	009b      	lsls	r3, r3, #2
 80096e2:	693a      	ldr	r2, [r7, #16]
 80096e4:	4313      	orrs	r3, r2
 80096e6:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80096e8:	687b      	ldr	r3, [r7, #4]
 80096ea:	693a      	ldr	r2, [r7, #16]
 80096ec:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80096ee:	687b      	ldr	r3, [r7, #4]
 80096f0:	68fa      	ldr	r2, [r7, #12]
 80096f2:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 80096f4:	683b      	ldr	r3, [r7, #0]
 80096f6:	685a      	ldr	r2, [r3, #4]
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	697a      	ldr	r2, [r7, #20]
 8009700:	621a      	str	r2, [r3, #32]
}
 8009702:	bf00      	nop
 8009704:	371c      	adds	r7, #28
 8009706:	46bd      	mov	sp, r7
 8009708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800970c:	4770      	bx	lr
 800970e:	bf00      	nop
 8009710:	40010000 	.word	0x40010000

08009714 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8009714:	b480      	push	{r7}
 8009716:	b087      	sub	sp, #28
 8009718:	af00      	add	r7, sp, #0
 800971a:	6078      	str	r0, [r7, #4]
 800971c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	6a1b      	ldr	r3, [r3, #32]
 8009722:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8009726:	687b      	ldr	r3, [r7, #4]
 8009728:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800972a:	687b      	ldr	r3, [r7, #4]
 800972c:	6a1b      	ldr	r3, [r3, #32]
 800972e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009730:	687b      	ldr	r3, [r7, #4]
 8009732:	685b      	ldr	r3, [r3, #4]
 8009734:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8009736:	687b      	ldr	r3, [r7, #4]
 8009738:	69db      	ldr	r3, [r3, #28]
 800973a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800973c:	68fb      	ldr	r3, [r7, #12]
 800973e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009742:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8009744:	68fb      	ldr	r3, [r7, #12]
 8009746:	f023 0303 	bic.w	r3, r3, #3
 800974a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800974c:	683b      	ldr	r3, [r7, #0]
 800974e:	681b      	ldr	r3, [r3, #0]
 8009750:	68fa      	ldr	r2, [r7, #12]
 8009752:	4313      	orrs	r3, r2
 8009754:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8009756:	697b      	ldr	r3, [r7, #20]
 8009758:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800975c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800975e:	683b      	ldr	r3, [r7, #0]
 8009760:	689b      	ldr	r3, [r3, #8]
 8009762:	021b      	lsls	r3, r3, #8
 8009764:	697a      	ldr	r2, [r7, #20]
 8009766:	4313      	orrs	r3, r2
 8009768:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800976a:	687b      	ldr	r3, [r7, #4]
 800976c:	4a1d      	ldr	r2, [pc, #116]	; (80097e4 <TIM_OC3_SetConfig+0xd0>)
 800976e:	4293      	cmp	r3, r2
 8009770:	d10d      	bne.n	800978e <TIM_OC3_SetConfig+0x7a>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8009772:	697b      	ldr	r3, [r7, #20]
 8009774:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8009778:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800977a:	683b      	ldr	r3, [r7, #0]
 800977c:	68db      	ldr	r3, [r3, #12]
 800977e:	021b      	lsls	r3, r3, #8
 8009780:	697a      	ldr	r2, [r7, #20]
 8009782:	4313      	orrs	r3, r2
 8009784:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8009786:	697b      	ldr	r3, [r7, #20]
 8009788:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800978c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800978e:	687b      	ldr	r3, [r7, #4]
 8009790:	4a14      	ldr	r2, [pc, #80]	; (80097e4 <TIM_OC3_SetConfig+0xd0>)
 8009792:	4293      	cmp	r3, r2
 8009794:	d113      	bne.n	80097be <TIM_OC3_SetConfig+0xaa>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8009796:	693b      	ldr	r3, [r7, #16]
 8009798:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800979c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800979e:	693b      	ldr	r3, [r7, #16]
 80097a0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80097a4:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 80097a6:	683b      	ldr	r3, [r7, #0]
 80097a8:	695b      	ldr	r3, [r3, #20]
 80097aa:	011b      	lsls	r3, r3, #4
 80097ac:	693a      	ldr	r2, [r7, #16]
 80097ae:	4313      	orrs	r3, r2
 80097b0:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80097b2:	683b      	ldr	r3, [r7, #0]
 80097b4:	699b      	ldr	r3, [r3, #24]
 80097b6:	011b      	lsls	r3, r3, #4
 80097b8:	693a      	ldr	r2, [r7, #16]
 80097ba:	4313      	orrs	r3, r2
 80097bc:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80097be:	687b      	ldr	r3, [r7, #4]
 80097c0:	693a      	ldr	r2, [r7, #16]
 80097c2:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80097c4:	687b      	ldr	r3, [r7, #4]
 80097c6:	68fa      	ldr	r2, [r7, #12]
 80097c8:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 80097ca:	683b      	ldr	r3, [r7, #0]
 80097cc:	685a      	ldr	r2, [r3, #4]
 80097ce:	687b      	ldr	r3, [r7, #4]
 80097d0:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	697a      	ldr	r2, [r7, #20]
 80097d6:	621a      	str	r2, [r3, #32]
}
 80097d8:	bf00      	nop
 80097da:	371c      	adds	r7, #28
 80097dc:	46bd      	mov	sp, r7
 80097de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097e2:	4770      	bx	lr
 80097e4:	40010000 	.word	0x40010000

080097e8 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80097e8:	b480      	push	{r7}
 80097ea:	b087      	sub	sp, #28
 80097ec:	af00      	add	r7, sp, #0
 80097ee:	6078      	str	r0, [r7, #4]
 80097f0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	6a1b      	ldr	r3, [r3, #32]
 80097f6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80097fe:	687b      	ldr	r3, [r7, #4]
 8009800:	6a1b      	ldr	r3, [r3, #32]
 8009802:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009804:	687b      	ldr	r3, [r7, #4]
 8009806:	685b      	ldr	r3, [r3, #4]
 8009808:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	69db      	ldr	r3, [r3, #28]
 800980e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8009810:	68fb      	ldr	r3, [r7, #12]
 8009812:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8009816:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8009818:	68fb      	ldr	r3, [r7, #12]
 800981a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800981e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009820:	683b      	ldr	r3, [r7, #0]
 8009822:	681b      	ldr	r3, [r3, #0]
 8009824:	021b      	lsls	r3, r3, #8
 8009826:	68fa      	ldr	r2, [r7, #12]
 8009828:	4313      	orrs	r3, r2
 800982a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800982c:	693b      	ldr	r3, [r7, #16]
 800982e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8009832:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8009834:	683b      	ldr	r3, [r7, #0]
 8009836:	689b      	ldr	r3, [r3, #8]
 8009838:	031b      	lsls	r3, r3, #12
 800983a:	693a      	ldr	r2, [r7, #16]
 800983c:	4313      	orrs	r3, r2
 800983e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009840:	687b      	ldr	r3, [r7, #4]
 8009842:	4a10      	ldr	r2, [pc, #64]	; (8009884 <TIM_OC4_SetConfig+0x9c>)
 8009844:	4293      	cmp	r3, r2
 8009846:	d109      	bne.n	800985c <TIM_OC4_SetConfig+0x74>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8009848:	697b      	ldr	r3, [r7, #20]
 800984a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800984e:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8009850:	683b      	ldr	r3, [r7, #0]
 8009852:	695b      	ldr	r3, [r3, #20]
 8009854:	019b      	lsls	r3, r3, #6
 8009856:	697a      	ldr	r2, [r7, #20]
 8009858:	4313      	orrs	r3, r2
 800985a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	697a      	ldr	r2, [r7, #20]
 8009860:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8009862:	687b      	ldr	r3, [r7, #4]
 8009864:	68fa      	ldr	r2, [r7, #12]
 8009866:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8009868:	683b      	ldr	r3, [r7, #0]
 800986a:	685a      	ldr	r2, [r3, #4]
 800986c:	687b      	ldr	r3, [r7, #4]
 800986e:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	693a      	ldr	r2, [r7, #16]
 8009874:	621a      	str	r2, [r3, #32]
}
 8009876:	bf00      	nop
 8009878:	371c      	adds	r7, #28
 800987a:	46bd      	mov	sp, r7
 800987c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009880:	4770      	bx	lr
 8009882:	bf00      	nop
 8009884:	40010000 	.word	0x40010000

08009888 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8009888:	b480      	push	{r7}
 800988a:	b087      	sub	sp, #28
 800988c:	af00      	add	r7, sp, #0
 800988e:	60f8      	str	r0, [r7, #12]
 8009890:	60b9      	str	r1, [r7, #8]
 8009892:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8009894:	68bb      	ldr	r3, [r7, #8]
 8009896:	f003 031f 	and.w	r3, r3, #31
 800989a:	2201      	movs	r2, #1
 800989c:	fa02 f303 	lsl.w	r3, r2, r3
 80098a0:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 80098a2:	68fb      	ldr	r3, [r7, #12]
 80098a4:	6a1a      	ldr	r2, [r3, #32]
 80098a6:	697b      	ldr	r3, [r7, #20]
 80098a8:	43db      	mvns	r3, r3
 80098aa:	401a      	ands	r2, r3
 80098ac:	68fb      	ldr	r3, [r7, #12]
 80098ae:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 80098b0:	68fb      	ldr	r3, [r7, #12]
 80098b2:	6a1a      	ldr	r2, [r3, #32]
 80098b4:	68bb      	ldr	r3, [r7, #8]
 80098b6:	f003 031f 	and.w	r3, r3, #31
 80098ba:	6879      	ldr	r1, [r7, #4]
 80098bc:	fa01 f303 	lsl.w	r3, r1, r3
 80098c0:	431a      	orrs	r2, r3
 80098c2:	68fb      	ldr	r3, [r7, #12]
 80098c4:	621a      	str	r2, [r3, #32]
}
 80098c6:	bf00      	nop
 80098c8:	371c      	adds	r7, #28
 80098ca:	46bd      	mov	sp, r7
 80098cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098d0:	4770      	bx	lr
	...

080098d4 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80098d4:	b480      	push	{r7}
 80098d6:	b085      	sub	sp, #20
 80098d8:	af00      	add	r7, sp, #0
 80098da:	6078      	str	r0, [r7, #4]
 80098dc:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80098de:	687b      	ldr	r3, [r7, #4]
 80098e0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80098e4:	2b01      	cmp	r3, #1
 80098e6:	d101      	bne.n	80098ec <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80098e8:	2302      	movs	r3, #2
 80098ea:	e050      	b.n	800998e <HAL_TIMEx_MasterConfigSynchronization+0xba>
 80098ec:	687b      	ldr	r3, [r7, #4]
 80098ee:	2201      	movs	r2, #1
 80098f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80098f4:	687b      	ldr	r3, [r7, #4]
 80098f6:	2202      	movs	r2, #2
 80098f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	681b      	ldr	r3, [r3, #0]
 8009900:	685b      	ldr	r3, [r3, #4]
 8009902:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	681b      	ldr	r3, [r3, #0]
 8009908:	689b      	ldr	r3, [r3, #8]
 800990a:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800990c:	68fb      	ldr	r3, [r7, #12]
 800990e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009912:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8009914:	683b      	ldr	r3, [r7, #0]
 8009916:	681b      	ldr	r3, [r3, #0]
 8009918:	68fa      	ldr	r2, [r7, #12]
 800991a:	4313      	orrs	r3, r2
 800991c:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800991e:	687b      	ldr	r3, [r7, #4]
 8009920:	681b      	ldr	r3, [r3, #0]
 8009922:	68fa      	ldr	r2, [r7, #12]
 8009924:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009926:	687b      	ldr	r3, [r7, #4]
 8009928:	681b      	ldr	r3, [r3, #0]
 800992a:	4a1c      	ldr	r2, [pc, #112]	; (800999c <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 800992c:	4293      	cmp	r3, r2
 800992e:	d018      	beq.n	8009962 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	681b      	ldr	r3, [r3, #0]
 8009934:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009938:	d013      	beq.n	8009962 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	681b      	ldr	r3, [r3, #0]
 800993e:	4a18      	ldr	r2, [pc, #96]	; (80099a0 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8009940:	4293      	cmp	r3, r2
 8009942:	d00e      	beq.n	8009962 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8009944:	687b      	ldr	r3, [r7, #4]
 8009946:	681b      	ldr	r3, [r3, #0]
 8009948:	4a16      	ldr	r2, [pc, #88]	; (80099a4 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 800994a:	4293      	cmp	r3, r2
 800994c:	d009      	beq.n	8009962 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800994e:	687b      	ldr	r3, [r7, #4]
 8009950:	681b      	ldr	r3, [r3, #0]
 8009952:	4a15      	ldr	r2, [pc, #84]	; (80099a8 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8009954:	4293      	cmp	r3, r2
 8009956:	d004      	beq.n	8009962 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	681b      	ldr	r3, [r3, #0]
 800995c:	4a13      	ldr	r2, [pc, #76]	; (80099ac <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800995e:	4293      	cmp	r3, r2
 8009960:	d10c      	bne.n	800997c <HAL_TIMEx_MasterConfigSynchronization+0xa8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8009962:	68bb      	ldr	r3, [r7, #8]
 8009964:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009968:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800996a:	683b      	ldr	r3, [r7, #0]
 800996c:	685b      	ldr	r3, [r3, #4]
 800996e:	68ba      	ldr	r2, [r7, #8]
 8009970:	4313      	orrs	r3, r2
 8009972:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8009974:	687b      	ldr	r3, [r7, #4]
 8009976:	681b      	ldr	r3, [r3, #0]
 8009978:	68ba      	ldr	r2, [r7, #8]
 800997a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800997c:	687b      	ldr	r3, [r7, #4]
 800997e:	2201      	movs	r2, #1
 8009980:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8009984:	687b      	ldr	r3, [r7, #4]
 8009986:	2200      	movs	r2, #0
 8009988:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800998c:	2300      	movs	r3, #0
}
 800998e:	4618      	mov	r0, r3
 8009990:	3714      	adds	r7, #20
 8009992:	46bd      	mov	sp, r7
 8009994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009998:	4770      	bx	lr
 800999a:	bf00      	nop
 800999c:	40010000 	.word	0x40010000
 80099a0:	40000400 	.word	0x40000400
 80099a4:	40000800 	.word	0x40000800
 80099a8:	40000c00 	.word	0x40000c00
 80099ac:	40014000 	.word	0x40014000

080099b0 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 80099b0:	b480      	push	{r7}
 80099b2:	b083      	sub	sp, #12
 80099b4:	af00      	add	r7, sp, #0
 80099b6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 80099b8:	bf00      	nop
 80099ba:	370c      	adds	r7, #12
 80099bc:	46bd      	mov	sp, r7
 80099be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099c2:	4770      	bx	lr

080099c4 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 80099c4:	b480      	push	{r7}
 80099c6:	b083      	sub	sp, #12
 80099c8:	af00      	add	r7, sp, #0
 80099ca:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 80099cc:	bf00      	nop
 80099ce:	370c      	adds	r7, #12
 80099d0:	46bd      	mov	sp, r7
 80099d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099d6:	4770      	bx	lr

080099d8 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80099d8:	b580      	push	{r7, lr}
 80099da:	b082      	sub	sp, #8
 80099dc:	af00      	add	r7, sp, #0
 80099de:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 80099e0:	687b      	ldr	r3, [r7, #4]
 80099e2:	2b00      	cmp	r3, #0
 80099e4:	d101      	bne.n	80099ea <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 80099e6:	2301      	movs	r3, #1
 80099e8:	e03f      	b.n	8009a6a <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 80099ea:	687b      	ldr	r3, [r7, #4]
 80099ec:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80099f0:	b2db      	uxtb	r3, r3
 80099f2:	2b00      	cmp	r3, #0
 80099f4:	d106      	bne.n	8009a04 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 80099f6:	687b      	ldr	r3, [r7, #4]
 80099f8:	2200      	movs	r2, #0
 80099fa:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 80099fe:	6878      	ldr	r0, [r7, #4]
 8009a00:	f7fc fefa 	bl	80067f8 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8009a04:	687b      	ldr	r3, [r7, #4]
 8009a06:	2224      	movs	r2, #36	; 0x24
 8009a08:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8009a0c:	687b      	ldr	r3, [r7, #4]
 8009a0e:	681b      	ldr	r3, [r3, #0]
 8009a10:	68da      	ldr	r2, [r3, #12]
 8009a12:	687b      	ldr	r3, [r7, #4]
 8009a14:	681b      	ldr	r3, [r3, #0]
 8009a16:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8009a1a:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8009a1c:	6878      	ldr	r0, [r7, #4]
 8009a1e:	f000 f829 	bl	8009a74 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8009a22:	687b      	ldr	r3, [r7, #4]
 8009a24:	681b      	ldr	r3, [r3, #0]
 8009a26:	691a      	ldr	r2, [r3, #16]
 8009a28:	687b      	ldr	r3, [r7, #4]
 8009a2a:	681b      	ldr	r3, [r3, #0]
 8009a2c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8009a30:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8009a32:	687b      	ldr	r3, [r7, #4]
 8009a34:	681b      	ldr	r3, [r3, #0]
 8009a36:	695a      	ldr	r2, [r3, #20]
 8009a38:	687b      	ldr	r3, [r7, #4]
 8009a3a:	681b      	ldr	r3, [r3, #0]
 8009a3c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8009a40:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	681b      	ldr	r3, [r3, #0]
 8009a46:	68da      	ldr	r2, [r3, #12]
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	681b      	ldr	r3, [r3, #0]
 8009a4c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009a50:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	2200      	movs	r2, #0
 8009a56:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	2220      	movs	r2, #32
 8009a5c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8009a60:	687b      	ldr	r3, [r7, #4]
 8009a62:	2220      	movs	r2, #32
 8009a64:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 8009a68:	2300      	movs	r3, #0
}
 8009a6a:	4618      	mov	r0, r3
 8009a6c:	3708      	adds	r7, #8
 8009a6e:	46bd      	mov	sp, r7
 8009a70:	bd80      	pop	{r7, pc}
	...

08009a74 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8009a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a78:	b085      	sub	sp, #20
 8009a7a:	af00      	add	r7, sp, #0
 8009a7c:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8009a7e:	687b      	ldr	r3, [r7, #4]
 8009a80:	681b      	ldr	r3, [r3, #0]
 8009a82:	691b      	ldr	r3, [r3, #16]
 8009a84:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8009a88:	687b      	ldr	r3, [r7, #4]
 8009a8a:	68da      	ldr	r2, [r3, #12]
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	681b      	ldr	r3, [r3, #0]
 8009a90:	430a      	orrs	r2, r1
 8009a92:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8009a94:	687b      	ldr	r3, [r7, #4]
 8009a96:	689a      	ldr	r2, [r3, #8]
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	691b      	ldr	r3, [r3, #16]
 8009a9c:	431a      	orrs	r2, r3
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	695b      	ldr	r3, [r3, #20]
 8009aa2:	431a      	orrs	r2, r3
 8009aa4:	687b      	ldr	r3, [r7, #4]
 8009aa6:	69db      	ldr	r3, [r3, #28]
 8009aa8:	4313      	orrs	r3, r2
 8009aaa:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(huart->Instance->CR1,
 8009aac:	687b      	ldr	r3, [r7, #4]
 8009aae:	681b      	ldr	r3, [r3, #0]
 8009ab0:	68db      	ldr	r3, [r3, #12]
 8009ab2:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8009ab6:	f023 030c 	bic.w	r3, r3, #12
 8009aba:	687a      	ldr	r2, [r7, #4]
 8009abc:	6812      	ldr	r2, [r2, #0]
 8009abe:	68f9      	ldr	r1, [r7, #12]
 8009ac0:	430b      	orrs	r3, r1
 8009ac2:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8009ac4:	687b      	ldr	r3, [r7, #4]
 8009ac6:	681b      	ldr	r3, [r3, #0]
 8009ac8:	695b      	ldr	r3, [r3, #20]
 8009aca:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8009ace:	687b      	ldr	r3, [r7, #4]
 8009ad0:	699a      	ldr	r2, [r3, #24]
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	681b      	ldr	r3, [r3, #0]
 8009ad6:	430a      	orrs	r2, r1
 8009ad8:	615a      	str	r2, [r3, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	69db      	ldr	r3, [r3, #28]
 8009ade:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009ae2:	f040 818b 	bne.w	8009dfc <UART_SetConfig+0x388>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8009ae6:	687b      	ldr	r3, [r7, #4]
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	4ac1      	ldr	r2, [pc, #772]	; (8009df0 <UART_SetConfig+0x37c>)
 8009aec:	4293      	cmp	r3, r2
 8009aee:	d005      	beq.n	8009afc <UART_SetConfig+0x88>
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	681b      	ldr	r3, [r3, #0]
 8009af4:	4abf      	ldr	r2, [pc, #764]	; (8009df4 <UART_SetConfig+0x380>)
 8009af6:	4293      	cmp	r3, r2
 8009af8:	f040 80bd 	bne.w	8009c76 <UART_SetConfig+0x202>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8009afc:	f7ff f946 	bl	8008d8c <HAL_RCC_GetPCLK2Freq>
 8009b00:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8009b02:	68bb      	ldr	r3, [r7, #8]
 8009b04:	461d      	mov	r5, r3
 8009b06:	f04f 0600 	mov.w	r6, #0
 8009b0a:	46a8      	mov	r8, r5
 8009b0c:	46b1      	mov	r9, r6
 8009b0e:	eb18 0308 	adds.w	r3, r8, r8
 8009b12:	eb49 0409 	adc.w	r4, r9, r9
 8009b16:	4698      	mov	r8, r3
 8009b18:	46a1      	mov	r9, r4
 8009b1a:	eb18 0805 	adds.w	r8, r8, r5
 8009b1e:	eb49 0906 	adc.w	r9, r9, r6
 8009b22:	f04f 0100 	mov.w	r1, #0
 8009b26:	f04f 0200 	mov.w	r2, #0
 8009b2a:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8009b2e:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8009b32:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8009b36:	4688      	mov	r8, r1
 8009b38:	4691      	mov	r9, r2
 8009b3a:	eb18 0005 	adds.w	r0, r8, r5
 8009b3e:	eb49 0106 	adc.w	r1, r9, r6
 8009b42:	687b      	ldr	r3, [r7, #4]
 8009b44:	685b      	ldr	r3, [r3, #4]
 8009b46:	461d      	mov	r5, r3
 8009b48:	f04f 0600 	mov.w	r6, #0
 8009b4c:	196b      	adds	r3, r5, r5
 8009b4e:	eb46 0406 	adc.w	r4, r6, r6
 8009b52:	461a      	mov	r2, r3
 8009b54:	4623      	mov	r3, r4
 8009b56:	f7f6 fff3 	bl	8000b40 <__aeabi_uldivmod>
 8009b5a:	4603      	mov	r3, r0
 8009b5c:	460c      	mov	r4, r1
 8009b5e:	461a      	mov	r2, r3
 8009b60:	4ba5      	ldr	r3, [pc, #660]	; (8009df8 <UART_SetConfig+0x384>)
 8009b62:	fba3 2302 	umull	r2, r3, r3, r2
 8009b66:	095b      	lsrs	r3, r3, #5
 8009b68:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8009b6c:	68bb      	ldr	r3, [r7, #8]
 8009b6e:	461d      	mov	r5, r3
 8009b70:	f04f 0600 	mov.w	r6, #0
 8009b74:	46a9      	mov	r9, r5
 8009b76:	46b2      	mov	sl, r6
 8009b78:	eb19 0309 	adds.w	r3, r9, r9
 8009b7c:	eb4a 040a 	adc.w	r4, sl, sl
 8009b80:	4699      	mov	r9, r3
 8009b82:	46a2      	mov	sl, r4
 8009b84:	eb19 0905 	adds.w	r9, r9, r5
 8009b88:	eb4a 0a06 	adc.w	sl, sl, r6
 8009b8c:	f04f 0100 	mov.w	r1, #0
 8009b90:	f04f 0200 	mov.w	r2, #0
 8009b94:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009b98:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8009b9c:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8009ba0:	4689      	mov	r9, r1
 8009ba2:	4692      	mov	sl, r2
 8009ba4:	eb19 0005 	adds.w	r0, r9, r5
 8009ba8:	eb4a 0106 	adc.w	r1, sl, r6
 8009bac:	687b      	ldr	r3, [r7, #4]
 8009bae:	685b      	ldr	r3, [r3, #4]
 8009bb0:	461d      	mov	r5, r3
 8009bb2:	f04f 0600 	mov.w	r6, #0
 8009bb6:	196b      	adds	r3, r5, r5
 8009bb8:	eb46 0406 	adc.w	r4, r6, r6
 8009bbc:	461a      	mov	r2, r3
 8009bbe:	4623      	mov	r3, r4
 8009bc0:	f7f6 ffbe 	bl	8000b40 <__aeabi_uldivmod>
 8009bc4:	4603      	mov	r3, r0
 8009bc6:	460c      	mov	r4, r1
 8009bc8:	461a      	mov	r2, r3
 8009bca:	4b8b      	ldr	r3, [pc, #556]	; (8009df8 <UART_SetConfig+0x384>)
 8009bcc:	fba3 1302 	umull	r1, r3, r3, r2
 8009bd0:	095b      	lsrs	r3, r3, #5
 8009bd2:	2164      	movs	r1, #100	; 0x64
 8009bd4:	fb01 f303 	mul.w	r3, r1, r3
 8009bd8:	1ad3      	subs	r3, r2, r3
 8009bda:	00db      	lsls	r3, r3, #3
 8009bdc:	3332      	adds	r3, #50	; 0x32
 8009bde:	4a86      	ldr	r2, [pc, #536]	; (8009df8 <UART_SetConfig+0x384>)
 8009be0:	fba2 2303 	umull	r2, r3, r2, r3
 8009be4:	095b      	lsrs	r3, r3, #5
 8009be6:	005b      	lsls	r3, r3, #1
 8009be8:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8009bec:	4498      	add	r8, r3
 8009bee:	68bb      	ldr	r3, [r7, #8]
 8009bf0:	461d      	mov	r5, r3
 8009bf2:	f04f 0600 	mov.w	r6, #0
 8009bf6:	46a9      	mov	r9, r5
 8009bf8:	46b2      	mov	sl, r6
 8009bfa:	eb19 0309 	adds.w	r3, r9, r9
 8009bfe:	eb4a 040a 	adc.w	r4, sl, sl
 8009c02:	4699      	mov	r9, r3
 8009c04:	46a2      	mov	sl, r4
 8009c06:	eb19 0905 	adds.w	r9, r9, r5
 8009c0a:	eb4a 0a06 	adc.w	sl, sl, r6
 8009c0e:	f04f 0100 	mov.w	r1, #0
 8009c12:	f04f 0200 	mov.w	r2, #0
 8009c16:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009c1a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8009c1e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8009c22:	4689      	mov	r9, r1
 8009c24:	4692      	mov	sl, r2
 8009c26:	eb19 0005 	adds.w	r0, r9, r5
 8009c2a:	eb4a 0106 	adc.w	r1, sl, r6
 8009c2e:	687b      	ldr	r3, [r7, #4]
 8009c30:	685b      	ldr	r3, [r3, #4]
 8009c32:	461d      	mov	r5, r3
 8009c34:	f04f 0600 	mov.w	r6, #0
 8009c38:	196b      	adds	r3, r5, r5
 8009c3a:	eb46 0406 	adc.w	r4, r6, r6
 8009c3e:	461a      	mov	r2, r3
 8009c40:	4623      	mov	r3, r4
 8009c42:	f7f6 ff7d 	bl	8000b40 <__aeabi_uldivmod>
 8009c46:	4603      	mov	r3, r0
 8009c48:	460c      	mov	r4, r1
 8009c4a:	461a      	mov	r2, r3
 8009c4c:	4b6a      	ldr	r3, [pc, #424]	; (8009df8 <UART_SetConfig+0x384>)
 8009c4e:	fba3 1302 	umull	r1, r3, r3, r2
 8009c52:	095b      	lsrs	r3, r3, #5
 8009c54:	2164      	movs	r1, #100	; 0x64
 8009c56:	fb01 f303 	mul.w	r3, r1, r3
 8009c5a:	1ad3      	subs	r3, r2, r3
 8009c5c:	00db      	lsls	r3, r3, #3
 8009c5e:	3332      	adds	r3, #50	; 0x32
 8009c60:	4a65      	ldr	r2, [pc, #404]	; (8009df8 <UART_SetConfig+0x384>)
 8009c62:	fba2 2303 	umull	r2, r3, r2, r3
 8009c66:	095b      	lsrs	r3, r3, #5
 8009c68:	f003 0207 	and.w	r2, r3, #7
 8009c6c:	687b      	ldr	r3, [r7, #4]
 8009c6e:	681b      	ldr	r3, [r3, #0]
 8009c70:	4442      	add	r2, r8
 8009c72:	609a      	str	r2, [r3, #8]
 8009c74:	e26f      	b.n	800a156 <UART_SetConfig+0x6e2>
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8009c76:	f7ff f875 	bl	8008d64 <HAL_RCC_GetPCLK1Freq>
 8009c7a:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8009c7c:	68bb      	ldr	r3, [r7, #8]
 8009c7e:	461d      	mov	r5, r3
 8009c80:	f04f 0600 	mov.w	r6, #0
 8009c84:	46a8      	mov	r8, r5
 8009c86:	46b1      	mov	r9, r6
 8009c88:	eb18 0308 	adds.w	r3, r8, r8
 8009c8c:	eb49 0409 	adc.w	r4, r9, r9
 8009c90:	4698      	mov	r8, r3
 8009c92:	46a1      	mov	r9, r4
 8009c94:	eb18 0805 	adds.w	r8, r8, r5
 8009c98:	eb49 0906 	adc.w	r9, r9, r6
 8009c9c:	f04f 0100 	mov.w	r1, #0
 8009ca0:	f04f 0200 	mov.w	r2, #0
 8009ca4:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8009ca8:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8009cac:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8009cb0:	4688      	mov	r8, r1
 8009cb2:	4691      	mov	r9, r2
 8009cb4:	eb18 0005 	adds.w	r0, r8, r5
 8009cb8:	eb49 0106 	adc.w	r1, r9, r6
 8009cbc:	687b      	ldr	r3, [r7, #4]
 8009cbe:	685b      	ldr	r3, [r3, #4]
 8009cc0:	461d      	mov	r5, r3
 8009cc2:	f04f 0600 	mov.w	r6, #0
 8009cc6:	196b      	adds	r3, r5, r5
 8009cc8:	eb46 0406 	adc.w	r4, r6, r6
 8009ccc:	461a      	mov	r2, r3
 8009cce:	4623      	mov	r3, r4
 8009cd0:	f7f6 ff36 	bl	8000b40 <__aeabi_uldivmod>
 8009cd4:	4603      	mov	r3, r0
 8009cd6:	460c      	mov	r4, r1
 8009cd8:	461a      	mov	r2, r3
 8009cda:	4b47      	ldr	r3, [pc, #284]	; (8009df8 <UART_SetConfig+0x384>)
 8009cdc:	fba3 2302 	umull	r2, r3, r3, r2
 8009ce0:	095b      	lsrs	r3, r3, #5
 8009ce2:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8009ce6:	68bb      	ldr	r3, [r7, #8]
 8009ce8:	461d      	mov	r5, r3
 8009cea:	f04f 0600 	mov.w	r6, #0
 8009cee:	46a9      	mov	r9, r5
 8009cf0:	46b2      	mov	sl, r6
 8009cf2:	eb19 0309 	adds.w	r3, r9, r9
 8009cf6:	eb4a 040a 	adc.w	r4, sl, sl
 8009cfa:	4699      	mov	r9, r3
 8009cfc:	46a2      	mov	sl, r4
 8009cfe:	eb19 0905 	adds.w	r9, r9, r5
 8009d02:	eb4a 0a06 	adc.w	sl, sl, r6
 8009d06:	f04f 0100 	mov.w	r1, #0
 8009d0a:	f04f 0200 	mov.w	r2, #0
 8009d0e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009d12:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8009d16:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8009d1a:	4689      	mov	r9, r1
 8009d1c:	4692      	mov	sl, r2
 8009d1e:	eb19 0005 	adds.w	r0, r9, r5
 8009d22:	eb4a 0106 	adc.w	r1, sl, r6
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	685b      	ldr	r3, [r3, #4]
 8009d2a:	461d      	mov	r5, r3
 8009d2c:	f04f 0600 	mov.w	r6, #0
 8009d30:	196b      	adds	r3, r5, r5
 8009d32:	eb46 0406 	adc.w	r4, r6, r6
 8009d36:	461a      	mov	r2, r3
 8009d38:	4623      	mov	r3, r4
 8009d3a:	f7f6 ff01 	bl	8000b40 <__aeabi_uldivmod>
 8009d3e:	4603      	mov	r3, r0
 8009d40:	460c      	mov	r4, r1
 8009d42:	461a      	mov	r2, r3
 8009d44:	4b2c      	ldr	r3, [pc, #176]	; (8009df8 <UART_SetConfig+0x384>)
 8009d46:	fba3 1302 	umull	r1, r3, r3, r2
 8009d4a:	095b      	lsrs	r3, r3, #5
 8009d4c:	2164      	movs	r1, #100	; 0x64
 8009d4e:	fb01 f303 	mul.w	r3, r1, r3
 8009d52:	1ad3      	subs	r3, r2, r3
 8009d54:	00db      	lsls	r3, r3, #3
 8009d56:	3332      	adds	r3, #50	; 0x32
 8009d58:	4a27      	ldr	r2, [pc, #156]	; (8009df8 <UART_SetConfig+0x384>)
 8009d5a:	fba2 2303 	umull	r2, r3, r2, r3
 8009d5e:	095b      	lsrs	r3, r3, #5
 8009d60:	005b      	lsls	r3, r3, #1
 8009d62:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8009d66:	4498      	add	r8, r3
 8009d68:	68bb      	ldr	r3, [r7, #8]
 8009d6a:	461d      	mov	r5, r3
 8009d6c:	f04f 0600 	mov.w	r6, #0
 8009d70:	46a9      	mov	r9, r5
 8009d72:	46b2      	mov	sl, r6
 8009d74:	eb19 0309 	adds.w	r3, r9, r9
 8009d78:	eb4a 040a 	adc.w	r4, sl, sl
 8009d7c:	4699      	mov	r9, r3
 8009d7e:	46a2      	mov	sl, r4
 8009d80:	eb19 0905 	adds.w	r9, r9, r5
 8009d84:	eb4a 0a06 	adc.w	sl, sl, r6
 8009d88:	f04f 0100 	mov.w	r1, #0
 8009d8c:	f04f 0200 	mov.w	r2, #0
 8009d90:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009d94:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8009d98:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8009d9c:	4689      	mov	r9, r1
 8009d9e:	4692      	mov	sl, r2
 8009da0:	eb19 0005 	adds.w	r0, r9, r5
 8009da4:	eb4a 0106 	adc.w	r1, sl, r6
 8009da8:	687b      	ldr	r3, [r7, #4]
 8009daa:	685b      	ldr	r3, [r3, #4]
 8009dac:	461d      	mov	r5, r3
 8009dae:	f04f 0600 	mov.w	r6, #0
 8009db2:	196b      	adds	r3, r5, r5
 8009db4:	eb46 0406 	adc.w	r4, r6, r6
 8009db8:	461a      	mov	r2, r3
 8009dba:	4623      	mov	r3, r4
 8009dbc:	f7f6 fec0 	bl	8000b40 <__aeabi_uldivmod>
 8009dc0:	4603      	mov	r3, r0
 8009dc2:	460c      	mov	r4, r1
 8009dc4:	461a      	mov	r2, r3
 8009dc6:	4b0c      	ldr	r3, [pc, #48]	; (8009df8 <UART_SetConfig+0x384>)
 8009dc8:	fba3 1302 	umull	r1, r3, r3, r2
 8009dcc:	095b      	lsrs	r3, r3, #5
 8009dce:	2164      	movs	r1, #100	; 0x64
 8009dd0:	fb01 f303 	mul.w	r3, r1, r3
 8009dd4:	1ad3      	subs	r3, r2, r3
 8009dd6:	00db      	lsls	r3, r3, #3
 8009dd8:	3332      	adds	r3, #50	; 0x32
 8009dda:	4a07      	ldr	r2, [pc, #28]	; (8009df8 <UART_SetConfig+0x384>)
 8009ddc:	fba2 2303 	umull	r2, r3, r2, r3
 8009de0:	095b      	lsrs	r3, r3, #5
 8009de2:	f003 0207 	and.w	r2, r3, #7
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	681b      	ldr	r3, [r3, #0]
 8009dea:	4442      	add	r2, r8
 8009dec:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8009dee:	e1b2      	b.n	800a156 <UART_SetConfig+0x6e2>
 8009df0:	40011000 	.word	0x40011000
 8009df4:	40011400 	.word	0x40011400
 8009df8:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8009dfc:	687b      	ldr	r3, [r7, #4]
 8009dfe:	681b      	ldr	r3, [r3, #0]
 8009e00:	4ad7      	ldr	r2, [pc, #860]	; (800a160 <UART_SetConfig+0x6ec>)
 8009e02:	4293      	cmp	r3, r2
 8009e04:	d005      	beq.n	8009e12 <UART_SetConfig+0x39e>
 8009e06:	687b      	ldr	r3, [r7, #4]
 8009e08:	681b      	ldr	r3, [r3, #0]
 8009e0a:	4ad6      	ldr	r2, [pc, #856]	; (800a164 <UART_SetConfig+0x6f0>)
 8009e0c:	4293      	cmp	r3, r2
 8009e0e:	f040 80d1 	bne.w	8009fb4 <UART_SetConfig+0x540>
      pclk = HAL_RCC_GetPCLK2Freq();
 8009e12:	f7fe ffbb 	bl	8008d8c <HAL_RCC_GetPCLK2Freq>
 8009e16:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8009e18:	68bb      	ldr	r3, [r7, #8]
 8009e1a:	469a      	mov	sl, r3
 8009e1c:	f04f 0b00 	mov.w	fp, #0
 8009e20:	46d0      	mov	r8, sl
 8009e22:	46d9      	mov	r9, fp
 8009e24:	eb18 0308 	adds.w	r3, r8, r8
 8009e28:	eb49 0409 	adc.w	r4, r9, r9
 8009e2c:	4698      	mov	r8, r3
 8009e2e:	46a1      	mov	r9, r4
 8009e30:	eb18 080a 	adds.w	r8, r8, sl
 8009e34:	eb49 090b 	adc.w	r9, r9, fp
 8009e38:	f04f 0100 	mov.w	r1, #0
 8009e3c:	f04f 0200 	mov.w	r2, #0
 8009e40:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8009e44:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8009e48:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8009e4c:	4688      	mov	r8, r1
 8009e4e:	4691      	mov	r9, r2
 8009e50:	eb1a 0508 	adds.w	r5, sl, r8
 8009e54:	eb4b 0609 	adc.w	r6, fp, r9
 8009e58:	687b      	ldr	r3, [r7, #4]
 8009e5a:	685b      	ldr	r3, [r3, #4]
 8009e5c:	4619      	mov	r1, r3
 8009e5e:	f04f 0200 	mov.w	r2, #0
 8009e62:	f04f 0300 	mov.w	r3, #0
 8009e66:	f04f 0400 	mov.w	r4, #0
 8009e6a:	0094      	lsls	r4, r2, #2
 8009e6c:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8009e70:	008b      	lsls	r3, r1, #2
 8009e72:	461a      	mov	r2, r3
 8009e74:	4623      	mov	r3, r4
 8009e76:	4628      	mov	r0, r5
 8009e78:	4631      	mov	r1, r6
 8009e7a:	f7f6 fe61 	bl	8000b40 <__aeabi_uldivmod>
 8009e7e:	4603      	mov	r3, r0
 8009e80:	460c      	mov	r4, r1
 8009e82:	461a      	mov	r2, r3
 8009e84:	4bb8      	ldr	r3, [pc, #736]	; (800a168 <UART_SetConfig+0x6f4>)
 8009e86:	fba3 2302 	umull	r2, r3, r3, r2
 8009e8a:	095b      	lsrs	r3, r3, #5
 8009e8c:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8009e90:	68bb      	ldr	r3, [r7, #8]
 8009e92:	469b      	mov	fp, r3
 8009e94:	f04f 0c00 	mov.w	ip, #0
 8009e98:	46d9      	mov	r9, fp
 8009e9a:	46e2      	mov	sl, ip
 8009e9c:	eb19 0309 	adds.w	r3, r9, r9
 8009ea0:	eb4a 040a 	adc.w	r4, sl, sl
 8009ea4:	4699      	mov	r9, r3
 8009ea6:	46a2      	mov	sl, r4
 8009ea8:	eb19 090b 	adds.w	r9, r9, fp
 8009eac:	eb4a 0a0c 	adc.w	sl, sl, ip
 8009eb0:	f04f 0100 	mov.w	r1, #0
 8009eb4:	f04f 0200 	mov.w	r2, #0
 8009eb8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009ebc:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8009ec0:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8009ec4:	4689      	mov	r9, r1
 8009ec6:	4692      	mov	sl, r2
 8009ec8:	eb1b 0509 	adds.w	r5, fp, r9
 8009ecc:	eb4c 060a 	adc.w	r6, ip, sl
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	685b      	ldr	r3, [r3, #4]
 8009ed4:	4619      	mov	r1, r3
 8009ed6:	f04f 0200 	mov.w	r2, #0
 8009eda:	f04f 0300 	mov.w	r3, #0
 8009ede:	f04f 0400 	mov.w	r4, #0
 8009ee2:	0094      	lsls	r4, r2, #2
 8009ee4:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8009ee8:	008b      	lsls	r3, r1, #2
 8009eea:	461a      	mov	r2, r3
 8009eec:	4623      	mov	r3, r4
 8009eee:	4628      	mov	r0, r5
 8009ef0:	4631      	mov	r1, r6
 8009ef2:	f7f6 fe25 	bl	8000b40 <__aeabi_uldivmod>
 8009ef6:	4603      	mov	r3, r0
 8009ef8:	460c      	mov	r4, r1
 8009efa:	461a      	mov	r2, r3
 8009efc:	4b9a      	ldr	r3, [pc, #616]	; (800a168 <UART_SetConfig+0x6f4>)
 8009efe:	fba3 1302 	umull	r1, r3, r3, r2
 8009f02:	095b      	lsrs	r3, r3, #5
 8009f04:	2164      	movs	r1, #100	; 0x64
 8009f06:	fb01 f303 	mul.w	r3, r1, r3
 8009f0a:	1ad3      	subs	r3, r2, r3
 8009f0c:	011b      	lsls	r3, r3, #4
 8009f0e:	3332      	adds	r3, #50	; 0x32
 8009f10:	4a95      	ldr	r2, [pc, #596]	; (800a168 <UART_SetConfig+0x6f4>)
 8009f12:	fba2 2303 	umull	r2, r3, r2, r3
 8009f16:	095b      	lsrs	r3, r3, #5
 8009f18:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8009f1c:	4498      	add	r8, r3
 8009f1e:	68bb      	ldr	r3, [r7, #8]
 8009f20:	469b      	mov	fp, r3
 8009f22:	f04f 0c00 	mov.w	ip, #0
 8009f26:	46d9      	mov	r9, fp
 8009f28:	46e2      	mov	sl, ip
 8009f2a:	eb19 0309 	adds.w	r3, r9, r9
 8009f2e:	eb4a 040a 	adc.w	r4, sl, sl
 8009f32:	4699      	mov	r9, r3
 8009f34:	46a2      	mov	sl, r4
 8009f36:	eb19 090b 	adds.w	r9, r9, fp
 8009f3a:	eb4a 0a0c 	adc.w	sl, sl, ip
 8009f3e:	f04f 0100 	mov.w	r1, #0
 8009f42:	f04f 0200 	mov.w	r2, #0
 8009f46:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009f4a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8009f4e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8009f52:	4689      	mov	r9, r1
 8009f54:	4692      	mov	sl, r2
 8009f56:	eb1b 0509 	adds.w	r5, fp, r9
 8009f5a:	eb4c 060a 	adc.w	r6, ip, sl
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	685b      	ldr	r3, [r3, #4]
 8009f62:	4619      	mov	r1, r3
 8009f64:	f04f 0200 	mov.w	r2, #0
 8009f68:	f04f 0300 	mov.w	r3, #0
 8009f6c:	f04f 0400 	mov.w	r4, #0
 8009f70:	0094      	lsls	r4, r2, #2
 8009f72:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8009f76:	008b      	lsls	r3, r1, #2
 8009f78:	461a      	mov	r2, r3
 8009f7a:	4623      	mov	r3, r4
 8009f7c:	4628      	mov	r0, r5
 8009f7e:	4631      	mov	r1, r6
 8009f80:	f7f6 fdde 	bl	8000b40 <__aeabi_uldivmod>
 8009f84:	4603      	mov	r3, r0
 8009f86:	460c      	mov	r4, r1
 8009f88:	461a      	mov	r2, r3
 8009f8a:	4b77      	ldr	r3, [pc, #476]	; (800a168 <UART_SetConfig+0x6f4>)
 8009f8c:	fba3 1302 	umull	r1, r3, r3, r2
 8009f90:	095b      	lsrs	r3, r3, #5
 8009f92:	2164      	movs	r1, #100	; 0x64
 8009f94:	fb01 f303 	mul.w	r3, r1, r3
 8009f98:	1ad3      	subs	r3, r2, r3
 8009f9a:	011b      	lsls	r3, r3, #4
 8009f9c:	3332      	adds	r3, #50	; 0x32
 8009f9e:	4a72      	ldr	r2, [pc, #456]	; (800a168 <UART_SetConfig+0x6f4>)
 8009fa0:	fba2 2303 	umull	r2, r3, r2, r3
 8009fa4:	095b      	lsrs	r3, r3, #5
 8009fa6:	f003 020f 	and.w	r2, r3, #15
 8009faa:	687b      	ldr	r3, [r7, #4]
 8009fac:	681b      	ldr	r3, [r3, #0]
 8009fae:	4442      	add	r2, r8
 8009fb0:	609a      	str	r2, [r3, #8]
 8009fb2:	e0d0      	b.n	800a156 <UART_SetConfig+0x6e2>
      pclk = HAL_RCC_GetPCLK1Freq();
 8009fb4:	f7fe fed6 	bl	8008d64 <HAL_RCC_GetPCLK1Freq>
 8009fb8:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8009fba:	68bb      	ldr	r3, [r7, #8]
 8009fbc:	469a      	mov	sl, r3
 8009fbe:	f04f 0b00 	mov.w	fp, #0
 8009fc2:	46d0      	mov	r8, sl
 8009fc4:	46d9      	mov	r9, fp
 8009fc6:	eb18 0308 	adds.w	r3, r8, r8
 8009fca:	eb49 0409 	adc.w	r4, r9, r9
 8009fce:	4698      	mov	r8, r3
 8009fd0:	46a1      	mov	r9, r4
 8009fd2:	eb18 080a 	adds.w	r8, r8, sl
 8009fd6:	eb49 090b 	adc.w	r9, r9, fp
 8009fda:	f04f 0100 	mov.w	r1, #0
 8009fde:	f04f 0200 	mov.w	r2, #0
 8009fe2:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8009fe6:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8009fea:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8009fee:	4688      	mov	r8, r1
 8009ff0:	4691      	mov	r9, r2
 8009ff2:	eb1a 0508 	adds.w	r5, sl, r8
 8009ff6:	eb4b 0609 	adc.w	r6, fp, r9
 8009ffa:	687b      	ldr	r3, [r7, #4]
 8009ffc:	685b      	ldr	r3, [r3, #4]
 8009ffe:	4619      	mov	r1, r3
 800a000:	f04f 0200 	mov.w	r2, #0
 800a004:	f04f 0300 	mov.w	r3, #0
 800a008:	f04f 0400 	mov.w	r4, #0
 800a00c:	0094      	lsls	r4, r2, #2
 800a00e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800a012:	008b      	lsls	r3, r1, #2
 800a014:	461a      	mov	r2, r3
 800a016:	4623      	mov	r3, r4
 800a018:	4628      	mov	r0, r5
 800a01a:	4631      	mov	r1, r6
 800a01c:	f7f6 fd90 	bl	8000b40 <__aeabi_uldivmod>
 800a020:	4603      	mov	r3, r0
 800a022:	460c      	mov	r4, r1
 800a024:	461a      	mov	r2, r3
 800a026:	4b50      	ldr	r3, [pc, #320]	; (800a168 <UART_SetConfig+0x6f4>)
 800a028:	fba3 2302 	umull	r2, r3, r3, r2
 800a02c:	095b      	lsrs	r3, r3, #5
 800a02e:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800a032:	68bb      	ldr	r3, [r7, #8]
 800a034:	469b      	mov	fp, r3
 800a036:	f04f 0c00 	mov.w	ip, #0
 800a03a:	46d9      	mov	r9, fp
 800a03c:	46e2      	mov	sl, ip
 800a03e:	eb19 0309 	adds.w	r3, r9, r9
 800a042:	eb4a 040a 	adc.w	r4, sl, sl
 800a046:	4699      	mov	r9, r3
 800a048:	46a2      	mov	sl, r4
 800a04a:	eb19 090b 	adds.w	r9, r9, fp
 800a04e:	eb4a 0a0c 	adc.w	sl, sl, ip
 800a052:	f04f 0100 	mov.w	r1, #0
 800a056:	f04f 0200 	mov.w	r2, #0
 800a05a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800a05e:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800a062:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800a066:	4689      	mov	r9, r1
 800a068:	4692      	mov	sl, r2
 800a06a:	eb1b 0509 	adds.w	r5, fp, r9
 800a06e:	eb4c 060a 	adc.w	r6, ip, sl
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	685b      	ldr	r3, [r3, #4]
 800a076:	4619      	mov	r1, r3
 800a078:	f04f 0200 	mov.w	r2, #0
 800a07c:	f04f 0300 	mov.w	r3, #0
 800a080:	f04f 0400 	mov.w	r4, #0
 800a084:	0094      	lsls	r4, r2, #2
 800a086:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800a08a:	008b      	lsls	r3, r1, #2
 800a08c:	461a      	mov	r2, r3
 800a08e:	4623      	mov	r3, r4
 800a090:	4628      	mov	r0, r5
 800a092:	4631      	mov	r1, r6
 800a094:	f7f6 fd54 	bl	8000b40 <__aeabi_uldivmod>
 800a098:	4603      	mov	r3, r0
 800a09a:	460c      	mov	r4, r1
 800a09c:	461a      	mov	r2, r3
 800a09e:	4b32      	ldr	r3, [pc, #200]	; (800a168 <UART_SetConfig+0x6f4>)
 800a0a0:	fba3 1302 	umull	r1, r3, r3, r2
 800a0a4:	095b      	lsrs	r3, r3, #5
 800a0a6:	2164      	movs	r1, #100	; 0x64
 800a0a8:	fb01 f303 	mul.w	r3, r1, r3
 800a0ac:	1ad3      	subs	r3, r2, r3
 800a0ae:	011b      	lsls	r3, r3, #4
 800a0b0:	3332      	adds	r3, #50	; 0x32
 800a0b2:	4a2d      	ldr	r2, [pc, #180]	; (800a168 <UART_SetConfig+0x6f4>)
 800a0b4:	fba2 2303 	umull	r2, r3, r2, r3
 800a0b8:	095b      	lsrs	r3, r3, #5
 800a0ba:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800a0be:	4498      	add	r8, r3
 800a0c0:	68bb      	ldr	r3, [r7, #8]
 800a0c2:	469b      	mov	fp, r3
 800a0c4:	f04f 0c00 	mov.w	ip, #0
 800a0c8:	46d9      	mov	r9, fp
 800a0ca:	46e2      	mov	sl, ip
 800a0cc:	eb19 0309 	adds.w	r3, r9, r9
 800a0d0:	eb4a 040a 	adc.w	r4, sl, sl
 800a0d4:	4699      	mov	r9, r3
 800a0d6:	46a2      	mov	sl, r4
 800a0d8:	eb19 090b 	adds.w	r9, r9, fp
 800a0dc:	eb4a 0a0c 	adc.w	sl, sl, ip
 800a0e0:	f04f 0100 	mov.w	r1, #0
 800a0e4:	f04f 0200 	mov.w	r2, #0
 800a0e8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800a0ec:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800a0f0:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800a0f4:	4689      	mov	r9, r1
 800a0f6:	4692      	mov	sl, r2
 800a0f8:	eb1b 0509 	adds.w	r5, fp, r9
 800a0fc:	eb4c 060a 	adc.w	r6, ip, sl
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	685b      	ldr	r3, [r3, #4]
 800a104:	4619      	mov	r1, r3
 800a106:	f04f 0200 	mov.w	r2, #0
 800a10a:	f04f 0300 	mov.w	r3, #0
 800a10e:	f04f 0400 	mov.w	r4, #0
 800a112:	0094      	lsls	r4, r2, #2
 800a114:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800a118:	008b      	lsls	r3, r1, #2
 800a11a:	461a      	mov	r2, r3
 800a11c:	4623      	mov	r3, r4
 800a11e:	4628      	mov	r0, r5
 800a120:	4631      	mov	r1, r6
 800a122:	f7f6 fd0d 	bl	8000b40 <__aeabi_uldivmod>
 800a126:	4603      	mov	r3, r0
 800a128:	460c      	mov	r4, r1
 800a12a:	461a      	mov	r2, r3
 800a12c:	4b0e      	ldr	r3, [pc, #56]	; (800a168 <UART_SetConfig+0x6f4>)
 800a12e:	fba3 1302 	umull	r1, r3, r3, r2
 800a132:	095b      	lsrs	r3, r3, #5
 800a134:	2164      	movs	r1, #100	; 0x64
 800a136:	fb01 f303 	mul.w	r3, r1, r3
 800a13a:	1ad3      	subs	r3, r2, r3
 800a13c:	011b      	lsls	r3, r3, #4
 800a13e:	3332      	adds	r3, #50	; 0x32
 800a140:	4a09      	ldr	r2, [pc, #36]	; (800a168 <UART_SetConfig+0x6f4>)
 800a142:	fba2 2303 	umull	r2, r3, r2, r3
 800a146:	095b      	lsrs	r3, r3, #5
 800a148:	f003 020f 	and.w	r2, r3, #15
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	681b      	ldr	r3, [r3, #0]
 800a150:	4442      	add	r2, r8
 800a152:	609a      	str	r2, [r3, #8]
}
 800a154:	e7ff      	b.n	800a156 <UART_SetConfig+0x6e2>
 800a156:	bf00      	nop
 800a158:	3714      	adds	r7, #20
 800a15a:	46bd      	mov	sp, r7
 800a15c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a160:	40011000 	.word	0x40011000
 800a164:	40011400 	.word	0x40011400
 800a168:	51eb851f 	.word	0x51eb851f

0800a16c <__errno>:
 800a16c:	4b01      	ldr	r3, [pc, #4]	; (800a174 <__errno+0x8>)
 800a16e:	6818      	ldr	r0, [r3, #0]
 800a170:	4770      	bx	lr
 800a172:	bf00      	nop
 800a174:	20000010 	.word	0x20000010

0800a178 <__libc_init_array>:
 800a178:	b570      	push	{r4, r5, r6, lr}
 800a17a:	4e0d      	ldr	r6, [pc, #52]	; (800a1b0 <__libc_init_array+0x38>)
 800a17c:	4c0d      	ldr	r4, [pc, #52]	; (800a1b4 <__libc_init_array+0x3c>)
 800a17e:	1ba4      	subs	r4, r4, r6
 800a180:	10a4      	asrs	r4, r4, #2
 800a182:	2500      	movs	r5, #0
 800a184:	42a5      	cmp	r5, r4
 800a186:	d109      	bne.n	800a19c <__libc_init_array+0x24>
 800a188:	4e0b      	ldr	r6, [pc, #44]	; (800a1b8 <__libc_init_array+0x40>)
 800a18a:	4c0c      	ldr	r4, [pc, #48]	; (800a1bc <__libc_init_array+0x44>)
 800a18c:	f000 fb3e 	bl	800a80c <_init>
 800a190:	1ba4      	subs	r4, r4, r6
 800a192:	10a4      	asrs	r4, r4, #2
 800a194:	2500      	movs	r5, #0
 800a196:	42a5      	cmp	r5, r4
 800a198:	d105      	bne.n	800a1a6 <__libc_init_array+0x2e>
 800a19a:	bd70      	pop	{r4, r5, r6, pc}
 800a19c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800a1a0:	4798      	blx	r3
 800a1a2:	3501      	adds	r5, #1
 800a1a4:	e7ee      	b.n	800a184 <__libc_init_array+0xc>
 800a1a6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800a1aa:	4798      	blx	r3
 800a1ac:	3501      	adds	r5, #1
 800a1ae:	e7f2      	b.n	800a196 <__libc_init_array+0x1e>
 800a1b0:	0800a968 	.word	0x0800a968
 800a1b4:	0800a968 	.word	0x0800a968
 800a1b8:	0800a968 	.word	0x0800a968
 800a1bc:	0800a96c 	.word	0x0800a96c

0800a1c0 <__itoa>:
 800a1c0:	1e93      	subs	r3, r2, #2
 800a1c2:	2b22      	cmp	r3, #34	; 0x22
 800a1c4:	b510      	push	{r4, lr}
 800a1c6:	460c      	mov	r4, r1
 800a1c8:	d904      	bls.n	800a1d4 <__itoa+0x14>
 800a1ca:	2300      	movs	r3, #0
 800a1cc:	700b      	strb	r3, [r1, #0]
 800a1ce:	461c      	mov	r4, r3
 800a1d0:	4620      	mov	r0, r4
 800a1d2:	bd10      	pop	{r4, pc}
 800a1d4:	2a0a      	cmp	r2, #10
 800a1d6:	d109      	bne.n	800a1ec <__itoa+0x2c>
 800a1d8:	2800      	cmp	r0, #0
 800a1da:	da07      	bge.n	800a1ec <__itoa+0x2c>
 800a1dc:	232d      	movs	r3, #45	; 0x2d
 800a1de:	700b      	strb	r3, [r1, #0]
 800a1e0:	4240      	negs	r0, r0
 800a1e2:	2101      	movs	r1, #1
 800a1e4:	4421      	add	r1, r4
 800a1e6:	f000 f80d 	bl	800a204 <__utoa>
 800a1ea:	e7f1      	b.n	800a1d0 <__itoa+0x10>
 800a1ec:	2100      	movs	r1, #0
 800a1ee:	e7f9      	b.n	800a1e4 <__itoa+0x24>

0800a1f0 <itoa>:
 800a1f0:	f7ff bfe6 	b.w	800a1c0 <__itoa>

0800a1f4 <memset>:
 800a1f4:	4402      	add	r2, r0
 800a1f6:	4603      	mov	r3, r0
 800a1f8:	4293      	cmp	r3, r2
 800a1fa:	d100      	bne.n	800a1fe <memset+0xa>
 800a1fc:	4770      	bx	lr
 800a1fe:	f803 1b01 	strb.w	r1, [r3], #1
 800a202:	e7f9      	b.n	800a1f8 <memset+0x4>

0800a204 <__utoa>:
 800a204:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a206:	4b1d      	ldr	r3, [pc, #116]	; (800a27c <__utoa+0x78>)
 800a208:	b08b      	sub	sp, #44	; 0x2c
 800a20a:	4605      	mov	r5, r0
 800a20c:	460c      	mov	r4, r1
 800a20e:	466e      	mov	r6, sp
 800a210:	f103 0c20 	add.w	ip, r3, #32
 800a214:	6818      	ldr	r0, [r3, #0]
 800a216:	6859      	ldr	r1, [r3, #4]
 800a218:	4637      	mov	r7, r6
 800a21a:	c703      	stmia	r7!, {r0, r1}
 800a21c:	3308      	adds	r3, #8
 800a21e:	4563      	cmp	r3, ip
 800a220:	463e      	mov	r6, r7
 800a222:	d1f7      	bne.n	800a214 <__utoa+0x10>
 800a224:	6818      	ldr	r0, [r3, #0]
 800a226:	791b      	ldrb	r3, [r3, #4]
 800a228:	713b      	strb	r3, [r7, #4]
 800a22a:	1e93      	subs	r3, r2, #2
 800a22c:	2b22      	cmp	r3, #34	; 0x22
 800a22e:	6038      	str	r0, [r7, #0]
 800a230:	f04f 0300 	mov.w	r3, #0
 800a234:	d904      	bls.n	800a240 <__utoa+0x3c>
 800a236:	7023      	strb	r3, [r4, #0]
 800a238:	461c      	mov	r4, r3
 800a23a:	4620      	mov	r0, r4
 800a23c:	b00b      	add	sp, #44	; 0x2c
 800a23e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a240:	1e66      	subs	r6, r4, #1
 800a242:	fbb5 f0f2 	udiv	r0, r5, r2
 800a246:	af0a      	add	r7, sp, #40	; 0x28
 800a248:	fb02 5510 	mls	r5, r2, r0, r5
 800a24c:	443d      	add	r5, r7
 800a24e:	1c59      	adds	r1, r3, #1
 800a250:	f815 5c28 	ldrb.w	r5, [r5, #-40]
 800a254:	f806 5f01 	strb.w	r5, [r6, #1]!
 800a258:	4605      	mov	r5, r0
 800a25a:	b968      	cbnz	r0, 800a278 <__utoa+0x74>
 800a25c:	5460      	strb	r0, [r4, r1]
 800a25e:	4423      	add	r3, r4
 800a260:	4622      	mov	r2, r4
 800a262:	1b19      	subs	r1, r3, r4
 800a264:	1b10      	subs	r0, r2, r4
 800a266:	4281      	cmp	r1, r0
 800a268:	dde7      	ble.n	800a23a <__utoa+0x36>
 800a26a:	7811      	ldrb	r1, [r2, #0]
 800a26c:	7818      	ldrb	r0, [r3, #0]
 800a26e:	f802 0b01 	strb.w	r0, [r2], #1
 800a272:	f803 1901 	strb.w	r1, [r3], #-1
 800a276:	e7f4      	b.n	800a262 <__utoa+0x5e>
 800a278:	460b      	mov	r3, r1
 800a27a:	e7e2      	b.n	800a242 <__utoa+0x3e>
 800a27c:	0800a934 	.word	0x0800a934

0800a280 <log10>:
 800a280:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a282:	ed2d 8b02 	vpush	{d8}
 800a286:	b08b      	sub	sp, #44	; 0x2c
 800a288:	ec55 4b10 	vmov	r4, r5, d0
 800a28c:	f000 f878 	bl	800a380 <__ieee754_log10>
 800a290:	4b36      	ldr	r3, [pc, #216]	; (800a36c <log10+0xec>)
 800a292:	eeb0 8a40 	vmov.f32	s16, s0
 800a296:	eef0 8a60 	vmov.f32	s17, s1
 800a29a:	f993 6000 	ldrsb.w	r6, [r3]
 800a29e:	1c73      	adds	r3, r6, #1
 800a2a0:	d05c      	beq.n	800a35c <log10+0xdc>
 800a2a2:	4622      	mov	r2, r4
 800a2a4:	462b      	mov	r3, r5
 800a2a6:	4620      	mov	r0, r4
 800a2a8:	4629      	mov	r1, r5
 800a2aa:	f7f6 fbeb 	bl	8000a84 <__aeabi_dcmpun>
 800a2ae:	4607      	mov	r7, r0
 800a2b0:	2800      	cmp	r0, #0
 800a2b2:	d153      	bne.n	800a35c <log10+0xdc>
 800a2b4:	2200      	movs	r2, #0
 800a2b6:	2300      	movs	r3, #0
 800a2b8:	4620      	mov	r0, r4
 800a2ba:	4629      	mov	r1, r5
 800a2bc:	f7f6 fbc4 	bl	8000a48 <__aeabi_dcmple>
 800a2c0:	2800      	cmp	r0, #0
 800a2c2:	d04b      	beq.n	800a35c <log10+0xdc>
 800a2c4:	4b2a      	ldr	r3, [pc, #168]	; (800a370 <log10+0xf0>)
 800a2c6:	9301      	str	r3, [sp, #4]
 800a2c8:	9708      	str	r7, [sp, #32]
 800a2ca:	e9cd 4502 	strd	r4, r5, [sp, #8]
 800a2ce:	e9cd 4504 	strd	r4, r5, [sp, #16]
 800a2d2:	b9a6      	cbnz	r6, 800a2fe <log10+0x7e>
 800a2d4:	4b27      	ldr	r3, [pc, #156]	; (800a374 <log10+0xf4>)
 800a2d6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800a2da:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800a2de:	4620      	mov	r0, r4
 800a2e0:	2200      	movs	r2, #0
 800a2e2:	2300      	movs	r3, #0
 800a2e4:	4629      	mov	r1, r5
 800a2e6:	f7f6 fb9b 	bl	8000a20 <__aeabi_dcmpeq>
 800a2ea:	bb40      	cbnz	r0, 800a33e <log10+0xbe>
 800a2ec:	2301      	movs	r3, #1
 800a2ee:	2e02      	cmp	r6, #2
 800a2f0:	9300      	str	r3, [sp, #0]
 800a2f2:	d119      	bne.n	800a328 <log10+0xa8>
 800a2f4:	f7ff ff3a 	bl	800a16c <__errno>
 800a2f8:	2321      	movs	r3, #33	; 0x21
 800a2fa:	6003      	str	r3, [r0, #0]
 800a2fc:	e019      	b.n	800a332 <log10+0xb2>
 800a2fe:	4b1e      	ldr	r3, [pc, #120]	; (800a378 <log10+0xf8>)
 800a300:	2200      	movs	r2, #0
 800a302:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800a306:	4620      	mov	r0, r4
 800a308:	2200      	movs	r2, #0
 800a30a:	2300      	movs	r3, #0
 800a30c:	4629      	mov	r1, r5
 800a30e:	f7f6 fb87 	bl	8000a20 <__aeabi_dcmpeq>
 800a312:	2800      	cmp	r0, #0
 800a314:	d0ea      	beq.n	800a2ec <log10+0x6c>
 800a316:	2302      	movs	r3, #2
 800a318:	429e      	cmp	r6, r3
 800a31a:	9300      	str	r3, [sp, #0]
 800a31c:	d111      	bne.n	800a342 <log10+0xc2>
 800a31e:	f7ff ff25 	bl	800a16c <__errno>
 800a322:	2322      	movs	r3, #34	; 0x22
 800a324:	6003      	str	r3, [r0, #0]
 800a326:	e011      	b.n	800a34c <log10+0xcc>
 800a328:	4668      	mov	r0, sp
 800a32a:	f000 f8b3 	bl	800a494 <matherr>
 800a32e:	2800      	cmp	r0, #0
 800a330:	d0e0      	beq.n	800a2f4 <log10+0x74>
 800a332:	4812      	ldr	r0, [pc, #72]	; (800a37c <log10+0xfc>)
 800a334:	f000 f8b0 	bl	800a498 <nan>
 800a338:	ed8d 0b06 	vstr	d0, [sp, #24]
 800a33c:	e006      	b.n	800a34c <log10+0xcc>
 800a33e:	2302      	movs	r3, #2
 800a340:	9300      	str	r3, [sp, #0]
 800a342:	4668      	mov	r0, sp
 800a344:	f000 f8a6 	bl	800a494 <matherr>
 800a348:	2800      	cmp	r0, #0
 800a34a:	d0e8      	beq.n	800a31e <log10+0x9e>
 800a34c:	9b08      	ldr	r3, [sp, #32]
 800a34e:	b11b      	cbz	r3, 800a358 <log10+0xd8>
 800a350:	f7ff ff0c 	bl	800a16c <__errno>
 800a354:	9b08      	ldr	r3, [sp, #32]
 800a356:	6003      	str	r3, [r0, #0]
 800a358:	ed9d 8b06 	vldr	d8, [sp, #24]
 800a35c:	eeb0 0a48 	vmov.f32	s0, s16
 800a360:	eef0 0a68 	vmov.f32	s1, s17
 800a364:	b00b      	add	sp, #44	; 0x2c
 800a366:	ecbd 8b02 	vpop	{d8}
 800a36a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a36c:	20000074 	.word	0x20000074
 800a370:	0800a959 	.word	0x0800a959
 800a374:	c7efffff 	.word	0xc7efffff
 800a378:	fff00000 	.word	0xfff00000
 800a37c:	0800a95e 	.word	0x0800a95e

0800a380 <__ieee754_log10>:
 800a380:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a384:	ec55 4b10 	vmov	r4, r5, d0
 800a388:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
 800a38c:	462b      	mov	r3, r5
 800a38e:	da2f      	bge.n	800a3f0 <__ieee754_log10+0x70>
 800a390:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
 800a394:	4322      	orrs	r2, r4
 800a396:	d10a      	bne.n	800a3ae <__ieee754_log10+0x2e>
 800a398:	493b      	ldr	r1, [pc, #236]	; (800a488 <__ieee754_log10+0x108>)
 800a39a:	2200      	movs	r2, #0
 800a39c:	2300      	movs	r3, #0
 800a39e:	2000      	movs	r0, #0
 800a3a0:	f7f6 fa00 	bl	80007a4 <__aeabi_ddiv>
 800a3a4:	ec41 0b10 	vmov	d0, r0, r1
 800a3a8:	b003      	add	sp, #12
 800a3aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3ae:	2d00      	cmp	r5, #0
 800a3b0:	da08      	bge.n	800a3c4 <__ieee754_log10+0x44>
 800a3b2:	ee10 2a10 	vmov	r2, s0
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	4629      	mov	r1, r5
 800a3ba:	f7f5 ff11 	bl	80001e0 <__aeabi_dsub>
 800a3be:	2200      	movs	r2, #0
 800a3c0:	2300      	movs	r3, #0
 800a3c2:	e7ed      	b.n	800a3a0 <__ieee754_log10+0x20>
 800a3c4:	2200      	movs	r2, #0
 800a3c6:	4b31      	ldr	r3, [pc, #196]	; (800a48c <__ieee754_log10+0x10c>)
 800a3c8:	4629      	mov	r1, r5
 800a3ca:	ee10 0a10 	vmov	r0, s0
 800a3ce:	f7f6 f8bf 	bl	8000550 <__aeabi_dmul>
 800a3d2:	f06f 0235 	mvn.w	r2, #53	; 0x35
 800a3d6:	4604      	mov	r4, r0
 800a3d8:	460d      	mov	r5, r1
 800a3da:	460b      	mov	r3, r1
 800a3dc:	492c      	ldr	r1, [pc, #176]	; (800a490 <__ieee754_log10+0x110>)
 800a3de:	428b      	cmp	r3, r1
 800a3e0:	dd08      	ble.n	800a3f4 <__ieee754_log10+0x74>
 800a3e2:	4622      	mov	r2, r4
 800a3e4:	462b      	mov	r3, r5
 800a3e6:	4620      	mov	r0, r4
 800a3e8:	4629      	mov	r1, r5
 800a3ea:	f7f5 fefb 	bl	80001e4 <__adddf3>
 800a3ee:	e7d9      	b.n	800a3a4 <__ieee754_log10+0x24>
 800a3f0:	2200      	movs	r2, #0
 800a3f2:	e7f3      	b.n	800a3dc <__ieee754_log10+0x5c>
 800a3f4:	1518      	asrs	r0, r3, #20
 800a3f6:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
 800a3fa:	4410      	add	r0, r2
 800a3fc:	ea4f 79d0 	mov.w	r9, r0, lsr #31
 800a400:	4448      	add	r0, r9
 800a402:	f3c3 0813 	ubfx	r8, r3, #0, #20
 800a406:	f7f6 f839 	bl	800047c <__aeabi_i2d>
 800a40a:	f5c9 737f 	rsb	r3, r9, #1020	; 0x3fc
 800a40e:	3303      	adds	r3, #3
 800a410:	ea48 5503 	orr.w	r5, r8, r3, lsl #20
 800a414:	ec45 4b10 	vmov	d0, r4, r5
 800a418:	4606      	mov	r6, r0
 800a41a:	460f      	mov	r7, r1
 800a41c:	f000 f844 	bl	800a4a8 <__ieee754_log>
 800a420:	a313      	add	r3, pc, #76	; (adr r3, 800a470 <__ieee754_log10+0xf0>)
 800a422:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a426:	4630      	mov	r0, r6
 800a428:	4639      	mov	r1, r7
 800a42a:	ed8d 0b00 	vstr	d0, [sp]
 800a42e:	f7f6 f88f 	bl	8000550 <__aeabi_dmul>
 800a432:	ed9d 0b00 	vldr	d0, [sp]
 800a436:	4604      	mov	r4, r0
 800a438:	460d      	mov	r5, r1
 800a43a:	a30f      	add	r3, pc, #60	; (adr r3, 800a478 <__ieee754_log10+0xf8>)
 800a43c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a440:	ec51 0b10 	vmov	r0, r1, d0
 800a444:	f7f6 f884 	bl	8000550 <__aeabi_dmul>
 800a448:	4602      	mov	r2, r0
 800a44a:	460b      	mov	r3, r1
 800a44c:	4620      	mov	r0, r4
 800a44e:	4629      	mov	r1, r5
 800a450:	f7f5 fec8 	bl	80001e4 <__adddf3>
 800a454:	a30a      	add	r3, pc, #40	; (adr r3, 800a480 <__ieee754_log10+0x100>)
 800a456:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a45a:	4604      	mov	r4, r0
 800a45c:	460d      	mov	r5, r1
 800a45e:	4630      	mov	r0, r6
 800a460:	4639      	mov	r1, r7
 800a462:	f7f6 f875 	bl	8000550 <__aeabi_dmul>
 800a466:	4602      	mov	r2, r0
 800a468:	460b      	mov	r3, r1
 800a46a:	4620      	mov	r0, r4
 800a46c:	4629      	mov	r1, r5
 800a46e:	e7bc      	b.n	800a3ea <__ieee754_log10+0x6a>
 800a470:	11f12b36 	.word	0x11f12b36
 800a474:	3d59fef3 	.word	0x3d59fef3
 800a478:	1526e50e 	.word	0x1526e50e
 800a47c:	3fdbcb7b 	.word	0x3fdbcb7b
 800a480:	509f6000 	.word	0x509f6000
 800a484:	3fd34413 	.word	0x3fd34413
 800a488:	c3500000 	.word	0xc3500000
 800a48c:	43500000 	.word	0x43500000
 800a490:	7fefffff 	.word	0x7fefffff

0800a494 <matherr>:
 800a494:	2000      	movs	r0, #0
 800a496:	4770      	bx	lr

0800a498 <nan>:
 800a498:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800a4a0 <nan+0x8>
 800a49c:	4770      	bx	lr
 800a49e:	bf00      	nop
 800a4a0:	00000000 	.word	0x00000000
 800a4a4:	7ff80000 	.word	0x7ff80000

0800a4a8 <__ieee754_log>:
 800a4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a4ac:	ec51 0b10 	vmov	r0, r1, d0
 800a4b0:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800a4b4:	b087      	sub	sp, #28
 800a4b6:	460d      	mov	r5, r1
 800a4b8:	da27      	bge.n	800a50a <__ieee754_log+0x62>
 800a4ba:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800a4be:	4303      	orrs	r3, r0
 800a4c0:	ee10 2a10 	vmov	r2, s0
 800a4c4:	d10a      	bne.n	800a4dc <__ieee754_log+0x34>
 800a4c6:	49cc      	ldr	r1, [pc, #816]	; (800a7f8 <__ieee754_log+0x350>)
 800a4c8:	2200      	movs	r2, #0
 800a4ca:	2300      	movs	r3, #0
 800a4cc:	2000      	movs	r0, #0
 800a4ce:	f7f6 f969 	bl	80007a4 <__aeabi_ddiv>
 800a4d2:	ec41 0b10 	vmov	d0, r0, r1
 800a4d6:	b007      	add	sp, #28
 800a4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4dc:	2900      	cmp	r1, #0
 800a4de:	da05      	bge.n	800a4ec <__ieee754_log+0x44>
 800a4e0:	460b      	mov	r3, r1
 800a4e2:	f7f5 fe7d 	bl	80001e0 <__aeabi_dsub>
 800a4e6:	2200      	movs	r2, #0
 800a4e8:	2300      	movs	r3, #0
 800a4ea:	e7f0      	b.n	800a4ce <__ieee754_log+0x26>
 800a4ec:	4bc3      	ldr	r3, [pc, #780]	; (800a7fc <__ieee754_log+0x354>)
 800a4ee:	2200      	movs	r2, #0
 800a4f0:	f7f6 f82e 	bl	8000550 <__aeabi_dmul>
 800a4f4:	f06f 0335 	mvn.w	r3, #53	; 0x35
 800a4f8:	460d      	mov	r5, r1
 800a4fa:	4ac1      	ldr	r2, [pc, #772]	; (800a800 <__ieee754_log+0x358>)
 800a4fc:	4295      	cmp	r5, r2
 800a4fe:	dd06      	ble.n	800a50e <__ieee754_log+0x66>
 800a500:	4602      	mov	r2, r0
 800a502:	460b      	mov	r3, r1
 800a504:	f7f5 fe6e 	bl	80001e4 <__adddf3>
 800a508:	e7e3      	b.n	800a4d2 <__ieee754_log+0x2a>
 800a50a:	2300      	movs	r3, #0
 800a50c:	e7f5      	b.n	800a4fa <__ieee754_log+0x52>
 800a50e:	152c      	asrs	r4, r5, #20
 800a510:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800a514:	f3c5 0513 	ubfx	r5, r5, #0, #20
 800a518:	441c      	add	r4, r3
 800a51a:	f505 2315 	add.w	r3, r5, #610304	; 0x95000
 800a51e:	f603 7364 	addw	r3, r3, #3940	; 0xf64
 800a522:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800a526:	f083 527f 	eor.w	r2, r3, #1069547520	; 0x3fc00000
 800a52a:	f482 1240 	eor.w	r2, r2, #3145728	; 0x300000
 800a52e:	ea42 0105 	orr.w	r1, r2, r5
 800a532:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 800a536:	2200      	movs	r2, #0
 800a538:	4bb2      	ldr	r3, [pc, #712]	; (800a804 <__ieee754_log+0x35c>)
 800a53a:	f7f5 fe51 	bl	80001e0 <__aeabi_dsub>
 800a53e:	1cab      	adds	r3, r5, #2
 800a540:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a544:	2b02      	cmp	r3, #2
 800a546:	4682      	mov	sl, r0
 800a548:	468b      	mov	fp, r1
 800a54a:	f04f 0200 	mov.w	r2, #0
 800a54e:	dc53      	bgt.n	800a5f8 <__ieee754_log+0x150>
 800a550:	2300      	movs	r3, #0
 800a552:	f7f6 fa65 	bl	8000a20 <__aeabi_dcmpeq>
 800a556:	b1d0      	cbz	r0, 800a58e <__ieee754_log+0xe6>
 800a558:	2c00      	cmp	r4, #0
 800a55a:	f000 8120 	beq.w	800a79e <__ieee754_log+0x2f6>
 800a55e:	4620      	mov	r0, r4
 800a560:	f7f5 ff8c 	bl	800047c <__aeabi_i2d>
 800a564:	a390      	add	r3, pc, #576	; (adr r3, 800a7a8 <__ieee754_log+0x300>)
 800a566:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a56a:	4606      	mov	r6, r0
 800a56c:	460f      	mov	r7, r1
 800a56e:	f7f5 ffef 	bl	8000550 <__aeabi_dmul>
 800a572:	a38f      	add	r3, pc, #572	; (adr r3, 800a7b0 <__ieee754_log+0x308>)
 800a574:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a578:	4604      	mov	r4, r0
 800a57a:	460d      	mov	r5, r1
 800a57c:	4630      	mov	r0, r6
 800a57e:	4639      	mov	r1, r7
 800a580:	f7f5 ffe6 	bl	8000550 <__aeabi_dmul>
 800a584:	4602      	mov	r2, r0
 800a586:	460b      	mov	r3, r1
 800a588:	4620      	mov	r0, r4
 800a58a:	4629      	mov	r1, r5
 800a58c:	e7ba      	b.n	800a504 <__ieee754_log+0x5c>
 800a58e:	a38a      	add	r3, pc, #552	; (adr r3, 800a7b8 <__ieee754_log+0x310>)
 800a590:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a594:	4650      	mov	r0, sl
 800a596:	4659      	mov	r1, fp
 800a598:	f7f5 ffda 	bl	8000550 <__aeabi_dmul>
 800a59c:	4602      	mov	r2, r0
 800a59e:	460b      	mov	r3, r1
 800a5a0:	2000      	movs	r0, #0
 800a5a2:	4999      	ldr	r1, [pc, #612]	; (800a808 <__ieee754_log+0x360>)
 800a5a4:	f7f5 fe1c 	bl	80001e0 <__aeabi_dsub>
 800a5a8:	4652      	mov	r2, sl
 800a5aa:	4606      	mov	r6, r0
 800a5ac:	460f      	mov	r7, r1
 800a5ae:	465b      	mov	r3, fp
 800a5b0:	4650      	mov	r0, sl
 800a5b2:	4659      	mov	r1, fp
 800a5b4:	f7f5 ffcc 	bl	8000550 <__aeabi_dmul>
 800a5b8:	4602      	mov	r2, r0
 800a5ba:	460b      	mov	r3, r1
 800a5bc:	4630      	mov	r0, r6
 800a5be:	4639      	mov	r1, r7
 800a5c0:	f7f5 ffc6 	bl	8000550 <__aeabi_dmul>
 800a5c4:	4606      	mov	r6, r0
 800a5c6:	460f      	mov	r7, r1
 800a5c8:	b914      	cbnz	r4, 800a5d0 <__ieee754_log+0x128>
 800a5ca:	4632      	mov	r2, r6
 800a5cc:	463b      	mov	r3, r7
 800a5ce:	e0a0      	b.n	800a712 <__ieee754_log+0x26a>
 800a5d0:	4620      	mov	r0, r4
 800a5d2:	f7f5 ff53 	bl	800047c <__aeabi_i2d>
 800a5d6:	a374      	add	r3, pc, #464	; (adr r3, 800a7a8 <__ieee754_log+0x300>)
 800a5d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5dc:	4680      	mov	r8, r0
 800a5de:	4689      	mov	r9, r1
 800a5e0:	f7f5 ffb6 	bl	8000550 <__aeabi_dmul>
 800a5e4:	a372      	add	r3, pc, #456	; (adr r3, 800a7b0 <__ieee754_log+0x308>)
 800a5e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5ea:	4604      	mov	r4, r0
 800a5ec:	460d      	mov	r5, r1
 800a5ee:	4640      	mov	r0, r8
 800a5f0:	4649      	mov	r1, r9
 800a5f2:	f7f5 ffad 	bl	8000550 <__aeabi_dmul>
 800a5f6:	e0a5      	b.n	800a744 <__ieee754_log+0x29c>
 800a5f8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800a5fc:	f7f5 fdf2 	bl	80001e4 <__adddf3>
 800a600:	4602      	mov	r2, r0
 800a602:	460b      	mov	r3, r1
 800a604:	4650      	mov	r0, sl
 800a606:	4659      	mov	r1, fp
 800a608:	f7f6 f8cc 	bl	80007a4 <__aeabi_ddiv>
 800a60c:	e9cd 0100 	strd	r0, r1, [sp]
 800a610:	4620      	mov	r0, r4
 800a612:	f7f5 ff33 	bl	800047c <__aeabi_i2d>
 800a616:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a61a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a61e:	4610      	mov	r0, r2
 800a620:	4619      	mov	r1, r3
 800a622:	f7f5 ff95 	bl	8000550 <__aeabi_dmul>
 800a626:	4602      	mov	r2, r0
 800a628:	460b      	mov	r3, r1
 800a62a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a62e:	f7f5 ff8f 	bl	8000550 <__aeabi_dmul>
 800a632:	a363      	add	r3, pc, #396	; (adr r3, 800a7c0 <__ieee754_log+0x318>)
 800a634:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a638:	4680      	mov	r8, r0
 800a63a:	4689      	mov	r9, r1
 800a63c:	f7f5 ff88 	bl	8000550 <__aeabi_dmul>
 800a640:	a361      	add	r3, pc, #388	; (adr r3, 800a7c8 <__ieee754_log+0x320>)
 800a642:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a646:	f7f5 fdcd 	bl	80001e4 <__adddf3>
 800a64a:	4642      	mov	r2, r8
 800a64c:	464b      	mov	r3, r9
 800a64e:	f7f5 ff7f 	bl	8000550 <__aeabi_dmul>
 800a652:	a35f      	add	r3, pc, #380	; (adr r3, 800a7d0 <__ieee754_log+0x328>)
 800a654:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a658:	f7f5 fdc4 	bl	80001e4 <__adddf3>
 800a65c:	4642      	mov	r2, r8
 800a65e:	464b      	mov	r3, r9
 800a660:	f7f5 ff76 	bl	8000550 <__aeabi_dmul>
 800a664:	a35c      	add	r3, pc, #368	; (adr r3, 800a7d8 <__ieee754_log+0x330>)
 800a666:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a66a:	f7f5 fdbb 	bl	80001e4 <__adddf3>
 800a66e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a672:	f7f5 ff6d 	bl	8000550 <__aeabi_dmul>
 800a676:	a35a      	add	r3, pc, #360	; (adr r3, 800a7e0 <__ieee754_log+0x338>)
 800a678:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a67c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a680:	4640      	mov	r0, r8
 800a682:	4649      	mov	r1, r9
 800a684:	f7f5 ff64 	bl	8000550 <__aeabi_dmul>
 800a688:	a357      	add	r3, pc, #348	; (adr r3, 800a7e8 <__ieee754_log+0x340>)
 800a68a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a68e:	f7f5 fda9 	bl	80001e4 <__adddf3>
 800a692:	4642      	mov	r2, r8
 800a694:	464b      	mov	r3, r9
 800a696:	f7f5 ff5b 	bl	8000550 <__aeabi_dmul>
 800a69a:	a355      	add	r3, pc, #340	; (adr r3, 800a7f0 <__ieee754_log+0x348>)
 800a69c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a6a0:	f7f5 fda0 	bl	80001e4 <__adddf3>
 800a6a4:	4642      	mov	r2, r8
 800a6a6:	464b      	mov	r3, r9
 800a6a8:	f7f5 ff52 	bl	8000550 <__aeabi_dmul>
 800a6ac:	f5a5 26c2 	sub.w	r6, r5, #397312	; 0x61000
 800a6b0:	4602      	mov	r2, r0
 800a6b2:	460b      	mov	r3, r1
 800a6b4:	f5c5 25d7 	rsb	r5, r5, #440320	; 0x6b800
 800a6b8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a6bc:	f7f5 fd92 	bl	80001e4 <__adddf3>
 800a6c0:	f2a6 467a 	subw	r6, r6, #1146	; 0x47a
 800a6c4:	3551      	adds	r5, #81	; 0x51
 800a6c6:	4335      	orrs	r5, r6
 800a6c8:	2d00      	cmp	r5, #0
 800a6ca:	4680      	mov	r8, r0
 800a6cc:	4689      	mov	r9, r1
 800a6ce:	dd48      	ble.n	800a762 <__ieee754_log+0x2ba>
 800a6d0:	2200      	movs	r2, #0
 800a6d2:	4b4d      	ldr	r3, [pc, #308]	; (800a808 <__ieee754_log+0x360>)
 800a6d4:	4650      	mov	r0, sl
 800a6d6:	4659      	mov	r1, fp
 800a6d8:	f7f5 ff3a 	bl	8000550 <__aeabi_dmul>
 800a6dc:	4652      	mov	r2, sl
 800a6de:	465b      	mov	r3, fp
 800a6e0:	f7f5 ff36 	bl	8000550 <__aeabi_dmul>
 800a6e4:	4602      	mov	r2, r0
 800a6e6:	460b      	mov	r3, r1
 800a6e8:	4606      	mov	r6, r0
 800a6ea:	460f      	mov	r7, r1
 800a6ec:	4640      	mov	r0, r8
 800a6ee:	4649      	mov	r1, r9
 800a6f0:	f7f5 fd78 	bl	80001e4 <__adddf3>
 800a6f4:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a6f8:	f7f5 ff2a 	bl	8000550 <__aeabi_dmul>
 800a6fc:	4680      	mov	r8, r0
 800a6fe:	4689      	mov	r9, r1
 800a700:	b964      	cbnz	r4, 800a71c <__ieee754_log+0x274>
 800a702:	4602      	mov	r2, r0
 800a704:	460b      	mov	r3, r1
 800a706:	4630      	mov	r0, r6
 800a708:	4639      	mov	r1, r7
 800a70a:	f7f5 fd69 	bl	80001e0 <__aeabi_dsub>
 800a70e:	4602      	mov	r2, r0
 800a710:	460b      	mov	r3, r1
 800a712:	4650      	mov	r0, sl
 800a714:	4659      	mov	r1, fp
 800a716:	f7f5 fd63 	bl	80001e0 <__aeabi_dsub>
 800a71a:	e6da      	b.n	800a4d2 <__ieee754_log+0x2a>
 800a71c:	a322      	add	r3, pc, #136	; (adr r3, 800a7a8 <__ieee754_log+0x300>)
 800a71e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a722:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a726:	f7f5 ff13 	bl	8000550 <__aeabi_dmul>
 800a72a:	a321      	add	r3, pc, #132	; (adr r3, 800a7b0 <__ieee754_log+0x308>)
 800a72c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a730:	4604      	mov	r4, r0
 800a732:	460d      	mov	r5, r1
 800a734:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a738:	f7f5 ff0a 	bl	8000550 <__aeabi_dmul>
 800a73c:	4642      	mov	r2, r8
 800a73e:	464b      	mov	r3, r9
 800a740:	f7f5 fd50 	bl	80001e4 <__adddf3>
 800a744:	4602      	mov	r2, r0
 800a746:	460b      	mov	r3, r1
 800a748:	4630      	mov	r0, r6
 800a74a:	4639      	mov	r1, r7
 800a74c:	f7f5 fd48 	bl	80001e0 <__aeabi_dsub>
 800a750:	4652      	mov	r2, sl
 800a752:	465b      	mov	r3, fp
 800a754:	f7f5 fd44 	bl	80001e0 <__aeabi_dsub>
 800a758:	4602      	mov	r2, r0
 800a75a:	460b      	mov	r3, r1
 800a75c:	4620      	mov	r0, r4
 800a75e:	4629      	mov	r1, r5
 800a760:	e7d9      	b.n	800a716 <__ieee754_log+0x26e>
 800a762:	4602      	mov	r2, r0
 800a764:	460b      	mov	r3, r1
 800a766:	4650      	mov	r0, sl
 800a768:	4659      	mov	r1, fp
 800a76a:	f7f5 fd39 	bl	80001e0 <__aeabi_dsub>
 800a76e:	e9dd 2300 	ldrd	r2, r3, [sp]
 800a772:	f7f5 feed 	bl	8000550 <__aeabi_dmul>
 800a776:	4606      	mov	r6, r0
 800a778:	460f      	mov	r7, r1
 800a77a:	2c00      	cmp	r4, #0
 800a77c:	f43f af25 	beq.w	800a5ca <__ieee754_log+0x122>
 800a780:	a309      	add	r3, pc, #36	; (adr r3, 800a7a8 <__ieee754_log+0x300>)
 800a782:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a786:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a78a:	f7f5 fee1 	bl	8000550 <__aeabi_dmul>
 800a78e:	a308      	add	r3, pc, #32	; (adr r3, 800a7b0 <__ieee754_log+0x308>)
 800a790:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a794:	4604      	mov	r4, r0
 800a796:	460d      	mov	r5, r1
 800a798:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a79c:	e729      	b.n	800a5f2 <__ieee754_log+0x14a>
 800a79e:	2000      	movs	r0, #0
 800a7a0:	2100      	movs	r1, #0
 800a7a2:	e696      	b.n	800a4d2 <__ieee754_log+0x2a>
 800a7a4:	f3af 8000 	nop.w
 800a7a8:	fee00000 	.word	0xfee00000
 800a7ac:	3fe62e42 	.word	0x3fe62e42
 800a7b0:	35793c76 	.word	0x35793c76
 800a7b4:	3dea39ef 	.word	0x3dea39ef
 800a7b8:	55555555 	.word	0x55555555
 800a7bc:	3fd55555 	.word	0x3fd55555
 800a7c0:	df3e5244 	.word	0xdf3e5244
 800a7c4:	3fc2f112 	.word	0x3fc2f112
 800a7c8:	96cb03de 	.word	0x96cb03de
 800a7cc:	3fc74664 	.word	0x3fc74664
 800a7d0:	94229359 	.word	0x94229359
 800a7d4:	3fd24924 	.word	0x3fd24924
 800a7d8:	55555593 	.word	0x55555593
 800a7dc:	3fe55555 	.word	0x3fe55555
 800a7e0:	d078c69f 	.word	0xd078c69f
 800a7e4:	3fc39a09 	.word	0x3fc39a09
 800a7e8:	1d8e78af 	.word	0x1d8e78af
 800a7ec:	3fcc71c5 	.word	0x3fcc71c5
 800a7f0:	9997fa04 	.word	0x9997fa04
 800a7f4:	3fd99999 	.word	0x3fd99999
 800a7f8:	c3500000 	.word	0xc3500000
 800a7fc:	43500000 	.word	0x43500000
 800a800:	7fefffff 	.word	0x7fefffff
 800a804:	3ff00000 	.word	0x3ff00000
 800a808:	3fe00000 	.word	0x3fe00000

0800a80c <_init>:
 800a80c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a80e:	bf00      	nop
 800a810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a812:	bc08      	pop	{r3}
 800a814:	469e      	mov	lr, r3
 800a816:	4770      	bx	lr

0800a818 <_fini>:
 800a818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a81a:	bf00      	nop
 800a81c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a81e:	bc08      	pop	{r3}
 800a820:	469e      	mov	lr, r3
 800a822:	4770      	bx	lr
